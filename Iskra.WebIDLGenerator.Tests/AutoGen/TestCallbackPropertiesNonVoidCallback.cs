// <auto-generated/>

namespace Iskra.WebIDLGenerator.Tests;

#nullable enable

public delegate int TestCallbackPropertiesNonVoidCallbackManaged(int a, int b);

public partial class TestCallbackPropertiesNonVoidCallback(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public static implicit operator TestCallbackPropertiesNonVoidCallback(TestCallbackPropertiesNonVoidCallbackManaged input)
    {
        Action<global::System.Runtime.InteropServices.JavaScript.JSObject, global::System.Runtime.InteropServices.JavaScript.JSObject> callback = (__args_369, __res_376) =>
        {
            using (__args_369)
            using (__res_376)
            {
                // Argument 1
                int __arg_371;
                double __res_372 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(__args_369, 0);
                __arg_371 = Convert.ToInt32(__res_372);

                // Argument 2
                int __arg_373;
                double __res_374 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(__args_369, 1);
                __arg_373 = Convert.ToInt32(__res_374);

                int __managedRes_377 = input(__arg_371, __arg_373);

                double __marshalledValue_378;
                __marshalledValue_378 = Convert.ToDouble(__managedRes_377);
                global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsDoubleV2(__res_376, "value", __marshalledValue_378);
            }
        };

        global::System.Runtime.InteropServices.JavaScript.JSObject __funcObj_375 = global::Iskra.JSCore.Extensions.JSFunctionExtensions.WrapAsNonVoidFunction(callback);
        global::Iskra.JSCore.Extensions.JSFunctionExtensions.StoreManagedFunctionToProperty(__funcObj_375, input); 

        return new global::Iskra.WebIDLGenerator.Tests.TestCallbackPropertiesNonVoidCallback(__funcObj_375);
    }

    public bool TryGetManaged([global::System.Diagnostics.CodeAnalysis.NotNullWhenAttribute(true)] out global::Iskra.WebIDLGenerator.Tests.TestCallbackPropertiesNonVoidCallbackManaged? managed, bool allowConversion = false)
    {
        managed = global::Iskra.JSCore.Extensions.JSFunctionExtensions.GetManagedFunctionFromProperty(JSObject) as global::Iskra.WebIDLGenerator.Tests.TestCallbackPropertiesNonVoidCallbackManaged;
        if (managed is not null)
        {
            return true;
        }

        if (!allowConversion)
        {
            return false;
        }

        managed = (a, b) =>
        {
            int __argsArrayLength_382 = 2;

            using global::Iskra.JSCore.ArgsArrayPool.Owner __argsArray_379 = global::Iskra.JSCore.ArgsArrayPool.Shared.Rent(__argsArrayLength_382);

            // Argument 1
            double __marshalledValue_383;
            __marshalledValue_383 = Convert.ToDouble(a);
            global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsDoubleV2(__argsArray_379.JSObject, 0, __marshalledValue_383);

            // Argument 2
            double __marshalledValue_384;
            __marshalledValue_384 = Convert.ToDouble(b);
            global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsDoubleV2(__argsArray_379.JSObject, 1, __marshalledValue_384);

            using global::Iskra.JSCore.FunctionResPool.Owner __resOwner_380 = global::Iskra.JSCore.FunctionResPool.Shared.Rent();

            global::Iskra.JSCore.Extensions.JSFunctionExtensions.CallNonEmptyNonVoidFunction(JSObject, null, __argsArray_379.JSObject, __resOwner_380.JSObject);

            // Return Value
            int __res_381;
            double __res_385 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(__resOwner_380.JSObject, "value");
            __res_381 = Convert.ToInt32(__res_385);
            return __res_381;
        };
        return true;
    }
}

#nullable disable