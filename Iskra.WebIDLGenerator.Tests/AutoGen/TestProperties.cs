// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.WebIDLGenerator.Tests;

#nullable enable

public partial class TestProperties(JSObject obj): JSObjectProxy(obj)
{
    public int IntProperty
    {
        get
        {
            int __res_0;
            throw new Exception();
            return __res_0;
        }
        set
        {
            throw new Exception();
        }
    }

    public int IntPropertyReadOnly
    {
        get
        {
            int __res_1;
            throw new Exception();
            return __res_1;
        }
    }

    public int? IntPropertyNullable
    {
        get
        {
            int? __res_2;
            throw new Exception();
            return __res_2;
        }
        set
        {
            throw new Exception();
        }
    }

    public int? IntPropertyReadOnlyNullableAsNull
    {
        get
        {
            int? __res_3;
            throw new Exception();
            return __res_3;
        }
    }

    public int? IntPropertyReadOnlyNullableAsNotNull
    {
        get
        {
            int? __res_4;
            throw new Exception();
            return __res_4;
        }
    }

    public double DoubleProperty
    {
        get
        {
            double __res_5;
            throw new Exception();
            return __res_5;
        }
        set
        {
            throw new Exception();
        }
    }

    public double DoublePropertyReadOnly
    {
        get
        {
            double __res_6;
            throw new Exception();
            return __res_6;
        }
    }

    public double? DoublePropertyNullable
    {
        get
        {
            double? __res_7;
            throw new Exception();
            return __res_7;
        }
        set
        {
            throw new Exception();
        }
    }

    public double? DoublePropertyReadOnlyNullableAsNull
    {
        get
        {
            double? __res_8;
            throw new Exception();
            return __res_8;
        }
    }

    public double? DoublePropertyReadOnlyNullableAsNotNull
    {
        get
        {
            double? __res_9;
            throw new Exception();
            return __res_9;
        }
    }

    public bool BoolProperty
    {
        get
        {
            bool __res_10;
            __res_10 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "boolProperty");
            return __res_10;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool BoolPropertyReadOnly
    {
        get
        {
            bool __res_11;
            __res_11 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "boolPropertyReadOnly");
            return __res_11;
        }
    }

    public bool? BoolPropertyNullable
    {
        get
        {
            bool? __res_12;
            __res_12 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2AsNullable(JSObject, "boolPropertyNullable");
            return __res_12;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool? BoolPropertyReadOnlyNullableAsNull
    {
        get
        {
            bool? __res_13;
            __res_13 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2AsNullable(JSObject, "boolPropertyReadOnlyNullableAsNull");
            return __res_13;
        }
    }

    public bool? BoolPropertyReadOnlyNullableAsTrue
    {
        get
        {
            bool? __res_14;
            __res_14 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2AsNullable(JSObject, "boolPropertyReadOnlyNullableAsTrue");
            return __res_14;
        }
    }

    public bool? BoolPropertyReadOnlyNullableAsFalse
    {
        get
        {
            bool? __res_15;
            __res_15 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2AsNullable(JSObject, "boolPropertyReadOnlyNullableAsFalse");
            return __res_15;
        }
    }

    public string StringProperty
    {
        get
        {
            string __res_16;
            throw new Exception();
            return __res_16;
        }
        set
        {
            throw new Exception();
        }
    }

    public string StringPropertyReadOnly
    {
        get
        {
            string __res_17;
            throw new Exception();
            return __res_17;
        }
    }

    public string? StringPropertyNullable
    {
        get
        {
            string? __res_18;
            throw new Exception();
            return __res_18;
        }
        set
        {
            throw new Exception();
        }
    }

    public string? StringPropertyReadOnlyNullableAsNull
    {
        get
        {
            string? __res_19;
            throw new Exception();
            return __res_19;
        }
    }

    public string? StringPropertyReadOnlyNullableAsNotNull
    {
        get
        {
            string? __res_20;
            throw new Exception();
            return __res_20;
        }
    }

    public string? StringPropertyReadOnlyNullableAsEmpty
    {
        get
        {
            string? __res_21;
            throw new Exception();
            return __res_21;
        }
    }
}

#nullable disable