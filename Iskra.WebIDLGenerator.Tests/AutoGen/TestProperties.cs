// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.WebIDLGenerator.Tests;

#nullable enable

public partial class TestProperties(JSObject obj): JSObjectProxy(obj)
{
    public int IntProperty
    {
        get
        {
            int __res_0;
            double __res_1 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "intProperty");
            __res_0 = Convert.ToInt32(__res_1);
            return __res_0;
        }
        set
        {
            throw new Exception();
        }
    }

    public int IntPropertyReadOnly
    {
        get
        {
            int __res_2;
            double __res_3 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "intPropertyReadOnly");
            __res_2 = Convert.ToInt32(__res_3);
            return __res_2;
        }
    }

    public int? IntPropertyNullable
    {
        get
        {
            int? __res_4;
            double? __res_5 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "intPropertyNullable");
            if (__res_5 is null)
            {
                __res_4 = null;
            }
            else
            {
                double __notNullable_6 = (double)__res_5;
                __res_4 = Convert.ToInt32(__notNullable_6);
            }
            return __res_4;
        }
        set
        {
            throw new Exception();
        }
    }

    public int? IntPropertyReadOnlyNullableAsNull
    {
        get
        {
            int? __res_7;
            double? __res_8 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "intPropertyReadOnlyNullableAsNull");
            if (__res_8 is null)
            {
                __res_7 = null;
            }
            else
            {
                double __notNullable_9 = (double)__res_8;
                __res_7 = Convert.ToInt32(__notNullable_9);
            }
            return __res_7;
        }
    }

    public int? IntPropertyReadOnlyNullableAsNotNull
    {
        get
        {
            int? __res_10;
            double? __res_11 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "intPropertyReadOnlyNullableAsNotNull");
            if (__res_11 is null)
            {
                __res_10 = null;
            }
            else
            {
                double __notNullable_12 = (double)__res_11;
                __res_10 = Convert.ToInt32(__notNullable_12);
            }
            return __res_10;
        }
    }

    public double DoubleProperty
    {
        get
        {
            double __res_13;
            double __res_14 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "doubleProperty");
            __res_13 = __res_14;
            return __res_13;
        }
        set
        {
            throw new Exception();
        }
    }

    public double DoublePropertyReadOnly
    {
        get
        {
            double __res_15;
            double __res_16 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "doublePropertyReadOnly");
            __res_15 = __res_16;
            return __res_15;
        }
    }

    public double? DoublePropertyNullable
    {
        get
        {
            double? __res_17;
            double? __res_18 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "doublePropertyNullable");
            if (__res_18 is null)
            {
                __res_17 = null;
            }
            else
            {
                double __notNullable_19 = (double)__res_18;
                __res_17 = __notNullable_19;
            }
            return __res_17;
        }
        set
        {
            throw new Exception();
        }
    }

    public double? DoublePropertyReadOnlyNullableAsNull
    {
        get
        {
            double? __res_20;
            double? __res_21 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "doublePropertyReadOnlyNullableAsNull");
            if (__res_21 is null)
            {
                __res_20 = null;
            }
            else
            {
                double __notNullable_22 = (double)__res_21;
                __res_20 = __notNullable_22;
            }
            return __res_20;
        }
    }

    public double? DoublePropertyReadOnlyNullableAsNotNull
    {
        get
        {
            double? __res_23;
            double? __res_24 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "doublePropertyReadOnlyNullableAsNotNull");
            if (__res_24 is null)
            {
                __res_23 = null;
            }
            else
            {
                double __notNullable_25 = (double)__res_24;
                __res_23 = __notNullable_25;
            }
            return __res_23;
        }
    }

    public bool BoolProperty
    {
        get
        {
            bool __res_26;
            bool __res_27 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "boolProperty");
            __res_26 = __res_27;
            return __res_26;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool BoolPropertyReadOnly
    {
        get
        {
            bool __res_28;
            bool __res_29 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "boolPropertyReadOnly");
            __res_28 = __res_29;
            return __res_28;
        }
    }

    public bool? BoolPropertyNullable
    {
        get
        {
            bool? __res_30;
            bool? __res_31 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2AsNullable(JSObject, "boolPropertyNullable");
            if (__res_31 is null)
            {
                __res_30 = null;
            }
            else
            {
                bool __notNullable_32 = (bool)__res_31;
                __res_30 = __notNullable_32;
            }
            return __res_30;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool? BoolPropertyReadOnlyNullableAsNull
    {
        get
        {
            bool? __res_33;
            bool? __res_34 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2AsNullable(JSObject, "boolPropertyReadOnlyNullableAsNull");
            if (__res_34 is null)
            {
                __res_33 = null;
            }
            else
            {
                bool __notNullable_35 = (bool)__res_34;
                __res_33 = __notNullable_35;
            }
            return __res_33;
        }
    }

    public bool? BoolPropertyReadOnlyNullableAsTrue
    {
        get
        {
            bool? __res_36;
            bool? __res_37 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2AsNullable(JSObject, "boolPropertyReadOnlyNullableAsTrue");
            if (__res_37 is null)
            {
                __res_36 = null;
            }
            else
            {
                bool __notNullable_38 = (bool)__res_37;
                __res_36 = __notNullable_38;
            }
            return __res_36;
        }
    }

    public bool? BoolPropertyReadOnlyNullableAsFalse
    {
        get
        {
            bool? __res_39;
            bool? __res_40 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2AsNullable(JSObject, "boolPropertyReadOnlyNullableAsFalse");
            if (__res_40 is null)
            {
                __res_39 = null;
            }
            else
            {
                bool __notNullable_41 = (bool)__res_40;
                __res_39 = __notNullable_41;
            }
            return __res_39;
        }
    }

    public string StringProperty
    {
        get
        {
            string __res_42;
            string __res_43 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "stringProperty");
            __res_42 = __res_43;
            return __res_42;
        }
        set
        {
            throw new Exception();
        }
    }

    public string StringPropertyReadOnly
    {
        get
        {
            string __res_44;
            string __res_45 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "stringPropertyReadOnly");
            __res_44 = __res_45;
            return __res_44;
        }
    }

    public string? StringPropertyNullable
    {
        get
        {
            string? __res_46;
            string? __res_47 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "stringPropertyNullable");
            if (__res_47 is null)
            {
                __res_46 = null;
            }
            else
            {
                string __notNullable_48 = (string)__res_47;
                __res_46 = __notNullable_48;
            }
            return __res_46;
        }
        set
        {
            throw new Exception();
        }
    }

    public string? StringPropertyReadOnlyNullableAsNull
    {
        get
        {
            string? __res_49;
            string? __res_50 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "stringPropertyReadOnlyNullableAsNull");
            if (__res_50 is null)
            {
                __res_49 = null;
            }
            else
            {
                string __notNullable_51 = (string)__res_50;
                __res_49 = __notNullable_51;
            }
            return __res_49;
        }
    }

    public string? StringPropertyReadOnlyNullableAsNotNull
    {
        get
        {
            string? __res_52;
            string? __res_53 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "stringPropertyReadOnlyNullableAsNotNull");
            if (__res_53 is null)
            {
                __res_52 = null;
            }
            else
            {
                string __notNullable_54 = (string)__res_53;
                __res_52 = __notNullable_54;
            }
            return __res_52;
        }
    }

    public string? StringPropertyReadOnlyNullableAsEmpty
    {
        get
        {
            string? __res_55;
            string? __res_56 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "stringPropertyReadOnlyNullableAsEmpty");
            if (__res_56 is null)
            {
                __res_55 = null;
            }
            else
            {
                string __notNullable_57 = (string)__res_56;
                __res_55 = __notNullable_57;
            }
            return __res_55;
        }
    }
}

#nullable disable