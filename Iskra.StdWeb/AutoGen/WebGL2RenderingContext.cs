// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class WebGL2RenderingContext(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public global::Iskra.JSCore.Generics.Union<global::Iskra.StdWeb.HTMLCanvasElement, global::Iskra.StdWeb.OffscreenCanvas, global::Iskra.StdWeb.GenericMarshaller.Union> Canvas
    {
        get
        {
            global::Iskra.JSCore.Generics.Union<global::Iskra.StdWeb.HTMLCanvasElement, global::Iskra.StdWeb.OffscreenCanvas, global::Iskra.StdWeb.GenericMarshaller.Union> __res_12506;
            global::System.Runtime.InteropServices.JavaScript.JSObject __propObject_12507;
            __propObject_12507 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsUnionV2(JSObject, "canvas");
            __res_12506 = new global::Iskra.JSCore.Generics.Union<global::Iskra.StdWeb.HTMLCanvasElement, global::Iskra.StdWeb.OffscreenCanvas, global::Iskra.StdWeb.GenericMarshaller.Union>(__propObject_12507);
            return __res_12506;
        }
    }

    public int DrawingBufferWidth
    {
        get
        {
            int __res_12508;
            double __res_12509 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "drawingBufferWidth");
            __res_12508 = Convert.ToInt32(__res_12509);
            return __res_12508;
        }
    }

    public int DrawingBufferHeight
    {
        get
        {
            int __res_12510;
            double __res_12511 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "drawingBufferHeight");
            __res_12510 = Convert.ToInt32(__res_12511);
            return __res_12510;
        }
    }

    public uint DrawingBufferFormat
    {
        get
        {
            uint __res_12512;
            double __res_12513 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "drawingBufferFormat");
            __res_12512 = Convert.ToUInt32(__res_12513);
            return __res_12512;
        }
    }

    public global::Iskra.StdWeb.PredefinedColorSpace DrawingBufferColorSpace
    {
        get
        {
            global::Iskra.StdWeb.PredefinedColorSpace __res_12514;
            string __res_12515 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "drawingBufferColorSpace");
            __res_12514 = global::Iskra.StdWeb.PredefinedColorSpace.Create(__res_12515);
            return __res_12514;
        }
        set
        {
            string __marshalledValue_12516;
            __marshalledValue_12516 = value.ToString();
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsStringV2(JSObject, "drawingBufferColorSpace", __marshalledValue_12516);
        }
    }

    public global::Iskra.StdWeb.PredefinedColorSpace UnpackColorSpace
    {
        get
        {
            global::Iskra.StdWeb.PredefinedColorSpace __res_12517;
            string __res_12518 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "unpackColorSpace");
            __res_12517 = global::Iskra.StdWeb.PredefinedColorSpace.Create(__res_12518);
            return __res_12517;
        }
        set
        {
            string __marshalledValue_12519;
            __marshalledValue_12519 = value.ToString();
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsStringV2(JSObject, "unpackColorSpace", __marshalledValue_12519);
        }
    }
}

#nullable disable