// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class WebGL2RenderingContext(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public global::Iskra.JSCore.Generics.Union<global::Iskra.StdWeb.HTMLCanvasElement, global::Iskra.StdWeb.OffscreenCanvas, global::Iskra.StdWeb.GenericMarshaller.Union> Canvas
    {
        get
        {
            global::Iskra.JSCore.Generics.Union<global::Iskra.StdWeb.HTMLCanvasElement, global::Iskra.StdWeb.OffscreenCanvas, global::Iskra.StdWeb.GenericMarshaller.Union> __res_13012;
            global::System.Runtime.InteropServices.JavaScript.JSObject __propObject_13013;
            __propObject_13013 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsUnionV2(JSObject, "canvas");
            __res_13012 = new global::Iskra.JSCore.Generics.Union<global::Iskra.StdWeb.HTMLCanvasElement, global::Iskra.StdWeb.OffscreenCanvas, global::Iskra.StdWeb.GenericMarshaller.Union>(__propObject_13013);
            return __res_13012;
        }
    }

    public int DrawingBufferWidth
    {
        get
        {
            int __res_13014;
            double __res_13015 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "drawingBufferWidth");
            __res_13014 = Convert.ToInt32(__res_13015);
            return __res_13014;
        }
    }

    public int DrawingBufferHeight
    {
        get
        {
            int __res_13016;
            double __res_13017 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "drawingBufferHeight");
            __res_13016 = Convert.ToInt32(__res_13017);
            return __res_13016;
        }
    }

    public uint DrawingBufferFormat
    {
        get
        {
            uint __res_13018;
            double __res_13019 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "drawingBufferFormat");
            __res_13018 = Convert.ToUInt32(__res_13019);
            return __res_13018;
        }
    }

    public global::Iskra.StdWeb.PredefinedColorSpace DrawingBufferColorSpace
    {
        get
        {
            global::Iskra.StdWeb.PredefinedColorSpace __res_13020;
            string __res_13021 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "drawingBufferColorSpace");
            __res_13020 = global::Iskra.StdWeb.PredefinedColorSpace.Create(__res_13021);
            return __res_13020;
        }
        set
        {
            string __marshalledValue_13022;
            __marshalledValue_13022 = value.ToString();
            global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsStringV2(JSObject, "drawingBufferColorSpace", __marshalledValue_13022);
        }
    }

    public global::Iskra.StdWeb.PredefinedColorSpace UnpackColorSpace
    {
        get
        {
            global::Iskra.StdWeb.PredefinedColorSpace __res_13023;
            string __res_13024 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "unpackColorSpace");
            __res_13023 = global::Iskra.StdWeb.PredefinedColorSpace.Create(__res_13024);
            return __res_13023;
        }
        set
        {
            string __marshalledValue_13025;
            __marshalledValue_13025 = value.ToString();
            global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsStringV2(JSObject, "unpackColorSpace", __marshalledValue_13025);
        }
    }
}

#nullable disable