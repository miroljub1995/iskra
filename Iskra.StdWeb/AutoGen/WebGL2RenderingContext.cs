// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class WebGL2RenderingContext(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public global::Iskra.JSCore.Generics.Union<global::Iskra.StdWeb.HTMLCanvasElement, global::Iskra.StdWeb.OffscreenCanvas, global::Iskra.StdWeb.GenericMarshaller.Union> Canvas
    {
        get
        {
            global::Iskra.JSCore.Generics.Union<global::Iskra.StdWeb.HTMLCanvasElement, global::Iskra.StdWeb.OffscreenCanvas, global::Iskra.StdWeb.GenericMarshaller.Union> __res_12906;
            global::System.Runtime.InteropServices.JavaScript.JSObject __propObject_12907;
            __propObject_12907 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsUnionV2(JSObject, "canvas");
            __res_12906 = new global::Iskra.JSCore.Generics.Union<global::Iskra.StdWeb.HTMLCanvasElement, global::Iskra.StdWeb.OffscreenCanvas, global::Iskra.StdWeb.GenericMarshaller.Union>(__propObject_12907);
            return __res_12906;
        }
    }

    public int DrawingBufferWidth
    {
        get
        {
            int __res_12908;
            double __res_12909 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "drawingBufferWidth");
            __res_12908 = Convert.ToInt32(__res_12909);
            return __res_12908;
        }
    }

    public int DrawingBufferHeight
    {
        get
        {
            int __res_12910;
            double __res_12911 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "drawingBufferHeight");
            __res_12910 = Convert.ToInt32(__res_12911);
            return __res_12910;
        }
    }

    public uint DrawingBufferFormat
    {
        get
        {
            uint __res_12912;
            double __res_12913 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "drawingBufferFormat");
            __res_12912 = Convert.ToUInt32(__res_12913);
            return __res_12912;
        }
    }

    public global::Iskra.StdWeb.PredefinedColorSpace DrawingBufferColorSpace
    {
        get
        {
            global::Iskra.StdWeb.PredefinedColorSpace __res_12914;
            string __res_12915 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "drawingBufferColorSpace");
            __res_12914 = global::Iskra.StdWeb.PredefinedColorSpace.Create(__res_12915);
            return __res_12914;
        }
        set
        {
            string __marshalledValue_12916;
            __marshalledValue_12916 = value.ToString();
            global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsStringV2(JSObject, "drawingBufferColorSpace", __marshalledValue_12916);
        }
    }

    public global::Iskra.StdWeb.PredefinedColorSpace UnpackColorSpace
    {
        get
        {
            global::Iskra.StdWeb.PredefinedColorSpace __res_12917;
            string __res_12918 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "unpackColorSpace");
            __res_12917 = global::Iskra.StdWeb.PredefinedColorSpace.Create(__res_12918);
            return __res_12917;
        }
        set
        {
            string __marshalledValue_12919;
            __marshalledValue_12919 = value.ToString();
            global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsStringV2(JSObject, "unpackColorSpace", __marshalledValue_12919);
        }
    }
}

#nullable disable