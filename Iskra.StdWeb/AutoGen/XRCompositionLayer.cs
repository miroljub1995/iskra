// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class XRCompositionLayer(global::System.Runtime.InteropServices.JavaScript.JSObject obj): XRLayer(obj)
{
    public global::Iskra.StdWeb.XRLayerLayout Layout
    {
        get
        {
            global::Iskra.StdWeb.XRLayerLayout __res_1510;
            string __res_1511 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "layout");
            __res_1510 = global::Iskra.StdWeb.XRLayerLayout.Create(__res_1511);
            return __res_1510;
        }
    }

    public bool BlendTextureSourceAlpha
    {
        get
        {
            bool __res_1512;
            bool __res_1513 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "blendTextureSourceAlpha");
            __res_1512 = __res_1513;
            return __res_1512;
        }
        set
        {
            bool __marshalledValue_1514;
            __marshalledValue_1514 = value;
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsBooleanV2(JSObject, "blendTextureSourceAlpha", __marshalledValue_1514);
        }
    }

    public bool ForceMonoPresentation
    {
        get
        {
            bool __res_1515;
            bool __res_1516 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "forceMonoPresentation");
            __res_1515 = __res_1516;
            return __res_1515;
        }
        set
        {
            bool __marshalledValue_1517;
            __marshalledValue_1517 = value;
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsBooleanV2(JSObject, "forceMonoPresentation", __marshalledValue_1517);
        }
    }

    public float Opacity
    {
        get
        {
            float __res_1518;
            double __res_1519 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "opacity");
            __res_1518 = Convert.ToSingle(__res_1519);
            return __res_1518;
        }
        set
        {
            double __marshalledValue_1520;
            __marshalledValue_1520 = Convert.ToDouble(value);
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsDoubleV2(JSObject, "opacity", __marshalledValue_1520);
        }
    }

    public uint MipLevels
    {
        get
        {
            uint __res_1521;
            double __res_1522 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "mipLevels");
            __res_1521 = Convert.ToUInt32(__res_1522);
            return __res_1521;
        }
    }

    public global::Iskra.StdWeb.XRLayerQuality Quality
    {
        get
        {
            global::Iskra.StdWeb.XRLayerQuality __res_1523;
            string __res_1524 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "quality");
            __res_1523 = global::Iskra.StdWeb.XRLayerQuality.Create(__res_1524);
            return __res_1523;
        }
        set
        {
            string __marshalledValue_1525;
            __marshalledValue_1525 = value.ToString();
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsStringV2(JSObject, "quality", __marshalledValue_1525);
        }
    }

    public bool NeedsRedraw
    {
        get
        {
            bool __res_1526;
            bool __res_1527 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "needsRedraw");
            __res_1526 = __res_1527;
            return __res_1526;
        }
    }
}

#nullable disable