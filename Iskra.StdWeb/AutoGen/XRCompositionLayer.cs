// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class XRCompositionLayer(global::System.Runtime.InteropServices.JavaScript.JSObject obj): XRLayer(obj)
{
    public global::Iskra.StdWeb.XRLayerLayout Layout
    {
        get
        {
            global::Iskra.StdWeb.XRLayerLayout __res_1576;
            string __res_1577 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "layout");
            __res_1576 = global::Iskra.StdWeb.XRLayerLayout.Create(__res_1577);
            return __res_1576;
        }
    }

    public bool BlendTextureSourceAlpha
    {
        get
        {
            bool __res_1578;
            bool __res_1579 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "blendTextureSourceAlpha");
            __res_1578 = __res_1579;
            return __res_1578;
        }
        set
        {
            bool __marshalledValue_1580;
            __marshalledValue_1580 = value;
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsBooleanV2(JSObject, "blendTextureSourceAlpha", __marshalledValue_1580);
        }
    }

    public bool ForceMonoPresentation
    {
        get
        {
            bool __res_1581;
            bool __res_1582 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "forceMonoPresentation");
            __res_1581 = __res_1582;
            return __res_1581;
        }
        set
        {
            bool __marshalledValue_1583;
            __marshalledValue_1583 = value;
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsBooleanV2(JSObject, "forceMonoPresentation", __marshalledValue_1583);
        }
    }

    public float Opacity
    {
        get
        {
            float __res_1584;
            double __res_1585 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "opacity");
            __res_1584 = Convert.ToSingle(__res_1585);
            return __res_1584;
        }
        set
        {
            double __marshalledValue_1586;
            __marshalledValue_1586 = Convert.ToDouble(value);
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsDoubleV2(JSObject, "opacity", __marshalledValue_1586);
        }
    }

    public uint MipLevels
    {
        get
        {
            uint __res_1587;
            double __res_1588 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "mipLevels");
            __res_1587 = Convert.ToUInt32(__res_1588);
            return __res_1587;
        }
    }

    public global::Iskra.StdWeb.XRLayerQuality Quality
    {
        get
        {
            global::Iskra.StdWeb.XRLayerQuality __res_1589;
            string __res_1590 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "quality");
            __res_1589 = global::Iskra.StdWeb.XRLayerQuality.Create(__res_1590);
            return __res_1589;
        }
        set
        {
            string __marshalledValue_1591;
            __marshalledValue_1591 = value.ToString();
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsStringV2(JSObject, "quality", __marshalledValue_1591);
        }
    }

    public bool NeedsRedraw
    {
        get
        {
            bool __res_1592;
            bool __res_1593 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "needsRedraw");
            __res_1592 = __res_1593;
            return __res_1592;
        }
    }
}

#nullable disable