// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class XRCompositionLayer(global::System.Runtime.InteropServices.JavaScript.JSObject obj): XRLayer(obj)
{
    public global::Iskra.StdWeb.XRLayerLayout Layout
    {
        get
        {
            global::Iskra.StdWeb.XRLayerLayout __res_1506;
            string __res_1507 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "layout");
            __res_1506 = global::Iskra.StdWeb.XRLayerLayout.Create(__res_1507);
            return __res_1506;
        }
    }

    public bool BlendTextureSourceAlpha
    {
        get
        {
            bool __res_1508;
            bool __res_1509 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "blendTextureSourceAlpha");
            __res_1508 = __res_1509;
            return __res_1508;
        }
        set
        {
            bool __marshalledValue_1510;
            __marshalledValue_1510 = value;
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsBooleanV2(JSObject, "blendTextureSourceAlpha", __marshalledValue_1510);
        }
    }

    public bool ForceMonoPresentation
    {
        get
        {
            bool __res_1511;
            bool __res_1512 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "forceMonoPresentation");
            __res_1511 = __res_1512;
            return __res_1511;
        }
        set
        {
            bool __marshalledValue_1513;
            __marshalledValue_1513 = value;
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsBooleanV2(JSObject, "forceMonoPresentation", __marshalledValue_1513);
        }
    }

    public float Opacity
    {
        get
        {
            float __res_1514;
            double __res_1515 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "opacity");
            __res_1514 = Convert.ToSingle(__res_1515);
            return __res_1514;
        }
        set
        {
            double __marshalledValue_1516;
            __marshalledValue_1516 = Convert.ToDouble(value);
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsDoubleV2(JSObject, "opacity", __marshalledValue_1516);
        }
    }

    public uint MipLevels
    {
        get
        {
            uint __res_1517;
            double __res_1518 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "mipLevels");
            __res_1517 = Convert.ToUInt32(__res_1518);
            return __res_1517;
        }
    }

    public global::Iskra.StdWeb.XRLayerQuality Quality
    {
        get
        {
            global::Iskra.StdWeb.XRLayerQuality __res_1519;
            string __res_1520 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "quality");
            __res_1519 = global::Iskra.StdWeb.XRLayerQuality.Create(__res_1520);
            return __res_1519;
        }
        set
        {
            string __marshalledValue_1521;
            __marshalledValue_1521 = value.ToString();
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsStringV2(JSObject, "quality", __marshalledValue_1521);
        }
    }

    public bool NeedsRedraw
    {
        get
        {
            bool __res_1522;
            bool __res_1523 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "needsRedraw");
            __res_1522 = __res_1523;
            return __res_1522;
        }
    }
}

#nullable disable