// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class VisualViewport(JSObject obj): EventTarget(obj)
{
    public double OffsetLeft
    {
        get
        {
            double __res_1516;
            double __res_1517 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "offsetLeft");
            __res_1516 = __res_1517;
            return __res_1516;
        }
    }

    public double OffsetTop
    {
        get
        {
            double __res_1518;
            double __res_1519 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "offsetTop");
            __res_1518 = __res_1519;
            return __res_1518;
        }
    }

    public double PageLeft
    {
        get
        {
            double __res_1520;
            double __res_1521 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "pageLeft");
            __res_1520 = __res_1521;
            return __res_1520;
        }
    }

    public double PageTop
    {
        get
        {
            double __res_1522;
            double __res_1523 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "pageTop");
            __res_1522 = __res_1523;
            return __res_1522;
        }
    }

    public double Width
    {
        get
        {
            double __res_1524;
            double __res_1525 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "width");
            __res_1524 = __res_1525;
            return __res_1524;
        }
    }

    public double Height
    {
        get
        {
            double __res_1526;
            double __res_1527 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "height");
            __res_1526 = __res_1527;
            return __res_1526;
        }
    }

    public double Scale
    {
        get
        {
            double __res_1528;
            double __res_1529 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "scale");
            __res_1528 = __res_1529;
            return __res_1528;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onresize
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1530;
            JSObject? __res_1531 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onresize");
            if (__res_1531 is null)
            {
                __res_1530 = null;
            }
            else
            {
                JSObject __notNullable_1532 = (JSObject)__res_1531;
                throw new Exception("Marshaller from \"__notNullable_1532\" to \"__res_1530\" not supported.");
            }
            return __res_1530;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onscroll
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1533;
            JSObject? __res_1534 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onscroll");
            if (__res_1534 is null)
            {
                __res_1533 = null;
            }
            else
            {
                JSObject __notNullable_1535 = (JSObject)__res_1534;
                throw new Exception("Marshaller from \"__notNullable_1535\" to \"__res_1533\" not supported.");
            }
            return __res_1533;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onscrollend
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1536;
            JSObject? __res_1537 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onscrollend");
            if (__res_1537 is null)
            {
                __res_1536 = null;
            }
            else
            {
                JSObject __notNullable_1538 = (JSObject)__res_1537;
                throw new Exception("Marshaller from \"__notNullable_1538\" to \"__res_1536\" not supported.");
            }
            return __res_1536;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable