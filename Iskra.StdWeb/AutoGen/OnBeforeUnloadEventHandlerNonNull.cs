// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public delegate string? OnBeforeUnloadEventHandlerNonNullManaged(global::Iskra.StdWeb.Event @event);

public partial class OnBeforeUnloadEventHandlerNonNull(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public static implicit operator OnBeforeUnloadEventHandlerNonNull(OnBeforeUnloadEventHandlerNonNullManaged input)
    {
        Action<global::System.Runtime.InteropServices.JavaScript.JSObject, global::System.Runtime.InteropServices.JavaScript.JSObject> callback = (__args_12262, __res_12266) =>
        {
            using (__args_12262)
            using (__res_12266)
            {
                // Argument 1
                global::Iskra.StdWeb.Event __arg_12264;
                global::System.Runtime.InteropServices.JavaScript.JSObject __res_12265 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(__args_12262, 0);
                __arg_12264 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.Event>(__res_12265);

                string? __managedRes_12267 = input(__arg_12264);

                string? __marshalledValue_12268;
                if (__managedRes_12267 is null)
                {
                    __marshalledValue_12268 = null;
                }
                else
                {
                    string __notNullable_12269 = (string)__managedRes_12267;
                    __marshalledValue_12268 = __notNullable_12269;
                }
                global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsStringV2AsNullable(__res_12266, "value", __marshalledValue_12268);
            }
        };

        return new global::Iskra.StdWeb.OnBeforeUnloadEventHandlerNonNull(global::Iskra.JSCore.Extensions.JSFunctionExtensions.WrapAsNonVoidFunction(callback));
    }
    
    public static implicit operator OnBeforeUnloadEventHandlerNonNullManaged(OnBeforeUnloadEventHandlerNonNull input)
    {
        throw new NotImplementedException();
    }
}

#nullable disable