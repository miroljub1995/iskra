// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class XRWebGLSubImage(JSObject obj): XRSubImage(obj)
{
    public Iskra.StdWeb.WebGLTexture ColorTexture
    {
        get
        {
            Iskra.StdWeb.WebGLTexture __res_1582;
            JSObject __res_1583 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "colorTexture");
            throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = WebGLTexture } not supported.");
            return __res_1582;
        }
    }

    public Iskra.StdWeb.WebGLTexture? DepthStencilTexture
    {
        get
        {
            Iskra.StdWeb.WebGLTexture? __res_1584;
            JSObject? __res_1585 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "depthStencilTexture");
            if (__res_1585 is null)
            {
                __res_1584 = null;
            }
            else
            {
                JSObject __notNullable_1586 = (JSObject)__res_1585;
                throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = WebGLTexture } not supported.");
            }
            return __res_1584;
        }
    }

    public Iskra.StdWeb.WebGLTexture? MotionVectorTexture
    {
        get
        {
            Iskra.StdWeb.WebGLTexture? __res_1587;
            JSObject? __res_1588 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "motionVectorTexture");
            if (__res_1588 is null)
            {
                __res_1587 = null;
            }
            else
            {
                JSObject __notNullable_1589 = (JSObject)__res_1588;
                throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = WebGLTexture } not supported.");
            }
            return __res_1587;
        }
    }

    public uint? ImageIndex
    {
        get
        {
            uint? __res_1590;
            double? __res_1591 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "imageIndex");
            if (__res_1591 is null)
            {
                __res_1590 = null;
            }
            else
            {
                double __notNullable_1592 = (double)__res_1591;
                __res_1590 = Convert.ToUInt32(__notNullable_1592);
            }
            return __res_1590;
        }
    }

    public uint ColorTextureWidth
    {
        get
        {
            uint __res_1593;
            double __res_1594 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "colorTextureWidth");
            __res_1593 = Convert.ToUInt32(__res_1594);
            return __res_1593;
        }
    }

    public uint ColorTextureHeight
    {
        get
        {
            uint __res_1595;
            double __res_1596 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "colorTextureHeight");
            __res_1595 = Convert.ToUInt32(__res_1596);
            return __res_1595;
        }
    }

    public uint? DepthStencilTextureWidth
    {
        get
        {
            uint? __res_1597;
            double? __res_1598 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "depthStencilTextureWidth");
            if (__res_1598 is null)
            {
                __res_1597 = null;
            }
            else
            {
                double __notNullable_1599 = (double)__res_1598;
                __res_1597 = Convert.ToUInt32(__notNullable_1599);
            }
            return __res_1597;
        }
    }

    public uint? DepthStencilTextureHeight
    {
        get
        {
            uint? __res_1600;
            double? __res_1601 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "depthStencilTextureHeight");
            if (__res_1601 is null)
            {
                __res_1600 = null;
            }
            else
            {
                double __notNullable_1602 = (double)__res_1601;
                __res_1600 = Convert.ToUInt32(__notNullable_1602);
            }
            return __res_1600;
        }
    }

    public uint? MotionVectorTextureWidth
    {
        get
        {
            uint? __res_1603;
            double? __res_1604 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "motionVectorTextureWidth");
            if (__res_1604 is null)
            {
                __res_1603 = null;
            }
            else
            {
                double __notNullable_1605 = (double)__res_1604;
                __res_1603 = Convert.ToUInt32(__notNullable_1605);
            }
            return __res_1603;
        }
    }

    public uint? MotionVectorTextureHeight
    {
        get
        {
            uint? __res_1606;
            double? __res_1607 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "motionVectorTextureHeight");
            if (__res_1607 is null)
            {
                __res_1606 = null;
            }
            else
            {
                double __notNullable_1608 = (double)__res_1607;
                __res_1606 = Convert.ToUInt32(__notNullable_1608);
            }
            return __res_1606;
        }
    }
}

#nullable disable