// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class WakeLockSentinel(JSObject obj): EventTarget(obj)
{
    public bool Released
    {
        get
        {
            bool __res_1060;
            bool __res_1061 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "released");
            __res_1060 = __res_1061;
            return __res_1060;
        }
    }

    public Iskra.StdWeb.WakeLockType Type
    {
        get
        {
            Iskra.StdWeb.WakeLockType __res_1062;
            JSObject __res_1063 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "type");
            throw new Exception("Marshaller ToManaged from \"__res_1063\" to \"__res_1062\" not supported.");
            return __res_1062;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onrelease
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1064;
            JSObject? __res_1065 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onrelease");
            if (__res_1065 is null)
            {
                __res_1064 = null;
            }
            else
            {
                JSObject __notNullable_1066 = (JSObject)__res_1065;
                throw new Exception("Marshaller ToManaged from \"__notNullable_1066\" to \"__res_1064\" not supported.");
            }
            return __res_1064;
        }
        set
        {
            JSObject? __marshalledValue_1067;
            if (value is null)
            {
                __marshalledValue_1067 = null;
            }
            else
            {
                Iskra.StdWeb.EventHandlerNonNull __notNullable_1068 = (Iskra.StdWeb.EventHandlerNonNull)value;
                throw new Exception("Marshaller ToJS from \"__notNullable_1068\" to \"__marshalledValue_1067\" not supported.");
            }
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsJSObjectV2AsNullable(JSObject, "onrelease", __marshalledValue_1067);
        }
    }
}

#nullable disable