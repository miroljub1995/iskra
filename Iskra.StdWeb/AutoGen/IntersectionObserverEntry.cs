// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class IntersectionObserverEntry(JSObject obj): JSObjectProxy(obj)
{
    public double Time
    {
        get
        {
            double __res_2734;
            double __res_2735 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "time");
            __res_2734 = __res_2735;
            return __res_2734;
        }
    }

    public global::Iskra.StdWeb.DOMRectReadOnly? RootBounds
    {
        get
        {
            global::Iskra.StdWeb.DOMRectReadOnly? __res_2736;
            JSObject? __res_2737 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "rootBounds");
            if (__res_2737 is null)
            {
                __res_2736 = null;
            }
            else
            {
                JSObject __notNullable_2738 = (JSObject)__res_2737;
                throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = DOMRectReadOnly } not supported.");
            }
            return __res_2736;
        }
    }

    public global::Iskra.StdWeb.DOMRectReadOnly BoundingClientRect
    {
        get
        {
            global::Iskra.StdWeb.DOMRectReadOnly __res_2739;
            JSObject __res_2740 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "boundingClientRect");
            throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = DOMRectReadOnly } not supported.");
            return __res_2739;
        }
    }

    public global::Iskra.StdWeb.DOMRectReadOnly IntersectionRect
    {
        get
        {
            global::Iskra.StdWeb.DOMRectReadOnly __res_2741;
            JSObject __res_2742 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "intersectionRect");
            throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = DOMRectReadOnly } not supported.");
            return __res_2741;
        }
    }

    public bool IsIntersecting
    {
        get
        {
            bool __res_2743;
            bool __res_2744 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "isIntersecting");
            __res_2743 = __res_2744;
            return __res_2743;
        }
    }

    public bool IsVisible
    {
        get
        {
            bool __res_2745;
            bool __res_2746 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "isVisible");
            __res_2745 = __res_2746;
            return __res_2745;
        }
    }

    public double IntersectionRatio
    {
        get
        {
            double __res_2747;
            double __res_2748 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "intersectionRatio");
            __res_2747 = __res_2748;
            return __res_2747;
        }
    }

    public global::Iskra.StdWeb.Element Target
    {
        get
        {
            global::Iskra.StdWeb.Element __res_2749;
            JSObject __res_2750 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "target");
            throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = Element } not supported.");
            return __res_2749;
        }
    }
}

#nullable disable