// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class IntersectionObserverEntry(JSObject obj): JSObjectProxy(obj)
{
    public double Time
    {
        get
        {
            double __res_2323;
            double __res_2324 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "time");
            __res_2323 = __res_2324;
            return __res_2323;
        }
    }

    public Iskra.StdWeb.DOMRectReadOnly? RootBounds
    {
        get
        {
            Iskra.StdWeb.DOMRectReadOnly? __res_2325;
            JSObject? __res_2326 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "rootBounds");
            if (__res_2326 is null)
            {
                __res_2325 = null;
            }
            else
            {
                JSObject __notNullable_2327 = (JSObject)__res_2326;
                throw new Exception("Marshaller from \"__notNullable_2327\" to \"__res_2325\" not supported.");
            }
            return __res_2325;
        }
    }

    public Iskra.StdWeb.DOMRectReadOnly BoundingClientRect
    {
        get
        {
            Iskra.StdWeb.DOMRectReadOnly __res_2328;
            JSObject __res_2329 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "boundingClientRect");
            throw new Exception("Marshaller from \"__res_2329\" to \"__res_2328\" not supported.");
            return __res_2328;
        }
    }

    public Iskra.StdWeb.DOMRectReadOnly IntersectionRect
    {
        get
        {
            Iskra.StdWeb.DOMRectReadOnly __res_2330;
            JSObject __res_2331 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "intersectionRect");
            throw new Exception("Marshaller from \"__res_2331\" to \"__res_2330\" not supported.");
            return __res_2330;
        }
    }

    public bool IsIntersecting
    {
        get
        {
            bool __res_2332;
            bool __res_2333 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "isIntersecting");
            __res_2332 = __res_2333;
            return __res_2332;
        }
    }

    public bool IsVisible
    {
        get
        {
            bool __res_2334;
            bool __res_2335 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "isVisible");
            __res_2334 = __res_2335;
            return __res_2334;
        }
    }

    public double IntersectionRatio
    {
        get
        {
            double __res_2336;
            double __res_2337 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "intersectionRatio");
            __res_2336 = __res_2337;
            return __res_2336;
        }
    }

    public Iskra.StdWeb.Element Target
    {
        get
        {
            Iskra.StdWeb.Element __res_2338;
            JSObject __res_2339 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "target");
            throw new Exception("Marshaller from \"__res_2339\" to \"__res_2338\" not supported.");
            return __res_2338;
        }
    }
}

#nullable disable