// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class AudioData(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public global::Iskra.StdWeb.AudioSampleFormat? Format
    {
        get
        {
            global::Iskra.StdWeb.AudioSampleFormat? __res_2792;
            string? __res_2793 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "format");
            if (__res_2793 is null)
            {
                __res_2792 = null;
            }
            else
            {
                string __notNullable_2794 = (string)__res_2793;
                __res_2792 = global::Iskra.StdWeb.AudioSampleFormat.Create(__notNullable_2794);
            }
            return __res_2792;
        }
    }

    public float SampleRate
    {
        get
        {
            float __res_2795;
            double __res_2796 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "sampleRate");
            __res_2795 = Convert.ToSingle(__res_2796);
            return __res_2795;
        }
    }

    public uint NumberOfFrames
    {
        get
        {
            uint __res_2797;
            double __res_2798 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "numberOfFrames");
            __res_2797 = Convert.ToUInt32(__res_2798);
            return __res_2797;
        }
    }

    public uint NumberOfChannels
    {
        get
        {
            uint __res_2799;
            double __res_2800 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "numberOfChannels");
            __res_2799 = Convert.ToUInt32(__res_2800);
            return __res_2799;
        }
    }

    public ulong Duration
    {
        get
        {
            ulong __res_2801;
            double __res_2802 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "duration");
            __res_2801 = Convert.ToUInt64(__res_2802);
            return __res_2801;
        }
    }

    public long Timestamp
    {
        get
        {
            long __res_2803;
            double __res_2804 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "timestamp");
            __res_2803 = Convert.ToInt64(__res_2804);
            return __res_2803;
        }
    }
}

#nullable disable