// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class AudioData(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public global::Iskra.StdWeb.AudioSampleFormat? Format
    {
        get
        {
            global::Iskra.StdWeb.AudioSampleFormat? __res_2637;
            string? __res_2638 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "format");
            if (__res_2638 is null)
            {
                __res_2637 = null;
            }
            else
            {
                string __notNullable_2639 = (string)__res_2638;
                __res_2637 = global::Iskra.StdWeb.AudioSampleFormat.Create(__notNullable_2639);
            }
            return __res_2637;
        }
    }

    public float SampleRate
    {
        get
        {
            float __res_2640;
            double __res_2641 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "sampleRate");
            __res_2640 = Convert.ToSingle(__res_2641);
            return __res_2640;
        }
    }

    public uint NumberOfFrames
    {
        get
        {
            uint __res_2642;
            double __res_2643 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "numberOfFrames");
            __res_2642 = Convert.ToUInt32(__res_2643);
            return __res_2642;
        }
    }

    public uint NumberOfChannels
    {
        get
        {
            uint __res_2644;
            double __res_2645 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "numberOfChannels");
            __res_2644 = Convert.ToUInt32(__res_2645);
            return __res_2644;
        }
    }

    public ulong Duration
    {
        get
        {
            ulong __res_2646;
            double __res_2647 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "duration");
            __res_2646 = Convert.ToUInt64(__res_2647);
            return __res_2646;
        }
    }

    public long Timestamp
    {
        get
        {
            long __res_2648;
            double __res_2649 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "timestamp");
            __res_2648 = Convert.ToInt64(__res_2649);
            return __res_2648;
        }
    }
}

#nullable disable