// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class AudioData(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public global::Iskra.StdWeb.AudioSampleFormat? Format
    {
        get
        {
            global::Iskra.StdWeb.AudioSampleFormat? __res_4055;
            string? __res_4056 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "format");
            if (__res_4056 is null)
            {
                __res_4055 = null;
            }
            else
            {
                string __notNullable_4057 = (string)__res_4056;
                __res_4055 = global::Iskra.StdWeb.AudioSampleFormat.Create(__notNullable_4057);
            }
            return __res_4055;
        }
    }

    public float SampleRate
    {
        get
        {
            float __res_4058;
            double __res_4059 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "sampleRate");
            __res_4058 = Convert.ToSingle(__res_4059);
            return __res_4058;
        }
    }

    public uint NumberOfFrames
    {
        get
        {
            uint __res_4060;
            double __res_4061 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "numberOfFrames");
            __res_4060 = Convert.ToUInt32(__res_4061);
            return __res_4060;
        }
    }

    public uint NumberOfChannels
    {
        get
        {
            uint __res_4062;
            double __res_4063 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "numberOfChannels");
            __res_4062 = Convert.ToUInt32(__res_4063);
            return __res_4062;
        }
    }

    public ulong Duration
    {
        get
        {
            ulong __res_4064;
            double __res_4065 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "duration");
            __res_4064 = Convert.ToUInt64(__res_4065);
            return __res_4064;
        }
    }

    public long Timestamp
    {
        get
        {
            long __res_4066;
            double __res_4067 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "timestamp");
            __res_4066 = Convert.ToInt64(__res_4067);
            return __res_4066;
        }
    }
}

#nullable disable