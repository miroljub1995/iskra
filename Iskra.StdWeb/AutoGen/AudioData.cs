// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class AudioData(JSObject obj): JSObjectProxy(obj)
{
    public Iskra.StdWeb.AudioSampleFormat? Format
    {
        get
        {
            Iskra.StdWeb.AudioSampleFormat? __res_2235;
            JSObject? __res_2236 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "format");
            if (__res_2236 is null)
            {
                __res_2235 = null;
            }
            else
            {
                JSObject __notNullable_2237 = (JSObject)__res_2236;
                throw new Exception("Marshaller from \"__notNullable_2237\" to \"__res_2235\" not supported.");
            }
            return __res_2235;
        }
    }

    public float SampleRate
    {
        get
        {
            float __res_2238;
            double __res_2239 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "sampleRate");
            __res_2238 = Convert.ToSingle(__res_2239);
            return __res_2238;
        }
    }

    public uint NumberOfFrames
    {
        get
        {
            uint __res_2240;
            double __res_2241 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "numberOfFrames");
            __res_2240 = Convert.ToUInt32(__res_2241);
            return __res_2240;
        }
    }

    public uint NumberOfChannels
    {
        get
        {
            uint __res_2242;
            double __res_2243 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "numberOfChannels");
            __res_2242 = Convert.ToUInt32(__res_2243);
            return __res_2242;
        }
    }

    public ulong Duration
    {
        get
        {
            ulong __res_2244;
            double __res_2245 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "duration");
            __res_2244 = Convert.ToUInt64(__res_2245);
            return __res_2244;
        }
    }

    public long Timestamp
    {
        get
        {
            long __res_2246;
            double __res_2247 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "timestamp");
            __res_2246 = Convert.ToInt64(__res_2247);
            return __res_2246;
        }
    }
}

#nullable disable