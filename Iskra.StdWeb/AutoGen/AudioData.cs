// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class AudioData(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public global::Iskra.StdWeb.AudioSampleFormat? Format
    {
        get
        {
            global::Iskra.StdWeb.AudioSampleFormat? __res_3816;
            string? __res_3817 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "format");
            if (__res_3817 is null)
            {
                __res_3816 = null;
            }
            else
            {
                string __notNullable_3818 = (string)__res_3817;
                __res_3816 = global::Iskra.StdWeb.AudioSampleFormat.Create(__notNullable_3818);
            }
            return __res_3816;
        }
    }

    public float SampleRate
    {
        get
        {
            float __res_3819;
            double __res_3820 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "sampleRate");
            __res_3819 = Convert.ToSingle(__res_3820);
            return __res_3819;
        }
    }

    public uint NumberOfFrames
    {
        get
        {
            uint __res_3821;
            double __res_3822 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "numberOfFrames");
            __res_3821 = Convert.ToUInt32(__res_3822);
            return __res_3821;
        }
    }

    public uint NumberOfChannels
    {
        get
        {
            uint __res_3823;
            double __res_3824 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "numberOfChannels");
            __res_3823 = Convert.ToUInt32(__res_3824);
            return __res_3823;
        }
    }

    public ulong Duration
    {
        get
        {
            ulong __res_3825;
            double __res_3826 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "duration");
            __res_3825 = Convert.ToUInt64(__res_3826);
            return __res_3825;
        }
    }

    public long Timestamp
    {
        get
        {
            long __res_3827;
            double __res_3828 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "timestamp");
            __res_3827 = Convert.ToInt64(__res_3828);
            return __res_3827;
        }
    }
}

#nullable disable