// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class AudioData(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public global::Iskra.StdWeb.AudioSampleFormat? Format
    {
        get
        {
            global::Iskra.StdWeb.AudioSampleFormat? __res_4004;
            string? __res_4005 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "format");
            if (__res_4005 is null)
            {
                __res_4004 = null;
            }
            else
            {
                string __notNullable_4006 = (string)__res_4005;
                __res_4004 = global::Iskra.StdWeb.AudioSampleFormat.Create(__notNullable_4006);
            }
            return __res_4004;
        }
    }

    public float SampleRate
    {
        get
        {
            float __res_4007;
            double __res_4008 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "sampleRate");
            __res_4007 = Convert.ToSingle(__res_4008);
            return __res_4007;
        }
    }

    public uint NumberOfFrames
    {
        get
        {
            uint __res_4009;
            double __res_4010 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "numberOfFrames");
            __res_4009 = Convert.ToUInt32(__res_4010);
            return __res_4009;
        }
    }

    public uint NumberOfChannels
    {
        get
        {
            uint __res_4011;
            double __res_4012 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "numberOfChannels");
            __res_4011 = Convert.ToUInt32(__res_4012);
            return __res_4011;
        }
    }

    public ulong Duration
    {
        get
        {
            ulong __res_4013;
            double __res_4014 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "duration");
            __res_4013 = Convert.ToUInt64(__res_4014);
            return __res_4013;
        }
    }

    public long Timestamp
    {
        get
        {
            long __res_4015;
            double __res_4016 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "timestamp");
            __res_4015 = Convert.ToInt64(__res_4016);
            return __res_4015;
        }
    }
}

#nullable disable