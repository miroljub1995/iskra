// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class RTCDataChannel(JSObject obj): EventTarget(obj)
{
    public string Label
    {
        get
        {
            string __res_1749;
            string __res_1750 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "label");
            __res_1749 = __res_1750;
            return __res_1749;
        }
    }

    public bool Ordered
    {
        get
        {
            bool __res_1751;
            bool __res_1752 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "ordered");
            __res_1751 = __res_1752;
            return __res_1751;
        }
    }

    public ushort? MaxPacketLifeTime
    {
        get
        {
            ushort? __res_1753;
            double? __res_1754 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "maxPacketLifeTime");
            if (__res_1754 is null)
            {
                __res_1753 = null;
            }
            else
            {
                double __notNullable_1755 = (double)__res_1754;
                throw new Exception("Marshaller from \"__notNullable_1755\" to \"__res_1753\" not supported.");
            }
            return __res_1753;
        }
    }

    public ushort? MaxRetransmits
    {
        get
        {
            ushort? __res_1756;
            double? __res_1757 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "maxRetransmits");
            if (__res_1757 is null)
            {
                __res_1756 = null;
            }
            else
            {
                double __notNullable_1758 = (double)__res_1757;
                throw new Exception("Marshaller from \"__notNullable_1758\" to \"__res_1756\" not supported.");
            }
            return __res_1756;
        }
    }

    public string Protocol
    {
        get
        {
            string __res_1759;
            string __res_1760 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "protocol");
            __res_1759 = __res_1760;
            return __res_1759;
        }
    }

    public bool Negotiated
    {
        get
        {
            bool __res_1761;
            bool __res_1762 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "negotiated");
            __res_1761 = __res_1762;
            return __res_1761;
        }
    }

    public ushort? Id
    {
        get
        {
            ushort? __res_1763;
            double? __res_1764 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "id");
            if (__res_1764 is null)
            {
                __res_1763 = null;
            }
            else
            {
                double __notNullable_1765 = (double)__res_1764;
                throw new Exception("Marshaller from \"__notNullable_1765\" to \"__res_1763\" not supported.");
            }
            return __res_1763;
        }
    }

    public Iskra.StdWeb.RTCDataChannelState ReadyState
    {
        get
        {
            Iskra.StdWeb.RTCDataChannelState __res_1766;
            JSObject __res_1767 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "readyState");
            throw new Exception("Marshaller from \"__res_1767\" to \"__res_1766\" not supported.");
            return __res_1766;
        }
    }

    public uint BufferedAmount
    {
        get
        {
            uint __res_1768;
            double __res_1769 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "bufferedAmount");
            __res_1768 = Convert.ToUInt32(__res_1769);
            return __res_1768;
        }
    }

    public uint BufferedAmountLowThreshold
    {
        get
        {
            uint __res_1770;
            double __res_1771 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "bufferedAmountLowThreshold");
            __res_1770 = Convert.ToUInt32(__res_1771);
            return __res_1770;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onopen
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1772;
            JSObject? __res_1773 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onopen");
            if (__res_1773 is null)
            {
                __res_1772 = null;
            }
            else
            {
                JSObject __notNullable_1774 = (JSObject)__res_1773;
                throw new Exception("Marshaller from \"__notNullable_1774\" to \"__res_1772\" not supported.");
            }
            return __res_1772;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onbufferedamountlow
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1775;
            JSObject? __res_1776 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onbufferedamountlow");
            if (__res_1776 is null)
            {
                __res_1775 = null;
            }
            else
            {
                JSObject __notNullable_1777 = (JSObject)__res_1776;
                throw new Exception("Marshaller from \"__notNullable_1777\" to \"__res_1775\" not supported.");
            }
            return __res_1775;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onerror
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1778;
            JSObject? __res_1779 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onerror");
            if (__res_1779 is null)
            {
                __res_1778 = null;
            }
            else
            {
                JSObject __notNullable_1780 = (JSObject)__res_1779;
                throw new Exception("Marshaller from \"__notNullable_1780\" to \"__res_1778\" not supported.");
            }
            return __res_1778;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onclosing
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1781;
            JSObject? __res_1782 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onclosing");
            if (__res_1782 is null)
            {
                __res_1781 = null;
            }
            else
            {
                JSObject __notNullable_1783 = (JSObject)__res_1782;
                throw new Exception("Marshaller from \"__notNullable_1783\" to \"__res_1781\" not supported.");
            }
            return __res_1781;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onclose
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1784;
            JSObject? __res_1785 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onclose");
            if (__res_1785 is null)
            {
                __res_1784 = null;
            }
            else
            {
                JSObject __notNullable_1786 = (JSObject)__res_1785;
                throw new Exception("Marshaller from \"__notNullable_1786\" to \"__res_1784\" not supported.");
            }
            return __res_1784;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onmessage
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1787;
            JSObject? __res_1788 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onmessage");
            if (__res_1788 is null)
            {
                __res_1787 = null;
            }
            else
            {
                JSObject __notNullable_1789 = (JSObject)__res_1788;
                throw new Exception("Marshaller from \"__notNullable_1789\" to \"__res_1787\" not supported.");
            }
            return __res_1787;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.BinaryType BinaryType
    {
        get
        {
            Iskra.StdWeb.BinaryType __res_1790;
            JSObject __res_1791 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "binaryType");
            throw new Exception("Marshaller from \"__res_1791\" to \"__res_1790\" not supported.");
            return __res_1790;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable