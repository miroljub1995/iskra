// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class RTCDataChannel(JSObject obj): EventTarget(obj)
{
    public string Label
    {
        get
        {
            string __res_837;
            throw new Exception();
            return __res_837;
        }
    }

    public bool Ordered
    {
        get
        {
            bool __res_838;
            __res_838 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "ordered");
            return __res_838;
        }
    }

    public ushort? MaxPacketLifeTime
    {
        get
        {
            ushort? __res_839;
            throw new Exception();
            return __res_839;
        }
    }

    public ushort? MaxRetransmits
    {
        get
        {
            ushort? __res_840;
            throw new Exception();
            return __res_840;
        }
    }

    public string Protocol
    {
        get
        {
            string __res_841;
            throw new Exception();
            return __res_841;
        }
    }

    public bool Negotiated
    {
        get
        {
            bool __res_842;
            __res_842 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "negotiated");
            return __res_842;
        }
    }

    public ushort? Id
    {
        get
        {
            ushort? __res_843;
            throw new Exception();
            return __res_843;
        }
    }

    public Iskra.StdWeb.RTCDataChannelState ReadyState
    {
        get
        {
            Iskra.StdWeb.RTCDataChannelState __res_844;
            throw new Exception();
            return __res_844;
        }
    }

    public uint BufferedAmount
    {
        get
        {
            uint __res_845;
            throw new Exception();
            return __res_845;
        }
    }

    public uint BufferedAmountLowThreshold
    {
        get
        {
            uint __res_846;
            throw new Exception();
            return __res_846;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onopen
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_847;
            throw new Exception();
            return __res_847;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onbufferedamountlow
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_848;
            throw new Exception();
            return __res_848;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onerror
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_849;
            throw new Exception();
            return __res_849;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onclosing
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_850;
            throw new Exception();
            return __res_850;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onclose
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_851;
            throw new Exception();
            return __res_851;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onmessage
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_852;
            throw new Exception();
            return __res_852;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.BinaryType BinaryType
    {
        get
        {
            Iskra.StdWeb.BinaryType __res_853;
            throw new Exception();
            return __res_853;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable