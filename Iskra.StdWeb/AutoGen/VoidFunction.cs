// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public delegate void VoidFunctionManaged();

public partial class VoidFunction(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public static implicit operator VoidFunction(VoidFunctionManaged input)
    {
        Action<global::System.Runtime.InteropServices.JavaScript.JSObject> callback = (__args_6394) =>
        {
            using (__args_6394)
            {


                input();
            }
        };

        global::System.Runtime.InteropServices.JavaScript.JSObject __funcObj_6396 = global::Iskra.JSCore.Extensions.JSFunctionExtensions.WrapAsVoidFunction(callback);
        global::Iskra.JSCore.Extensions.JSFunctionExtensions.StoreManagedFunctionToProperty(__funcObj_6396, input);

        return new global::Iskra.StdWeb.VoidFunction(__funcObj_6396);
    }

    public bool TryGetManaged([global::System.Diagnostics.CodeAnalysis.NotNullWhenAttribute(true)] out global::Iskra.StdWeb.VoidFunctionManaged? managed, bool allowConversion = false)
    {
        managed = global::Iskra.JSCore.Extensions.JSFunctionExtensions.GetManagedFunctionFromProperty(JSObject) as global::Iskra.StdWeb.VoidFunctionManaged;
        if (managed is not null)
        {
            return true;
        }

        if (!allowConversion)
        {
            return false;
        }

        managed = () =>
        {


            global::Iskra.JSCore.Extensions.JSFunctionExtensions.CallEmptyVoidFunction(JSObject, null);
        };
        return true;
    }
}

#nullable disable