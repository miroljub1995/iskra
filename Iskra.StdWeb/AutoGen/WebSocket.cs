// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class WebSocket(JSObject obj): EventTarget(obj)
{
    public string Url
    {
        get
        {
            string __res_4051;
            string __res_4052 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "url");
            __res_4051 = __res_4052;
            return __res_4051;
        }
    }

    public ushort ReadyState
    {
        get
        {
            ushort __res_4053;
            double __res_4054 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "readyState");
            throw new Exception("Marshaller from \"__res_4054\" to \"__res_4053\" not supported.");
            return __res_4053;
        }
    }

    public ulong BufferedAmount
    {
        get
        {
            ulong __res_4055;
            double __res_4056 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "bufferedAmount");
            __res_4055 = Convert.ToUInt64(__res_4056);
            return __res_4055;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onopen
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_4057;
            JSObject? __res_4058 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onopen");
            if (__res_4058 is null)
            {
                __res_4057 = null;
            }
            else
            {
                JSObject __notNullable_4059 = (JSObject)__res_4058;
                throw new Exception("Marshaller from \"__notNullable_4059\" to \"__res_4057\" not supported.");
            }
            return __res_4057;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onerror
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_4060;
            JSObject? __res_4061 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onerror");
            if (__res_4061 is null)
            {
                __res_4060 = null;
            }
            else
            {
                JSObject __notNullable_4062 = (JSObject)__res_4061;
                throw new Exception("Marshaller from \"__notNullable_4062\" to \"__res_4060\" not supported.");
            }
            return __res_4060;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onclose
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_4063;
            JSObject? __res_4064 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onclose");
            if (__res_4064 is null)
            {
                __res_4063 = null;
            }
            else
            {
                JSObject __notNullable_4065 = (JSObject)__res_4064;
                throw new Exception("Marshaller from \"__notNullable_4065\" to \"__res_4063\" not supported.");
            }
            return __res_4063;
        }
        set
        {
            throw new Exception();
        }
    }

    public string Extensions
    {
        get
        {
            string __res_4066;
            string __res_4067 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "extensions");
            __res_4066 = __res_4067;
            return __res_4066;
        }
    }

    public string Protocol
    {
        get
        {
            string __res_4068;
            string __res_4069 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "protocol");
            __res_4068 = __res_4069;
            return __res_4068;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onmessage
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_4070;
            JSObject? __res_4071 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onmessage");
            if (__res_4071 is null)
            {
                __res_4070 = null;
            }
            else
            {
                JSObject __notNullable_4072 = (JSObject)__res_4071;
                throw new Exception("Marshaller from \"__notNullable_4072\" to \"__res_4070\" not supported.");
            }
            return __res_4070;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.BinaryType BinaryType
    {
        get
        {
            Iskra.StdWeb.BinaryType __res_4073;
            JSObject __res_4074 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "binaryType");
            throw new Exception("Marshaller from \"__res_4074\" to \"__res_4073\" not supported.");
            return __res_4073;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable