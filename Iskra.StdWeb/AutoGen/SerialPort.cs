// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class SerialPort(JSObject obj): EventTarget(obj)
{
    public Iskra.StdWeb.EventHandlerNonNull? Onconnect
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_4392;
            JSObject? __res_4393 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onconnect");
            if (__res_4393 is null)
            {
                __res_4392 = null;
            }
            else
            {
                JSObject __notNullable_4394 = (JSObject)__res_4393;
                throw new Exception("Marshaller ToManaged from \"__notNullable_4394\" to \"__res_4392\" not supported.");
            }
            return __res_4392;
        }
        set
        {
            JSObject? __marshalledValue_4395;
            if (value is null)
            {
                __marshalledValue_4395 = null;
            }
            else
            {
                Iskra.StdWeb.EventHandlerNonNull __notNullable_4396 = (Iskra.StdWeb.EventHandlerNonNull)value;
                throw new Exception("Marshaller ToJS from \"__notNullable_4396\" to \"__marshalledValue_4395\" not supported.");
            }
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsJSObjectV2AsNullable(JSObject, "onconnect", __marshalledValue_4395);
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Ondisconnect
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_4397;
            JSObject? __res_4398 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "ondisconnect");
            if (__res_4398 is null)
            {
                __res_4397 = null;
            }
            else
            {
                JSObject __notNullable_4399 = (JSObject)__res_4398;
                throw new Exception("Marshaller ToManaged from \"__notNullable_4399\" to \"__res_4397\" not supported.");
            }
            return __res_4397;
        }
        set
        {
            JSObject? __marshalledValue_4400;
            if (value is null)
            {
                __marshalledValue_4400 = null;
            }
            else
            {
                Iskra.StdWeb.EventHandlerNonNull __notNullable_4401 = (Iskra.StdWeb.EventHandlerNonNull)value;
                throw new Exception("Marshaller ToJS from \"__notNullable_4401\" to \"__marshalledValue_4400\" not supported.");
            }
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsJSObjectV2AsNullable(JSObject, "ondisconnect", __marshalledValue_4400);
        }
    }

    public bool Connected
    {
        get
        {
            bool __res_4402;
            bool __res_4403 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "connected");
            __res_4402 = __res_4403;
            return __res_4402;
        }
    }

    public Iskra.StdWeb.ReadableStream Readable
    {
        get
        {
            Iskra.StdWeb.ReadableStream __res_4404;
            JSObject __res_4405 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "readable");
            throw new Exception("Marshaller ToManaged from \"__res_4405\" to \"__res_4404\" not supported.");
            return __res_4404;
        }
    }

    public Iskra.StdWeb.WritableStream Writable
    {
        get
        {
            Iskra.StdWeb.WritableStream __res_4406;
            JSObject __res_4407 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "writable");
            throw new Exception("Marshaller ToManaged from \"__res_4407\" to \"__res_4406\" not supported.");
            return __res_4406;
        }
    }
}

#nullable disable