// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class XRWebGLLayer(JSObject obj): XRLayer(obj)
{
    public bool Antialias
    {
        get
        {
            bool __res_4330;
            bool __res_4331 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "antialias");
            __res_4330 = __res_4331;
            return __res_4330;
        }
    }

    public bool IgnoreDepthValues
    {
        get
        {
            bool __res_4332;
            bool __res_4333 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "ignoreDepthValues");
            __res_4332 = __res_4333;
            return __res_4332;
        }
    }

    public float? FixedFoveation
    {
        get
        {
            float? __res_4334;
            double? __res_4335 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "fixedFoveation");
            if (__res_4335 is null)
            {
                __res_4334 = null;
            }
            else
            {
                double __notNullable_4336 = (double)__res_4335;
                __res_4334 = Convert.ToSingle(__notNullable_4336);
            }
            return __res_4334;
        }
        set
        {
            double? __marshalledValue_4337;
            if (value is null)
            {
                __marshalledValue_4337 = null;
            }
            else
            {
                float __notNullable_4338 = (float)value;
                __marshalledValue_4337 = Convert.ToDouble(__notNullable_4338);
            }
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsDoubleV2AsNullable(JSObject, "fixedFoveation", __marshalledValue_4337);
        }
    }

    public global::Iskra.StdWeb.WebGLFramebuffer? Framebuffer
    {
        get
        {
            global::Iskra.StdWeb.WebGLFramebuffer? __res_4339;
            JSObject? __res_4340 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "framebuffer");
            if (__res_4340 is null)
            {
                __res_4339 = null;
            }
            else
            {
                JSObject __notNullable_4341 = (JSObject)__res_4340;
                throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = WebGLFramebuffer } not supported.");
            }
            return __res_4339;
        }
    }

    public uint FramebufferWidth
    {
        get
        {
            uint __res_4342;
            double __res_4343 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "framebufferWidth");
            __res_4342 = Convert.ToUInt32(__res_4343);
            return __res_4342;
        }
    }

    public uint FramebufferHeight
    {
        get
        {
            uint __res_4344;
            double __res_4345 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "framebufferHeight");
            __res_4344 = Convert.ToUInt32(__res_4345);
            return __res_4344;
        }
    }
}

#nullable disable