// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class MediaStream(JSObject obj): EventTarget(obj)
{
    public string Id
    {
        get
        {
            string __res_3317;
            string __res_3318 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "id");
            __res_3317 = __res_3318;
            return __res_3317;
        }
    }

    public bool Active
    {
        get
        {
            bool __res_3319;
            bool __res_3320 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "active");
            __res_3319 = __res_3320;
            return __res_3319;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onaddtrack
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3321;
            JSObject? __res_3322 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onaddtrack");
            if (__res_3322 is null)
            {
                __res_3321 = null;
            }
            else
            {
                JSObject __notNullable_3323 = (JSObject)__res_3322;
                throw new Exception("Marshaller from \"__notNullable_3323\" to \"__res_3321\" not supported.");
            }
            return __res_3321;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onremovetrack
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3324;
            JSObject? __res_3325 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onremovetrack");
            if (__res_3325 is null)
            {
                __res_3324 = null;
            }
            else
            {
                JSObject __notNullable_3326 = (JSObject)__res_3325;
                throw new Exception("Marshaller from \"__notNullable_3326\" to \"__res_3324\" not supported.");
            }
            return __res_3324;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable