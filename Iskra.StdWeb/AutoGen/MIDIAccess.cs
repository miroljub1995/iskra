// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class MIDIAccess(global::System.Runtime.InteropServices.JavaScript.JSObject obj): EventTarget(obj)
{
    public global::Iskra.StdWeb.MIDIInputMap Inputs
    {
        get
        {
            global::Iskra.StdWeb.MIDIInputMap __res_7534;
            global::System.Runtime.InteropServices.JavaScript.JSObject __res_7535 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "inputs");
            throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = MIDIInputMap } not supported.");
            return __res_7534;
        }
    }

    public global::Iskra.StdWeb.MIDIOutputMap Outputs
    {
        get
        {
            global::Iskra.StdWeb.MIDIOutputMap __res_7536;
            global::System.Runtime.InteropServices.JavaScript.JSObject __res_7537 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "outputs");
            throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = MIDIOutputMap } not supported.");
            return __res_7536;
        }
    }

    public global::Iskra.StdWeb.EventHandlerNonNull? Onstatechange
    {
        get
        {
            global::Iskra.StdWeb.EventHandlerNonNull? __res_7538;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_7539 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onstatechange");
            if (__res_7539 is null)
            {
                __res_7538 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_7540 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_7539;
                throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = EventHandlerNonNull } not supported.");
            }
            return __res_7538;
        }
        set
        {
            global::System.Runtime.InteropServices.JavaScript.JSObject? __marshalledValue_7541;
            if (value is null)
            {
                __marshalledValue_7541 = null;
            }
            else
            {
                global::Iskra.StdWeb.EventHandlerNonNull __notNullable_7542 = (global::Iskra.StdWeb.EventHandlerNonNull)value;
                throw new Exception("Marshaller ToJS from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = EventHandlerNonNull } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } not supported.");
            }
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsJSObjectV2AsNullable(JSObject, "onstatechange", __marshalledValue_7541);
        }
    }

    public bool SysexEnabled
    {
        get
        {
            bool __res_7543;
            bool __res_7544 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "sysexEnabled");
            __res_7543 = __res_7544;
            return __res_7543;
        }
    }
}

#nullable disable