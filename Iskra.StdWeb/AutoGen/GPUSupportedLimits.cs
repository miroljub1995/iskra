// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class GPUSupportedLimits(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public uint MaxTextureDimension1D
    {
        get
        {
            uint __res_1397;
            double __res_1398 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxTextureDimension1D");
            __res_1397 = Convert.ToUInt32(__res_1398);
            return __res_1397;
        }
    }

    public uint MaxTextureDimension2D
    {
        get
        {
            uint __res_1399;
            double __res_1400 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxTextureDimension2D");
            __res_1399 = Convert.ToUInt32(__res_1400);
            return __res_1399;
        }
    }

    public uint MaxTextureDimension3D
    {
        get
        {
            uint __res_1401;
            double __res_1402 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxTextureDimension3D");
            __res_1401 = Convert.ToUInt32(__res_1402);
            return __res_1401;
        }
    }

    public uint MaxTextureArrayLayers
    {
        get
        {
            uint __res_1403;
            double __res_1404 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxTextureArrayLayers");
            __res_1403 = Convert.ToUInt32(__res_1404);
            return __res_1403;
        }
    }

    public uint MaxBindGroups
    {
        get
        {
            uint __res_1405;
            double __res_1406 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxBindGroups");
            __res_1405 = Convert.ToUInt32(__res_1406);
            return __res_1405;
        }
    }

    public uint MaxBindGroupsPlusVertexBuffers
    {
        get
        {
            uint __res_1407;
            double __res_1408 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxBindGroupsPlusVertexBuffers");
            __res_1407 = Convert.ToUInt32(__res_1408);
            return __res_1407;
        }
    }

    public uint MaxBindingsPerBindGroup
    {
        get
        {
            uint __res_1409;
            double __res_1410 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxBindingsPerBindGroup");
            __res_1409 = Convert.ToUInt32(__res_1410);
            return __res_1409;
        }
    }

    public uint MaxDynamicUniformBuffersPerPipelineLayout
    {
        get
        {
            uint __res_1411;
            double __res_1412 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxDynamicUniformBuffersPerPipelineLayout");
            __res_1411 = Convert.ToUInt32(__res_1412);
            return __res_1411;
        }
    }

    public uint MaxDynamicStorageBuffersPerPipelineLayout
    {
        get
        {
            uint __res_1413;
            double __res_1414 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxDynamicStorageBuffersPerPipelineLayout");
            __res_1413 = Convert.ToUInt32(__res_1414);
            return __res_1413;
        }
    }

    public uint MaxSampledTexturesPerShaderStage
    {
        get
        {
            uint __res_1415;
            double __res_1416 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxSampledTexturesPerShaderStage");
            __res_1415 = Convert.ToUInt32(__res_1416);
            return __res_1415;
        }
    }

    public uint MaxSamplersPerShaderStage
    {
        get
        {
            uint __res_1417;
            double __res_1418 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxSamplersPerShaderStage");
            __res_1417 = Convert.ToUInt32(__res_1418);
            return __res_1417;
        }
    }

    public uint MaxStorageBuffersPerShaderStage
    {
        get
        {
            uint __res_1419;
            double __res_1420 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxStorageBuffersPerShaderStage");
            __res_1419 = Convert.ToUInt32(__res_1420);
            return __res_1419;
        }
    }

    public uint MaxStorageTexturesPerShaderStage
    {
        get
        {
            uint __res_1421;
            double __res_1422 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxStorageTexturesPerShaderStage");
            __res_1421 = Convert.ToUInt32(__res_1422);
            return __res_1421;
        }
    }

    public uint MaxUniformBuffersPerShaderStage
    {
        get
        {
            uint __res_1423;
            double __res_1424 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxUniformBuffersPerShaderStage");
            __res_1423 = Convert.ToUInt32(__res_1424);
            return __res_1423;
        }
    }

    public ulong MaxUniformBufferBindingSize
    {
        get
        {
            ulong __res_1425;
            double __res_1426 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxUniformBufferBindingSize");
            __res_1425 = Convert.ToUInt64(__res_1426);
            return __res_1425;
        }
    }

    public ulong MaxStorageBufferBindingSize
    {
        get
        {
            ulong __res_1427;
            double __res_1428 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxStorageBufferBindingSize");
            __res_1427 = Convert.ToUInt64(__res_1428);
            return __res_1427;
        }
    }

    public uint MinUniformBufferOffsetAlignment
    {
        get
        {
            uint __res_1429;
            double __res_1430 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "minUniformBufferOffsetAlignment");
            __res_1429 = Convert.ToUInt32(__res_1430);
            return __res_1429;
        }
    }

    public uint MinStorageBufferOffsetAlignment
    {
        get
        {
            uint __res_1431;
            double __res_1432 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "minStorageBufferOffsetAlignment");
            __res_1431 = Convert.ToUInt32(__res_1432);
            return __res_1431;
        }
    }

    public uint MaxVertexBuffers
    {
        get
        {
            uint __res_1433;
            double __res_1434 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxVertexBuffers");
            __res_1433 = Convert.ToUInt32(__res_1434);
            return __res_1433;
        }
    }

    public ulong MaxBufferSize
    {
        get
        {
            ulong __res_1435;
            double __res_1436 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxBufferSize");
            __res_1435 = Convert.ToUInt64(__res_1436);
            return __res_1435;
        }
    }

    public uint MaxVertexAttributes
    {
        get
        {
            uint __res_1437;
            double __res_1438 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxVertexAttributes");
            __res_1437 = Convert.ToUInt32(__res_1438);
            return __res_1437;
        }
    }

    public uint MaxVertexBufferArrayStride
    {
        get
        {
            uint __res_1439;
            double __res_1440 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxVertexBufferArrayStride");
            __res_1439 = Convert.ToUInt32(__res_1440);
            return __res_1439;
        }
    }

    public uint MaxInterStageShaderVariables
    {
        get
        {
            uint __res_1441;
            double __res_1442 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxInterStageShaderVariables");
            __res_1441 = Convert.ToUInt32(__res_1442);
            return __res_1441;
        }
    }

    public uint MaxColorAttachments
    {
        get
        {
            uint __res_1443;
            double __res_1444 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxColorAttachments");
            __res_1443 = Convert.ToUInt32(__res_1444);
            return __res_1443;
        }
    }

    public uint MaxColorAttachmentBytesPerSample
    {
        get
        {
            uint __res_1445;
            double __res_1446 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxColorAttachmentBytesPerSample");
            __res_1445 = Convert.ToUInt32(__res_1446);
            return __res_1445;
        }
    }

    public uint MaxComputeWorkgroupStorageSize
    {
        get
        {
            uint __res_1447;
            double __res_1448 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupStorageSize");
            __res_1447 = Convert.ToUInt32(__res_1448);
            return __res_1447;
        }
    }

    public uint MaxComputeInvocationsPerWorkgroup
    {
        get
        {
            uint __res_1449;
            double __res_1450 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeInvocationsPerWorkgroup");
            __res_1449 = Convert.ToUInt32(__res_1450);
            return __res_1449;
        }
    }

    public uint MaxComputeWorkgroupSizeX
    {
        get
        {
            uint __res_1451;
            double __res_1452 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupSizeX");
            __res_1451 = Convert.ToUInt32(__res_1452);
            return __res_1451;
        }
    }

    public uint MaxComputeWorkgroupSizeY
    {
        get
        {
            uint __res_1453;
            double __res_1454 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupSizeY");
            __res_1453 = Convert.ToUInt32(__res_1454);
            return __res_1453;
        }
    }

    public uint MaxComputeWorkgroupSizeZ
    {
        get
        {
            uint __res_1455;
            double __res_1456 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupSizeZ");
            __res_1455 = Convert.ToUInt32(__res_1456);
            return __res_1455;
        }
    }

    public uint MaxComputeWorkgroupsPerDimension
    {
        get
        {
            uint __res_1457;
            double __res_1458 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupsPerDimension");
            __res_1457 = Convert.ToUInt32(__res_1458);
            return __res_1457;
        }
    }
}

#nullable disable