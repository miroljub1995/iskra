// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class GPUSupportedLimits(JSObject obj): JSObjectProxy(obj)
{
    public uint MaxTextureDimension1D
    {
        get
        {
            uint __res_290;
            throw new Exception();
            return __res_290;
        }
    }

    public uint MaxTextureDimension2D
    {
        get
        {
            uint __res_291;
            throw new Exception();
            return __res_291;
        }
    }

    public uint MaxTextureDimension3D
    {
        get
        {
            uint __res_292;
            throw new Exception();
            return __res_292;
        }
    }

    public uint MaxTextureArrayLayers
    {
        get
        {
            uint __res_293;
            throw new Exception();
            return __res_293;
        }
    }

    public uint MaxBindGroups
    {
        get
        {
            uint __res_294;
            throw new Exception();
            return __res_294;
        }
    }

    public uint MaxBindGroupsPlusVertexBuffers
    {
        get
        {
            uint __res_295;
            throw new Exception();
            return __res_295;
        }
    }

    public uint MaxBindingsPerBindGroup
    {
        get
        {
            uint __res_296;
            throw new Exception();
            return __res_296;
        }
    }

    public uint MaxDynamicUniformBuffersPerPipelineLayout
    {
        get
        {
            uint __res_297;
            throw new Exception();
            return __res_297;
        }
    }

    public uint MaxDynamicStorageBuffersPerPipelineLayout
    {
        get
        {
            uint __res_298;
            throw new Exception();
            return __res_298;
        }
    }

    public uint MaxSampledTexturesPerShaderStage
    {
        get
        {
            uint __res_299;
            throw new Exception();
            return __res_299;
        }
    }

    public uint MaxSamplersPerShaderStage
    {
        get
        {
            uint __res_300;
            throw new Exception();
            return __res_300;
        }
    }

    public uint MaxStorageBuffersPerShaderStage
    {
        get
        {
            uint __res_301;
            throw new Exception();
            return __res_301;
        }
    }

    public uint MaxStorageTexturesPerShaderStage
    {
        get
        {
            uint __res_302;
            throw new Exception();
            return __res_302;
        }
    }

    public uint MaxUniformBuffersPerShaderStage
    {
        get
        {
            uint __res_303;
            throw new Exception();
            return __res_303;
        }
    }

    public ulong MaxUniformBufferBindingSize
    {
        get
        {
            ulong __res_304;
            throw new Exception();
            return __res_304;
        }
    }

    public ulong MaxStorageBufferBindingSize
    {
        get
        {
            ulong __res_305;
            throw new Exception();
            return __res_305;
        }
    }

    public uint MinUniformBufferOffsetAlignment
    {
        get
        {
            uint __res_306;
            throw new Exception();
            return __res_306;
        }
    }

    public uint MinStorageBufferOffsetAlignment
    {
        get
        {
            uint __res_307;
            throw new Exception();
            return __res_307;
        }
    }

    public uint MaxVertexBuffers
    {
        get
        {
            uint __res_308;
            throw new Exception();
            return __res_308;
        }
    }

    public ulong MaxBufferSize
    {
        get
        {
            ulong __res_309;
            throw new Exception();
            return __res_309;
        }
    }

    public uint MaxVertexAttributes
    {
        get
        {
            uint __res_310;
            throw new Exception();
            return __res_310;
        }
    }

    public uint MaxVertexBufferArrayStride
    {
        get
        {
            uint __res_311;
            throw new Exception();
            return __res_311;
        }
    }

    public uint MaxInterStageShaderVariables
    {
        get
        {
            uint __res_312;
            throw new Exception();
            return __res_312;
        }
    }

    public uint MaxColorAttachments
    {
        get
        {
            uint __res_313;
            throw new Exception();
            return __res_313;
        }
    }

    public uint MaxColorAttachmentBytesPerSample
    {
        get
        {
            uint __res_314;
            throw new Exception();
            return __res_314;
        }
    }

    public uint MaxComputeWorkgroupStorageSize
    {
        get
        {
            uint __res_315;
            throw new Exception();
            return __res_315;
        }
    }

    public uint MaxComputeInvocationsPerWorkgroup
    {
        get
        {
            uint __res_316;
            throw new Exception();
            return __res_316;
        }
    }

    public uint MaxComputeWorkgroupSizeX
    {
        get
        {
            uint __res_317;
            throw new Exception();
            return __res_317;
        }
    }

    public uint MaxComputeWorkgroupSizeY
    {
        get
        {
            uint __res_318;
            throw new Exception();
            return __res_318;
        }
    }

    public uint MaxComputeWorkgroupSizeZ
    {
        get
        {
            uint __res_319;
            throw new Exception();
            return __res_319;
        }
    }

    public uint MaxComputeWorkgroupsPerDimension
    {
        get
        {
            uint __res_320;
            throw new Exception();
            return __res_320;
        }
    }
}

#nullable disable