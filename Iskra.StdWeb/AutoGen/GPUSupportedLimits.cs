// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class GPUSupportedLimits(JSObject obj): JSObjectProxy(obj)
{
    public uint MaxTextureDimension1D
    {
        get
        {
            uint __res_560;
            double __res_561 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxTextureDimension1D");
            __res_560 = Convert.ToUInt32(__res_561);
            return __res_560;
        }
    }

    public uint MaxTextureDimension2D
    {
        get
        {
            uint __res_562;
            double __res_563 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxTextureDimension2D");
            __res_562 = Convert.ToUInt32(__res_563);
            return __res_562;
        }
    }

    public uint MaxTextureDimension3D
    {
        get
        {
            uint __res_564;
            double __res_565 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxTextureDimension3D");
            __res_564 = Convert.ToUInt32(__res_565);
            return __res_564;
        }
    }

    public uint MaxTextureArrayLayers
    {
        get
        {
            uint __res_566;
            double __res_567 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxTextureArrayLayers");
            __res_566 = Convert.ToUInt32(__res_567);
            return __res_566;
        }
    }

    public uint MaxBindGroups
    {
        get
        {
            uint __res_568;
            double __res_569 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxBindGroups");
            __res_568 = Convert.ToUInt32(__res_569);
            return __res_568;
        }
    }

    public uint MaxBindGroupsPlusVertexBuffers
    {
        get
        {
            uint __res_570;
            double __res_571 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxBindGroupsPlusVertexBuffers");
            __res_570 = Convert.ToUInt32(__res_571);
            return __res_570;
        }
    }

    public uint MaxBindingsPerBindGroup
    {
        get
        {
            uint __res_572;
            double __res_573 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxBindingsPerBindGroup");
            __res_572 = Convert.ToUInt32(__res_573);
            return __res_572;
        }
    }

    public uint MaxDynamicUniformBuffersPerPipelineLayout
    {
        get
        {
            uint __res_574;
            double __res_575 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxDynamicUniformBuffersPerPipelineLayout");
            __res_574 = Convert.ToUInt32(__res_575);
            return __res_574;
        }
    }

    public uint MaxDynamicStorageBuffersPerPipelineLayout
    {
        get
        {
            uint __res_576;
            double __res_577 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxDynamicStorageBuffersPerPipelineLayout");
            __res_576 = Convert.ToUInt32(__res_577);
            return __res_576;
        }
    }

    public uint MaxSampledTexturesPerShaderStage
    {
        get
        {
            uint __res_578;
            double __res_579 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxSampledTexturesPerShaderStage");
            __res_578 = Convert.ToUInt32(__res_579);
            return __res_578;
        }
    }

    public uint MaxSamplersPerShaderStage
    {
        get
        {
            uint __res_580;
            double __res_581 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxSamplersPerShaderStage");
            __res_580 = Convert.ToUInt32(__res_581);
            return __res_580;
        }
    }

    public uint MaxStorageBuffersPerShaderStage
    {
        get
        {
            uint __res_582;
            double __res_583 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxStorageBuffersPerShaderStage");
            __res_582 = Convert.ToUInt32(__res_583);
            return __res_582;
        }
    }

    public uint MaxStorageTexturesPerShaderStage
    {
        get
        {
            uint __res_584;
            double __res_585 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxStorageTexturesPerShaderStage");
            __res_584 = Convert.ToUInt32(__res_585);
            return __res_584;
        }
    }

    public uint MaxUniformBuffersPerShaderStage
    {
        get
        {
            uint __res_586;
            double __res_587 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxUniformBuffersPerShaderStage");
            __res_586 = Convert.ToUInt32(__res_587);
            return __res_586;
        }
    }

    public ulong MaxUniformBufferBindingSize
    {
        get
        {
            ulong __res_588;
            double __res_589 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxUniformBufferBindingSize");
            __res_588 = Convert.ToUInt64(__res_589);
            return __res_588;
        }
    }

    public ulong MaxStorageBufferBindingSize
    {
        get
        {
            ulong __res_590;
            double __res_591 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxStorageBufferBindingSize");
            __res_590 = Convert.ToUInt64(__res_591);
            return __res_590;
        }
    }

    public uint MinUniformBufferOffsetAlignment
    {
        get
        {
            uint __res_592;
            double __res_593 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "minUniformBufferOffsetAlignment");
            __res_592 = Convert.ToUInt32(__res_593);
            return __res_592;
        }
    }

    public uint MinStorageBufferOffsetAlignment
    {
        get
        {
            uint __res_594;
            double __res_595 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "minStorageBufferOffsetAlignment");
            __res_594 = Convert.ToUInt32(__res_595);
            return __res_594;
        }
    }

    public uint MaxVertexBuffers
    {
        get
        {
            uint __res_596;
            double __res_597 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxVertexBuffers");
            __res_596 = Convert.ToUInt32(__res_597);
            return __res_596;
        }
    }

    public ulong MaxBufferSize
    {
        get
        {
            ulong __res_598;
            double __res_599 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxBufferSize");
            __res_598 = Convert.ToUInt64(__res_599);
            return __res_598;
        }
    }

    public uint MaxVertexAttributes
    {
        get
        {
            uint __res_600;
            double __res_601 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxVertexAttributes");
            __res_600 = Convert.ToUInt32(__res_601);
            return __res_600;
        }
    }

    public uint MaxVertexBufferArrayStride
    {
        get
        {
            uint __res_602;
            double __res_603 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxVertexBufferArrayStride");
            __res_602 = Convert.ToUInt32(__res_603);
            return __res_602;
        }
    }

    public uint MaxInterStageShaderVariables
    {
        get
        {
            uint __res_604;
            double __res_605 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxInterStageShaderVariables");
            __res_604 = Convert.ToUInt32(__res_605);
            return __res_604;
        }
    }

    public uint MaxColorAttachments
    {
        get
        {
            uint __res_606;
            double __res_607 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxColorAttachments");
            __res_606 = Convert.ToUInt32(__res_607);
            return __res_606;
        }
    }

    public uint MaxColorAttachmentBytesPerSample
    {
        get
        {
            uint __res_608;
            double __res_609 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxColorAttachmentBytesPerSample");
            __res_608 = Convert.ToUInt32(__res_609);
            return __res_608;
        }
    }

    public uint MaxComputeWorkgroupStorageSize
    {
        get
        {
            uint __res_610;
            double __res_611 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupStorageSize");
            __res_610 = Convert.ToUInt32(__res_611);
            return __res_610;
        }
    }

    public uint MaxComputeInvocationsPerWorkgroup
    {
        get
        {
            uint __res_612;
            double __res_613 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeInvocationsPerWorkgroup");
            __res_612 = Convert.ToUInt32(__res_613);
            return __res_612;
        }
    }

    public uint MaxComputeWorkgroupSizeX
    {
        get
        {
            uint __res_614;
            double __res_615 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupSizeX");
            __res_614 = Convert.ToUInt32(__res_615);
            return __res_614;
        }
    }

    public uint MaxComputeWorkgroupSizeY
    {
        get
        {
            uint __res_616;
            double __res_617 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupSizeY");
            __res_616 = Convert.ToUInt32(__res_617);
            return __res_616;
        }
    }

    public uint MaxComputeWorkgroupSizeZ
    {
        get
        {
            uint __res_618;
            double __res_619 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupSizeZ");
            __res_618 = Convert.ToUInt32(__res_619);
            return __res_618;
        }
    }

    public uint MaxComputeWorkgroupsPerDimension
    {
        get
        {
            uint __res_620;
            double __res_621 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupsPerDimension");
            __res_620 = Convert.ToUInt32(__res_621);
            return __res_620;
        }
    }
}

#nullable disable