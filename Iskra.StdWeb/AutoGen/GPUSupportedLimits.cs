// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class GPUSupportedLimits(JSObject obj): JSObjectProxy(obj)
{
    public uint MaxTextureDimension1D
    {
        get
        {
            uint __res_631;
            double __res_632 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxTextureDimension1D");
            __res_631 = Convert.ToUInt32(__res_632);
            return __res_631;
        }
    }

    public uint MaxTextureDimension2D
    {
        get
        {
            uint __res_633;
            double __res_634 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxTextureDimension2D");
            __res_633 = Convert.ToUInt32(__res_634);
            return __res_633;
        }
    }

    public uint MaxTextureDimension3D
    {
        get
        {
            uint __res_635;
            double __res_636 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxTextureDimension3D");
            __res_635 = Convert.ToUInt32(__res_636);
            return __res_635;
        }
    }

    public uint MaxTextureArrayLayers
    {
        get
        {
            uint __res_637;
            double __res_638 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxTextureArrayLayers");
            __res_637 = Convert.ToUInt32(__res_638);
            return __res_637;
        }
    }

    public uint MaxBindGroups
    {
        get
        {
            uint __res_639;
            double __res_640 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxBindGroups");
            __res_639 = Convert.ToUInt32(__res_640);
            return __res_639;
        }
    }

    public uint MaxBindGroupsPlusVertexBuffers
    {
        get
        {
            uint __res_641;
            double __res_642 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxBindGroupsPlusVertexBuffers");
            __res_641 = Convert.ToUInt32(__res_642);
            return __res_641;
        }
    }

    public uint MaxBindingsPerBindGroup
    {
        get
        {
            uint __res_643;
            double __res_644 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxBindingsPerBindGroup");
            __res_643 = Convert.ToUInt32(__res_644);
            return __res_643;
        }
    }

    public uint MaxDynamicUniformBuffersPerPipelineLayout
    {
        get
        {
            uint __res_645;
            double __res_646 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxDynamicUniformBuffersPerPipelineLayout");
            __res_645 = Convert.ToUInt32(__res_646);
            return __res_645;
        }
    }

    public uint MaxDynamicStorageBuffersPerPipelineLayout
    {
        get
        {
            uint __res_647;
            double __res_648 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxDynamicStorageBuffersPerPipelineLayout");
            __res_647 = Convert.ToUInt32(__res_648);
            return __res_647;
        }
    }

    public uint MaxSampledTexturesPerShaderStage
    {
        get
        {
            uint __res_649;
            double __res_650 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxSampledTexturesPerShaderStage");
            __res_649 = Convert.ToUInt32(__res_650);
            return __res_649;
        }
    }

    public uint MaxSamplersPerShaderStage
    {
        get
        {
            uint __res_651;
            double __res_652 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxSamplersPerShaderStage");
            __res_651 = Convert.ToUInt32(__res_652);
            return __res_651;
        }
    }

    public uint MaxStorageBuffersPerShaderStage
    {
        get
        {
            uint __res_653;
            double __res_654 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxStorageBuffersPerShaderStage");
            __res_653 = Convert.ToUInt32(__res_654);
            return __res_653;
        }
    }

    public uint MaxStorageTexturesPerShaderStage
    {
        get
        {
            uint __res_655;
            double __res_656 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxStorageTexturesPerShaderStage");
            __res_655 = Convert.ToUInt32(__res_656);
            return __res_655;
        }
    }

    public uint MaxUniformBuffersPerShaderStage
    {
        get
        {
            uint __res_657;
            double __res_658 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxUniformBuffersPerShaderStage");
            __res_657 = Convert.ToUInt32(__res_658);
            return __res_657;
        }
    }

    public ulong MaxUniformBufferBindingSize
    {
        get
        {
            ulong __res_659;
            double __res_660 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxUniformBufferBindingSize");
            __res_659 = Convert.ToUInt64(__res_660);
            return __res_659;
        }
    }

    public ulong MaxStorageBufferBindingSize
    {
        get
        {
            ulong __res_661;
            double __res_662 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxStorageBufferBindingSize");
            __res_661 = Convert.ToUInt64(__res_662);
            return __res_661;
        }
    }

    public uint MinUniformBufferOffsetAlignment
    {
        get
        {
            uint __res_663;
            double __res_664 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "minUniformBufferOffsetAlignment");
            __res_663 = Convert.ToUInt32(__res_664);
            return __res_663;
        }
    }

    public uint MinStorageBufferOffsetAlignment
    {
        get
        {
            uint __res_665;
            double __res_666 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "minStorageBufferOffsetAlignment");
            __res_665 = Convert.ToUInt32(__res_666);
            return __res_665;
        }
    }

    public uint MaxVertexBuffers
    {
        get
        {
            uint __res_667;
            double __res_668 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxVertexBuffers");
            __res_667 = Convert.ToUInt32(__res_668);
            return __res_667;
        }
    }

    public ulong MaxBufferSize
    {
        get
        {
            ulong __res_669;
            double __res_670 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxBufferSize");
            __res_669 = Convert.ToUInt64(__res_670);
            return __res_669;
        }
    }

    public uint MaxVertexAttributes
    {
        get
        {
            uint __res_671;
            double __res_672 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxVertexAttributes");
            __res_671 = Convert.ToUInt32(__res_672);
            return __res_671;
        }
    }

    public uint MaxVertexBufferArrayStride
    {
        get
        {
            uint __res_673;
            double __res_674 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxVertexBufferArrayStride");
            __res_673 = Convert.ToUInt32(__res_674);
            return __res_673;
        }
    }

    public uint MaxInterStageShaderVariables
    {
        get
        {
            uint __res_675;
            double __res_676 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxInterStageShaderVariables");
            __res_675 = Convert.ToUInt32(__res_676);
            return __res_675;
        }
    }

    public uint MaxColorAttachments
    {
        get
        {
            uint __res_677;
            double __res_678 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxColorAttachments");
            __res_677 = Convert.ToUInt32(__res_678);
            return __res_677;
        }
    }

    public uint MaxColorAttachmentBytesPerSample
    {
        get
        {
            uint __res_679;
            double __res_680 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxColorAttachmentBytesPerSample");
            __res_679 = Convert.ToUInt32(__res_680);
            return __res_679;
        }
    }

    public uint MaxComputeWorkgroupStorageSize
    {
        get
        {
            uint __res_681;
            double __res_682 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupStorageSize");
            __res_681 = Convert.ToUInt32(__res_682);
            return __res_681;
        }
    }

    public uint MaxComputeInvocationsPerWorkgroup
    {
        get
        {
            uint __res_683;
            double __res_684 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeInvocationsPerWorkgroup");
            __res_683 = Convert.ToUInt32(__res_684);
            return __res_683;
        }
    }

    public uint MaxComputeWorkgroupSizeX
    {
        get
        {
            uint __res_685;
            double __res_686 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupSizeX");
            __res_685 = Convert.ToUInt32(__res_686);
            return __res_685;
        }
    }

    public uint MaxComputeWorkgroupSizeY
    {
        get
        {
            uint __res_687;
            double __res_688 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupSizeY");
            __res_687 = Convert.ToUInt32(__res_688);
            return __res_687;
        }
    }

    public uint MaxComputeWorkgroupSizeZ
    {
        get
        {
            uint __res_689;
            double __res_690 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupSizeZ");
            __res_689 = Convert.ToUInt32(__res_690);
            return __res_689;
        }
    }

    public uint MaxComputeWorkgroupsPerDimension
    {
        get
        {
            uint __res_691;
            double __res_692 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupsPerDimension");
            __res_691 = Convert.ToUInt32(__res_692);
            return __res_691;
        }
    }
}

#nullable disable