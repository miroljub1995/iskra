// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class GPUSupportedLimits(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public uint MaxTextureDimension1D
    {
        get
        {
            uint __res_1454;
            double __res_1455 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxTextureDimension1D");
            __res_1454 = Convert.ToUInt32(__res_1455);
            return __res_1454;
        }
    }

    public uint MaxTextureDimension2D
    {
        get
        {
            uint __res_1456;
            double __res_1457 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxTextureDimension2D");
            __res_1456 = Convert.ToUInt32(__res_1457);
            return __res_1456;
        }
    }

    public uint MaxTextureDimension3D
    {
        get
        {
            uint __res_1458;
            double __res_1459 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxTextureDimension3D");
            __res_1458 = Convert.ToUInt32(__res_1459);
            return __res_1458;
        }
    }

    public uint MaxTextureArrayLayers
    {
        get
        {
            uint __res_1460;
            double __res_1461 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxTextureArrayLayers");
            __res_1460 = Convert.ToUInt32(__res_1461);
            return __res_1460;
        }
    }

    public uint MaxBindGroups
    {
        get
        {
            uint __res_1462;
            double __res_1463 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxBindGroups");
            __res_1462 = Convert.ToUInt32(__res_1463);
            return __res_1462;
        }
    }

    public uint MaxBindGroupsPlusVertexBuffers
    {
        get
        {
            uint __res_1464;
            double __res_1465 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxBindGroupsPlusVertexBuffers");
            __res_1464 = Convert.ToUInt32(__res_1465);
            return __res_1464;
        }
    }

    public uint MaxBindingsPerBindGroup
    {
        get
        {
            uint __res_1466;
            double __res_1467 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxBindingsPerBindGroup");
            __res_1466 = Convert.ToUInt32(__res_1467);
            return __res_1466;
        }
    }

    public uint MaxDynamicUniformBuffersPerPipelineLayout
    {
        get
        {
            uint __res_1468;
            double __res_1469 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxDynamicUniformBuffersPerPipelineLayout");
            __res_1468 = Convert.ToUInt32(__res_1469);
            return __res_1468;
        }
    }

    public uint MaxDynamicStorageBuffersPerPipelineLayout
    {
        get
        {
            uint __res_1470;
            double __res_1471 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxDynamicStorageBuffersPerPipelineLayout");
            __res_1470 = Convert.ToUInt32(__res_1471);
            return __res_1470;
        }
    }

    public uint MaxSampledTexturesPerShaderStage
    {
        get
        {
            uint __res_1472;
            double __res_1473 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxSampledTexturesPerShaderStage");
            __res_1472 = Convert.ToUInt32(__res_1473);
            return __res_1472;
        }
    }

    public uint MaxSamplersPerShaderStage
    {
        get
        {
            uint __res_1474;
            double __res_1475 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxSamplersPerShaderStage");
            __res_1474 = Convert.ToUInt32(__res_1475);
            return __res_1474;
        }
    }

    public uint MaxStorageBuffersPerShaderStage
    {
        get
        {
            uint __res_1476;
            double __res_1477 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxStorageBuffersPerShaderStage");
            __res_1476 = Convert.ToUInt32(__res_1477);
            return __res_1476;
        }
    }

    public uint MaxStorageTexturesPerShaderStage
    {
        get
        {
            uint __res_1478;
            double __res_1479 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxStorageTexturesPerShaderStage");
            __res_1478 = Convert.ToUInt32(__res_1479);
            return __res_1478;
        }
    }

    public uint MaxUniformBuffersPerShaderStage
    {
        get
        {
            uint __res_1480;
            double __res_1481 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxUniformBuffersPerShaderStage");
            __res_1480 = Convert.ToUInt32(__res_1481);
            return __res_1480;
        }
    }

    public ulong MaxUniformBufferBindingSize
    {
        get
        {
            ulong __res_1482;
            double __res_1483 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxUniformBufferBindingSize");
            __res_1482 = Convert.ToUInt64(__res_1483);
            return __res_1482;
        }
    }

    public ulong MaxStorageBufferBindingSize
    {
        get
        {
            ulong __res_1484;
            double __res_1485 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxStorageBufferBindingSize");
            __res_1484 = Convert.ToUInt64(__res_1485);
            return __res_1484;
        }
    }

    public uint MinUniformBufferOffsetAlignment
    {
        get
        {
            uint __res_1486;
            double __res_1487 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "minUniformBufferOffsetAlignment");
            __res_1486 = Convert.ToUInt32(__res_1487);
            return __res_1486;
        }
    }

    public uint MinStorageBufferOffsetAlignment
    {
        get
        {
            uint __res_1488;
            double __res_1489 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "minStorageBufferOffsetAlignment");
            __res_1488 = Convert.ToUInt32(__res_1489);
            return __res_1488;
        }
    }

    public uint MaxVertexBuffers
    {
        get
        {
            uint __res_1490;
            double __res_1491 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxVertexBuffers");
            __res_1490 = Convert.ToUInt32(__res_1491);
            return __res_1490;
        }
    }

    public ulong MaxBufferSize
    {
        get
        {
            ulong __res_1492;
            double __res_1493 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxBufferSize");
            __res_1492 = Convert.ToUInt64(__res_1493);
            return __res_1492;
        }
    }

    public uint MaxVertexAttributes
    {
        get
        {
            uint __res_1494;
            double __res_1495 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxVertexAttributes");
            __res_1494 = Convert.ToUInt32(__res_1495);
            return __res_1494;
        }
    }

    public uint MaxVertexBufferArrayStride
    {
        get
        {
            uint __res_1496;
            double __res_1497 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxVertexBufferArrayStride");
            __res_1496 = Convert.ToUInt32(__res_1497);
            return __res_1496;
        }
    }

    public uint MaxInterStageShaderVariables
    {
        get
        {
            uint __res_1498;
            double __res_1499 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxInterStageShaderVariables");
            __res_1498 = Convert.ToUInt32(__res_1499);
            return __res_1498;
        }
    }

    public uint MaxColorAttachments
    {
        get
        {
            uint __res_1500;
            double __res_1501 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxColorAttachments");
            __res_1500 = Convert.ToUInt32(__res_1501);
            return __res_1500;
        }
    }

    public uint MaxColorAttachmentBytesPerSample
    {
        get
        {
            uint __res_1502;
            double __res_1503 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxColorAttachmentBytesPerSample");
            __res_1502 = Convert.ToUInt32(__res_1503);
            return __res_1502;
        }
    }

    public uint MaxComputeWorkgroupStorageSize
    {
        get
        {
            uint __res_1504;
            double __res_1505 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupStorageSize");
            __res_1504 = Convert.ToUInt32(__res_1505);
            return __res_1504;
        }
    }

    public uint MaxComputeInvocationsPerWorkgroup
    {
        get
        {
            uint __res_1506;
            double __res_1507 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeInvocationsPerWorkgroup");
            __res_1506 = Convert.ToUInt32(__res_1507);
            return __res_1506;
        }
    }

    public uint MaxComputeWorkgroupSizeX
    {
        get
        {
            uint __res_1508;
            double __res_1509 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupSizeX");
            __res_1508 = Convert.ToUInt32(__res_1509);
            return __res_1508;
        }
    }

    public uint MaxComputeWorkgroupSizeY
    {
        get
        {
            uint __res_1510;
            double __res_1511 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupSizeY");
            __res_1510 = Convert.ToUInt32(__res_1511);
            return __res_1510;
        }
    }

    public uint MaxComputeWorkgroupSizeZ
    {
        get
        {
            uint __res_1512;
            double __res_1513 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupSizeZ");
            __res_1512 = Convert.ToUInt32(__res_1513);
            return __res_1512;
        }
    }

    public uint MaxComputeWorkgroupsPerDimension
    {
        get
        {
            uint __res_1514;
            double __res_1515 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxComputeWorkgroupsPerDimension");
            __res_1514 = Convert.ToUInt32(__res_1515);
            return __res_1514;
        }
    }
}

#nullable disable