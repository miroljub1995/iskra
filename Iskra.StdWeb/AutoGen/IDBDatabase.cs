// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class IDBDatabase(JSObject obj): EventTarget(obj)
{
    public string Name
    {
        get
        {
            string __res_6418;
            string __res_6419 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "name");
            __res_6418 = __res_6419;
            return __res_6418;
        }
    }

    public ulong Version
    {
        get
        {
            ulong __res_6420;
            double __res_6421 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "version");
            __res_6420 = Convert.ToUInt64(__res_6421);
            return __res_6420;
        }
    }

    public Iskra.StdWeb.DOMStringList ObjectStoreNames
    {
        get
        {
            Iskra.StdWeb.DOMStringList __res_6422;
            JSObject __res_6423 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "objectStoreNames");
            throw new Exception("Marshaller from \"__res_6423\" to \"__res_6422\" not supported.");
            return __res_6422;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onabort
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_6424;
            JSObject? __res_6425 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onabort");
            if (__res_6425 is null)
            {
                __res_6424 = null;
            }
            else
            {
                JSObject __notNullable_6426 = (JSObject)__res_6425;
                throw new Exception("Marshaller from \"__notNullable_6426\" to \"__res_6424\" not supported.");
            }
            return __res_6424;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onclose
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_6427;
            JSObject? __res_6428 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onclose");
            if (__res_6428 is null)
            {
                __res_6427 = null;
            }
            else
            {
                JSObject __notNullable_6429 = (JSObject)__res_6428;
                throw new Exception("Marshaller from \"__notNullable_6429\" to \"__res_6427\" not supported.");
            }
            return __res_6427;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onerror
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_6430;
            JSObject? __res_6431 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onerror");
            if (__res_6431 is null)
            {
                __res_6430 = null;
            }
            else
            {
                JSObject __notNullable_6432 = (JSObject)__res_6431;
                throw new Exception("Marshaller from \"__notNullable_6432\" to \"__res_6430\" not supported.");
            }
            return __res_6430;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onversionchange
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_6433;
            JSObject? __res_6434 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onversionchange");
            if (__res_6434 is null)
            {
                __res_6433 = null;
            }
            else
            {
                JSObject __notNullable_6435 = (JSObject)__res_6434;
                throw new Exception("Marshaller from \"__notNullable_6435\" to \"__res_6433\" not supported.");
            }
            return __res_6433;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable