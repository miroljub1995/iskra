// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class MIDIPort(global::System.Runtime.InteropServices.JavaScript.JSObject obj): EventTarget(obj)
{
    public string Id
    {
        get
        {
            string __res_7587;
            string __res_7588 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "id");
            __res_7587 = __res_7588;
            return __res_7587;
        }
    }

    public string? Manufacturer
    {
        get
        {
            string? __res_7589;
            string? __res_7590 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "manufacturer");
            if (__res_7590 is null)
            {
                __res_7589 = null;
            }
            else
            {
                string __notNullable_7591 = (string)__res_7590;
                __res_7589 = __notNullable_7591;
            }
            return __res_7589;
        }
    }

    public string? Name
    {
        get
        {
            string? __res_7592;
            string? __res_7593 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "name");
            if (__res_7593 is null)
            {
                __res_7592 = null;
            }
            else
            {
                string __notNullable_7594 = (string)__res_7593;
                __res_7592 = __notNullable_7594;
            }
            return __res_7592;
        }
    }

    public global::Iskra.StdWeb.MIDIPortType Type
    {
        get
        {
            global::Iskra.StdWeb.MIDIPortType __res_7595;
            string __res_7596 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "type");
            __res_7595 = global::Iskra.StdWeb.MIDIPortType.Create(__res_7596);
            return __res_7595;
        }
    }

    public string? Version
    {
        get
        {
            string? __res_7597;
            string? __res_7598 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "version");
            if (__res_7598 is null)
            {
                __res_7597 = null;
            }
            else
            {
                string __notNullable_7599 = (string)__res_7598;
                __res_7597 = __notNullable_7599;
            }
            return __res_7597;
        }
    }

    public global::Iskra.StdWeb.MIDIPortDeviceState State
    {
        get
        {
            global::Iskra.StdWeb.MIDIPortDeviceState __res_7600;
            string __res_7601 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "state");
            __res_7600 = global::Iskra.StdWeb.MIDIPortDeviceState.Create(__res_7601);
            return __res_7600;
        }
    }

    public global::Iskra.StdWeb.MIDIPortConnectionState Connection
    {
        get
        {
            global::Iskra.StdWeb.MIDIPortConnectionState __res_7602;
            string __res_7603 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "connection");
            __res_7602 = global::Iskra.StdWeb.MIDIPortConnectionState.Create(__res_7603);
            return __res_7602;
        }
    }

    public global::Iskra.StdWeb.EventHandlerNonNull? Onstatechange
    {
        get
        {
            global::Iskra.StdWeb.EventHandlerNonNull? __res_7604;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_7605 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onstatechange");
            if (__res_7605 is null)
            {
                __res_7604 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_7606 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_7605;
                throw new global::System.Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = EventHandlerNonNull } not supported.");
            }
            return __res_7604;
        }
        set
        {
            global::System.Runtime.InteropServices.JavaScript.JSObject? __marshalledValue_7607;
            if (value is null)
            {
                __marshalledValue_7607 = null;
            }
            else
            {
                global::Iskra.StdWeb.EventHandlerNonNull __notNullable_7608 = (global::Iskra.StdWeb.EventHandlerNonNull)value;
                throw new global::System.Exception("Marshaller ToJS from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = EventHandlerNonNull } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } not supported.");
            }
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsJSObjectV2AsNullable(JSObject, "onstatechange", __marshalledValue_7607);
        }
    }
}

#nullable disable