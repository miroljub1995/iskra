// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class MIDIPort(JSObject obj): EventTarget(obj)
{
    public string Id
    {
        get
        {
            string __res_7489;
            string __res_7490 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "id");
            __res_7489 = __res_7490;
            return __res_7489;
        }
    }

    public string? Manufacturer
    {
        get
        {
            string? __res_7491;
            string? __res_7492 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "manufacturer");
            if (__res_7492 is null)
            {
                __res_7491 = null;
            }
            else
            {
                string __notNullable_7493 = (string)__res_7492;
                __res_7491 = __notNullable_7493;
            }
            return __res_7491;
        }
    }

    public string? Name
    {
        get
        {
            string? __res_7494;
            string? __res_7495 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "name");
            if (__res_7495 is null)
            {
                __res_7494 = null;
            }
            else
            {
                string __notNullable_7496 = (string)__res_7495;
                __res_7494 = __notNullable_7496;
            }
            return __res_7494;
        }
    }

    public Iskra.StdWeb.MIDIPortType Type
    {
        get
        {
            Iskra.StdWeb.MIDIPortType __res_7497;
            JSObject __res_7498 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "type");
            throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = MIDIPortType } not supported.");
            return __res_7497;
        }
    }

    public string? Version
    {
        get
        {
            string? __res_7499;
            string? __res_7500 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "version");
            if (__res_7500 is null)
            {
                __res_7499 = null;
            }
            else
            {
                string __notNullable_7501 = (string)__res_7500;
                __res_7499 = __notNullable_7501;
            }
            return __res_7499;
        }
    }

    public Iskra.StdWeb.MIDIPortDeviceState State
    {
        get
        {
            Iskra.StdWeb.MIDIPortDeviceState __res_7502;
            JSObject __res_7503 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "state");
            throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = MIDIPortDeviceState } not supported.");
            return __res_7502;
        }
    }

    public Iskra.StdWeb.MIDIPortConnectionState Connection
    {
        get
        {
            Iskra.StdWeb.MIDIPortConnectionState __res_7504;
            JSObject __res_7505 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "connection");
            throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = MIDIPortConnectionState } not supported.");
            return __res_7504;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onstatechange
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_7506;
            JSObject? __res_7507 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onstatechange");
            if (__res_7507 is null)
            {
                __res_7506 = null;
            }
            else
            {
                JSObject __notNullable_7508 = (JSObject)__res_7507;
                throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = EventHandlerNonNull } not supported.");
            }
            return __res_7506;
        }
        set
        {
            JSObject? __marshalledValue_7509;
            if (value is null)
            {
                __marshalledValue_7509 = null;
            }
            else
            {
                Iskra.StdWeb.EventHandlerNonNull __notNullable_7510 = (Iskra.StdWeb.EventHandlerNonNull)value;
                throw new Exception("Marshaller ToJS from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = EventHandlerNonNull } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } not supported.");
            }
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsJSObjectV2AsNullable(JSObject, "onstatechange", __marshalledValue_7509);
        }
    }
}

#nullable disable