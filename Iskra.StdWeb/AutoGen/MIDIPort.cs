// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class MIDIPort(global::System.Runtime.InteropServices.JavaScript.JSObject obj): EventTarget(obj)
{
    public string Id
    {
        get
        {
            string __res_12828;
            string __res_12829 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "id");
            __res_12828 = __res_12829;
            return __res_12828;
        }
    }

    public string? Manufacturer
    {
        get
        {
            string? __res_12830;
            string? __res_12831 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "manufacturer");
            if (__res_12831 is null)
            {
                __res_12830 = null;
            }
            else
            {
                string __notNullable_12832 = (string)__res_12831;
                __res_12830 = __notNullable_12832;
            }
            return __res_12830;
        }
    }

    public string? Name
    {
        get
        {
            string? __res_12833;
            string? __res_12834 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "name");
            if (__res_12834 is null)
            {
                __res_12833 = null;
            }
            else
            {
                string __notNullable_12835 = (string)__res_12834;
                __res_12833 = __notNullable_12835;
            }
            return __res_12833;
        }
    }

    public global::Iskra.StdWeb.MIDIPortType Type
    {
        get
        {
            global::Iskra.StdWeb.MIDIPortType __res_12836;
            string __res_12837 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "type");
            __res_12836 = global::Iskra.StdWeb.MIDIPortType.Create(__res_12837);
            return __res_12836;
        }
    }

    public string? Version
    {
        get
        {
            string? __res_12838;
            string? __res_12839 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "version");
            if (__res_12839 is null)
            {
                __res_12838 = null;
            }
            else
            {
                string __notNullable_12840 = (string)__res_12839;
                __res_12838 = __notNullable_12840;
            }
            return __res_12838;
        }
    }

    public global::Iskra.StdWeb.MIDIPortDeviceState State
    {
        get
        {
            global::Iskra.StdWeb.MIDIPortDeviceState __res_12841;
            string __res_12842 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "state");
            __res_12841 = global::Iskra.StdWeb.MIDIPortDeviceState.Create(__res_12842);
            return __res_12841;
        }
    }

    public global::Iskra.StdWeb.MIDIPortConnectionState Connection
    {
        get
        {
            global::Iskra.StdWeb.MIDIPortConnectionState __res_12843;
            string __res_12844 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "connection");
            __res_12843 = global::Iskra.StdWeb.MIDIPortConnectionState.Create(__res_12844);
            return __res_12843;
        }
    }

    public global::Iskra.StdWeb.EventHandlerNonNull? Onstatechange
    {
        get
        {
            global::Iskra.StdWeb.EventHandlerNonNull? __res_12845;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_12846 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onstatechange");
            if (__res_12846 is null)
            {
                __res_12845 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_12847 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_12846;
                throw new global::System.Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = EventHandlerNonNull } not supported.");
            }
            return __res_12845;
        }
        set
        {
            global::System.Runtime.InteropServices.JavaScript.JSObject? __marshalledValue_12848;
            if (value is null)
            {
                __marshalledValue_12848 = null;
            }
            else
            {
                global::Iskra.StdWeb.EventHandlerNonNull __notNullable_12849 = (global::Iskra.StdWeb.EventHandlerNonNull)value;
                throw new global::System.Exception("Marshaller ToJS from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = EventHandlerNonNull } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } not supported.");
            }
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsJSObjectV2AsNullable(JSObject, "onstatechange", __marshalledValue_12848);
        }
    }
}

#nullable disable