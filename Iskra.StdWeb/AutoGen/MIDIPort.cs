// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class MIDIPort(global::System.Runtime.InteropServices.JavaScript.JSObject obj): EventTarget(obj)
{
    public string Id
    {
        get
        {
            string __res_7545;
            string __res_7546 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "id");
            __res_7545 = __res_7546;
            return __res_7545;
        }
    }

    public string? Manufacturer
    {
        get
        {
            string? __res_7547;
            string? __res_7548 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "manufacturer");
            if (__res_7548 is null)
            {
                __res_7547 = null;
            }
            else
            {
                string __notNullable_7549 = (string)__res_7548;
                __res_7547 = __notNullable_7549;
            }
            return __res_7547;
        }
    }

    public string? Name
    {
        get
        {
            string? __res_7550;
            string? __res_7551 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "name");
            if (__res_7551 is null)
            {
                __res_7550 = null;
            }
            else
            {
                string __notNullable_7552 = (string)__res_7551;
                __res_7550 = __notNullable_7552;
            }
            return __res_7550;
        }
    }

    public global::Iskra.StdWeb.MIDIPortType Type
    {
        get
        {
            global::Iskra.StdWeb.MIDIPortType __res_7553;
            global::System.Runtime.InteropServices.JavaScript.JSObject __res_7554 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "type");
            throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = MIDIPortType } not supported.");
            return __res_7553;
        }
    }

    public string? Version
    {
        get
        {
            string? __res_7555;
            string? __res_7556 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "version");
            if (__res_7556 is null)
            {
                __res_7555 = null;
            }
            else
            {
                string __notNullable_7557 = (string)__res_7556;
                __res_7555 = __notNullable_7557;
            }
            return __res_7555;
        }
    }

    public global::Iskra.StdWeb.MIDIPortDeviceState State
    {
        get
        {
            global::Iskra.StdWeb.MIDIPortDeviceState __res_7558;
            global::System.Runtime.InteropServices.JavaScript.JSObject __res_7559 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "state");
            throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = MIDIPortDeviceState } not supported.");
            return __res_7558;
        }
    }

    public global::Iskra.StdWeb.MIDIPortConnectionState Connection
    {
        get
        {
            global::Iskra.StdWeb.MIDIPortConnectionState __res_7560;
            global::System.Runtime.InteropServices.JavaScript.JSObject __res_7561 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "connection");
            throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = MIDIPortConnectionState } not supported.");
            return __res_7560;
        }
    }

    public global::Iskra.StdWeb.EventHandlerNonNull? Onstatechange
    {
        get
        {
            global::Iskra.StdWeb.EventHandlerNonNull? __res_7562;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_7563 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onstatechange");
            if (__res_7563 is null)
            {
                __res_7562 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_7564 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_7563;
                throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = EventHandlerNonNull } not supported.");
            }
            return __res_7562;
        }
        set
        {
            global::System.Runtime.InteropServices.JavaScript.JSObject? __marshalledValue_7565;
            if (value is null)
            {
                __marshalledValue_7565 = null;
            }
            else
            {
                global::Iskra.StdWeb.EventHandlerNonNull __notNullable_7566 = (global::Iskra.StdWeb.EventHandlerNonNull)value;
                throw new Exception("Marshaller ToJS from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = EventHandlerNonNull } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } not supported.");
            }
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsJSObjectV2AsNullable(JSObject, "onstatechange", __marshalledValue_7565);
        }
    }
}

#nullable disable