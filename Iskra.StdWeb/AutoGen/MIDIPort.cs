// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class MIDIPort(global::System.Runtime.InteropServices.JavaScript.JSObject obj): EventTarget(obj)
{
    public string Id
    {
        get
        {
            string __res_8666;
            string __res_8667 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "id");
            __res_8666 = __res_8667;
            return __res_8666;
        }
    }

    public string? Manufacturer
    {
        get
        {
            string? __res_8668;
            string? __res_8669 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "manufacturer");
            if (__res_8669 is null)
            {
                __res_8668 = null;
            }
            else
            {
                string __notNullable_8670 = (string)__res_8669;
                __res_8668 = __notNullable_8670;
            }
            return __res_8668;
        }
    }

    public string? Name
    {
        get
        {
            string? __res_8671;
            string? __res_8672 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "name");
            if (__res_8672 is null)
            {
                __res_8671 = null;
            }
            else
            {
                string __notNullable_8673 = (string)__res_8672;
                __res_8671 = __notNullable_8673;
            }
            return __res_8671;
        }
    }

    public global::Iskra.StdWeb.MIDIPortType Type
    {
        get
        {
            global::Iskra.StdWeb.MIDIPortType __res_8674;
            string __res_8675 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "type");
            __res_8674 = global::Iskra.StdWeb.MIDIPortType.Create(__res_8675);
            return __res_8674;
        }
    }

    public string? Version
    {
        get
        {
            string? __res_8676;
            string? __res_8677 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "version");
            if (__res_8677 is null)
            {
                __res_8676 = null;
            }
            else
            {
                string __notNullable_8678 = (string)__res_8677;
                __res_8676 = __notNullable_8678;
            }
            return __res_8676;
        }
    }

    public global::Iskra.StdWeb.MIDIPortDeviceState State
    {
        get
        {
            global::Iskra.StdWeb.MIDIPortDeviceState __res_8679;
            string __res_8680 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "state");
            __res_8679 = global::Iskra.StdWeb.MIDIPortDeviceState.Create(__res_8680);
            return __res_8679;
        }
    }

    public global::Iskra.StdWeb.MIDIPortConnectionState Connection
    {
        get
        {
            global::Iskra.StdWeb.MIDIPortConnectionState __res_8681;
            string __res_8682 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "connection");
            __res_8681 = global::Iskra.StdWeb.MIDIPortConnectionState.Create(__res_8682);
            return __res_8681;
        }
    }

    public global::Iskra.StdWeb.EventHandlerNonNull? Onstatechange
    {
        get
        {
            global::Iskra.StdWeb.EventHandlerNonNull? __res_8683;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_8684 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onstatechange");
            if (__res_8684 is null)
            {
                __res_8683 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_8685 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_8684;
                throw new global::System.Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = EventHandlerNonNull } not supported.");
            }
            return __res_8683;
        }
        set
        {
            global::System.Runtime.InteropServices.JavaScript.JSObject? __marshalledValue_8686;
            if (value is null)
            {
                __marshalledValue_8686 = null;
            }
            else
            {
                global::Iskra.StdWeb.EventHandlerNonNull __notNullable_8687 = (global::Iskra.StdWeb.EventHandlerNonNull)value;
                throw new global::System.Exception("Marshaller ToJS from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = EventHandlerNonNull } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } not supported.");
            }
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsJSObjectV2AsNullable(JSObject, "onstatechange", __marshalledValue_8686);
        }
    }
}

#nullable disable