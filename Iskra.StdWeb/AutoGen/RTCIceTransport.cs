// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class RTCIceTransport(JSObject obj): EventTarget(obj)
{
    public Iskra.StdWeb.RTCIceRole Role
    {
        get
        {
            Iskra.StdWeb.RTCIceRole __res_1709;
            JSObject __res_1710 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "role");
            throw new Exception("Marshaller from \"__res_1710\" to \"__res_1709\" not supported.");
            return __res_1709;
        }
    }

    public Iskra.StdWeb.RTCIceComponent Component
    {
        get
        {
            Iskra.StdWeb.RTCIceComponent __res_1711;
            JSObject __res_1712 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "component");
            throw new Exception("Marshaller from \"__res_1712\" to \"__res_1711\" not supported.");
            return __res_1711;
        }
    }

    public Iskra.StdWeb.RTCIceTransportState State
    {
        get
        {
            Iskra.StdWeb.RTCIceTransportState __res_1713;
            JSObject __res_1714 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "state");
            throw new Exception("Marshaller from \"__res_1714\" to \"__res_1713\" not supported.");
            return __res_1713;
        }
    }

    public Iskra.StdWeb.RTCIceGathererState GatheringState
    {
        get
        {
            Iskra.StdWeb.RTCIceGathererState __res_1715;
            JSObject __res_1716 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "gatheringState");
            throw new Exception("Marshaller from \"__res_1716\" to \"__res_1715\" not supported.");
            return __res_1715;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onstatechange
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1717;
            JSObject? __res_1718 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onstatechange");
            if (__res_1718 is null)
            {
                __res_1717 = null;
            }
            else
            {
                JSObject __notNullable_1719 = (JSObject)__res_1718;
                throw new Exception("Marshaller from \"__notNullable_1719\" to \"__res_1717\" not supported.");
            }
            return __res_1717;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Ongatheringstatechange
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1720;
            JSObject? __res_1721 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "ongatheringstatechange");
            if (__res_1721 is null)
            {
                __res_1720 = null;
            }
            else
            {
                JSObject __notNullable_1722 = (JSObject)__res_1721;
                throw new Exception("Marshaller from \"__notNullable_1722\" to \"__res_1720\" not supported.");
            }
            return __res_1720;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onselectedcandidatepairchange
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1723;
            JSObject? __res_1724 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onselectedcandidatepairchange");
            if (__res_1724 is null)
            {
                __res_1723 = null;
            }
            else
            {
                JSObject __notNullable_1725 = (JSObject)__res_1724;
                throw new Exception("Marshaller from \"__notNullable_1725\" to \"__res_1723\" not supported.");
            }
            return __res_1723;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable