// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class TextTrackCue(JSObject obj): EventTarget(obj)
{
    public Iskra.StdWeb.TextTrack? Track
    {
        get
        {
            Iskra.StdWeb.TextTrack? __res_4898;
            JSObject? __res_4899 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "track");
            if (__res_4899 is null)
            {
                __res_4898 = null;
            }
            else
            {
                JSObject __notNullable_4900 = (JSObject)__res_4899;
                throw new Exception("Marshaller from \"__notNullable_4900\" to \"__res_4898\" not supported.");
            }
            return __res_4898;
        }
    }

    public string Id
    {
        get
        {
            string __res_4901;
            string __res_4902 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "id");
            __res_4901 = __res_4902;
            return __res_4901;
        }
        set
        {
            throw new Exception();
        }
    }

    public double StartTime
    {
        get
        {
            double __res_4903;
            double __res_4904 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "startTime");
            __res_4903 = __res_4904;
            return __res_4903;
        }
        set
        {
            throw new Exception();
        }
    }

    public double EndTime
    {
        get
        {
            double __res_4905;
            double __res_4906 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "endTime");
            __res_4905 = __res_4906;
            return __res_4905;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool PauseOnExit
    {
        get
        {
            bool __res_4907;
            bool __res_4908 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "pauseOnExit");
            __res_4907 = __res_4908;
            return __res_4907;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onenter
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_4909;
            JSObject? __res_4910 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onenter");
            if (__res_4910 is null)
            {
                __res_4909 = null;
            }
            else
            {
                JSObject __notNullable_4911 = (JSObject)__res_4910;
                throw new Exception("Marshaller from \"__notNullable_4911\" to \"__res_4909\" not supported.");
            }
            return __res_4909;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onexit
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_4912;
            JSObject? __res_4913 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onexit");
            if (__res_4913 is null)
            {
                __res_4912 = null;
            }
            else
            {
                JSObject __notNullable_4914 = (JSObject)__res_4913;
                throw new Exception("Marshaller from \"__notNullable_4914\" to \"__res_4912\" not supported.");
            }
            return __res_4912;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable