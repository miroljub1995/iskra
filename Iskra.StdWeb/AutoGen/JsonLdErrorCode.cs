// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public sealed partial class JsonLdErrorCode
{
    private readonly string _value;

    private JsonLdErrorCode(string value)
    {
        _value = value;
    }

    public static readonly JsonLdErrorCode Colliding_keywords = new("colliding keywords");
    public static readonly JsonLdErrorCode Conflicting_indexes = new("conflicting indexes");
    public static readonly JsonLdErrorCode Context_overflow = new("context overflow");
    public static readonly JsonLdErrorCode Cyclic_IRI_mapping = new("cyclic IRI mapping");
    public static readonly JsonLdErrorCode Invalid_id_value = new("invalid @id value");
    public static readonly JsonLdErrorCode Invalid_import_value = new("invalid @import value");
    public static readonly JsonLdErrorCode Invalid_included_value = new("invalid @included value");
    public static readonly JsonLdErrorCode Invalid_index_value = new("invalid @index value");
    public static readonly JsonLdErrorCode Invalid_nest_value = new("invalid @nest value");
    public static readonly JsonLdErrorCode Invalid_prefix_value = new("invalid @prefix value");
    public static readonly JsonLdErrorCode Invalid_propagate_value = new("invalid @propagate value");
    public static readonly JsonLdErrorCode Invalid_protected_value = new("invalid @protected value");
    public static readonly JsonLdErrorCode Invalid_reverse_value = new("invalid @reverse value");
    public static readonly JsonLdErrorCode Invalid_version_value = new("invalid @version value");
    public static readonly JsonLdErrorCode Invalid_base_direction = new("invalid base direction");
    public static readonly JsonLdErrorCode Invalid_base_IRI = new("invalid base IRI");
    public static readonly JsonLdErrorCode Invalid_container_mapping = new("invalid container mapping");
    public static readonly JsonLdErrorCode Invalid_context_entry = new("invalid context entry");
    public static readonly JsonLdErrorCode Invalid_context_nullification = new("invalid context nullification");
    public static readonly JsonLdErrorCode Invalid_default_language = new("invalid default language");
    public static readonly JsonLdErrorCode Invalid_IRI_mapping = new("invalid IRI mapping");
    public static readonly JsonLdErrorCode Invalid_JSON_literal = new("invalid JSON literal");
    public static readonly JsonLdErrorCode Invalid_keyword_alias = new("invalid keyword alias");
    public static readonly JsonLdErrorCode Invalid_language_map_value = new("invalid language map value");
    public static readonly JsonLdErrorCode Invalid_language_mapping = new("invalid language mapping");
    public static readonly JsonLdErrorCode Invalid_language_tagged_string = new("invalid language-tagged string");
    public static readonly JsonLdErrorCode Invalid_language_tagged_value = new("invalid language-tagged value");
    public static readonly JsonLdErrorCode Invalid_local_context = new("invalid local context");
    public static readonly JsonLdErrorCode Invalid_remote_context = new("invalid remote context");
    public static readonly JsonLdErrorCode Invalid_reverse_property_map = new("invalid reverse property map");
    public static readonly JsonLdErrorCode Invalid_reverse_property_value = new("invalid reverse property value");
    public static readonly JsonLdErrorCode Invalid_reverse_property = new("invalid reverse property");
    public static readonly JsonLdErrorCode Invalid_scoped_context = new("invalid scoped context");
    public static readonly JsonLdErrorCode Invalid_script_element = new("invalid script element");
    public static readonly JsonLdErrorCode Invalid_set_or_list_object = new("invalid set or list object");
    public static readonly JsonLdErrorCode Invalid_term_definition = new("invalid term definition");
    public static readonly JsonLdErrorCode Invalid_type_mapping = new("invalid type mapping");
    public static readonly JsonLdErrorCode Invalid_type_value = new("invalid type value");
    public static readonly JsonLdErrorCode Invalid_typed_value = new("invalid typed value");
    public static readonly JsonLdErrorCode Invalid_value_object_value = new("invalid value object value");
    public static readonly JsonLdErrorCode Invalid_value_object = new("invalid value object");
    public static readonly JsonLdErrorCode Invalid_vocab_mapping = new("invalid vocab mapping");
    public static readonly JsonLdErrorCode IRI_confused_with_prefix = new("IRI confused with prefix");
    public static readonly JsonLdErrorCode Keyword_redefinition = new("keyword redefinition");
    public static readonly JsonLdErrorCode Loading_document_failed = new("loading document failed");
    public static readonly JsonLdErrorCode Loading_remote_context_failed = new("loading remote context failed");
    public static readonly JsonLdErrorCode Multiple_context_link_headers = new("multiple context link headers");
    public static readonly JsonLdErrorCode Processing_mode_conflict = new("processing mode conflict");
    public static readonly JsonLdErrorCode Protected_term_redefinition = new("protected term redefinition");

    public override string ToString() => _value;

    public static JsonLdErrorCode Create(string value) => value switch
    {
        "colliding keywords" => Colliding_keywords,
        "conflicting indexes" => Conflicting_indexes,
        "context overflow" => Context_overflow,
        "cyclic IRI mapping" => Cyclic_IRI_mapping,
        "invalid @id value" => Invalid_id_value,
        "invalid @import value" => Invalid_import_value,
        "invalid @included value" => Invalid_included_value,
        "invalid @index value" => Invalid_index_value,
        "invalid @nest value" => Invalid_nest_value,
        "invalid @prefix value" => Invalid_prefix_value,
        "invalid @propagate value" => Invalid_propagate_value,
        "invalid @protected value" => Invalid_protected_value,
        "invalid @reverse value" => Invalid_reverse_value,
        "invalid @version value" => Invalid_version_value,
        "invalid base direction" => Invalid_base_direction,
        "invalid base IRI" => Invalid_base_IRI,
        "invalid container mapping" => Invalid_container_mapping,
        "invalid context entry" => Invalid_context_entry,
        "invalid context nullification" => Invalid_context_nullification,
        "invalid default language" => Invalid_default_language,
        "invalid IRI mapping" => Invalid_IRI_mapping,
        "invalid JSON literal" => Invalid_JSON_literal,
        "invalid keyword alias" => Invalid_keyword_alias,
        "invalid language map value" => Invalid_language_map_value,
        "invalid language mapping" => Invalid_language_mapping,
        "invalid language-tagged string" => Invalid_language_tagged_string,
        "invalid language-tagged value" => Invalid_language_tagged_value,
        "invalid local context" => Invalid_local_context,
        "invalid remote context" => Invalid_remote_context,
        "invalid reverse property map" => Invalid_reverse_property_map,
        "invalid reverse property value" => Invalid_reverse_property_value,
        "invalid reverse property" => Invalid_reverse_property,
        "invalid scoped context" => Invalid_scoped_context,
        "invalid script element" => Invalid_script_element,
        "invalid set or list object" => Invalid_set_or_list_object,
        "invalid term definition" => Invalid_term_definition,
        "invalid type mapping" => Invalid_type_mapping,
        "invalid type value" => Invalid_type_value,
        "invalid typed value" => Invalid_typed_value,
        "invalid value object value" => Invalid_value_object_value,
        "invalid value object" => Invalid_value_object,
        "invalid vocab mapping" => Invalid_vocab_mapping,
        "IRI confused with prefix" => IRI_confused_with_prefix,
        "keyword redefinition" => Keyword_redefinition,
        "loading document failed" => Loading_document_failed,
        "loading remote context failed" => Loading_remote_context_failed,
        "multiple context link headers" => Multiple_context_link_headers,
        "processing mode conflict" => Processing_mode_conflict,
        "protected term redefinition" => Protected_term_redefinition,
        _ => throw new ArgumentException($"Invalid value \"{value}\" for JsonLdErrorCode", nameof(value)),
    };
}

#nullable disable