// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class EncodedAudioChunk(JSObject obj): JSObjectProxy(obj)
{
    public Iskra.StdWeb.EncodedAudioChunkType Type
    {
        get
        {
            Iskra.StdWeb.EncodedAudioChunkType __res_2217;
            JSObject __res_2218 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "type");
            throw new Exception("Marshaller from \"__res_2218\" to \"__res_2217\" not supported.");
            return __res_2217;
        }
    }

    public long Timestamp
    {
        get
        {
            long __res_2219;
            double __res_2220 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "timestamp");
            __res_2219 = Convert.ToInt64(__res_2220);
            return __res_2219;
        }
    }

    public ulong? Duration
    {
        get
        {
            ulong? __res_2221;
            double? __res_2222 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "duration");
            if (__res_2222 is null)
            {
                __res_2221 = null;
            }
            else
            {
                double __notNullable_2223 = (double)__res_2222;
                __res_2221 = Convert.ToUInt64(__notNullable_2223);
            }
            return __res_2221;
        }
    }

    public uint ByteLength
    {
        get
        {
            uint __res_2224;
            double __res_2225 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "byteLength");
            __res_2224 = Convert.ToUInt32(__res_2225);
            return __res_2224;
        }
    }
}

#nullable disable