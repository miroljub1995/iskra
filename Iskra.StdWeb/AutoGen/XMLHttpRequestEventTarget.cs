// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class XMLHttpRequestEventTarget(JSObject obj): EventTarget(obj)
{
    public Iskra.StdWeb.EventHandlerNonNull? Onloadstart
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_766;
            JSObject? __res_767 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onloadstart");
            if (__res_767 is null)
            {
                __res_766 = null;
            }
            else
            {
                JSObject __notNullable_768 = (JSObject)__res_767;
                throw new Exception("Marshaller from \"__notNullable_768\" to \"__res_766\" not supported.");
            }
            return __res_766;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onprogress
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_769;
            JSObject? __res_770 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onprogress");
            if (__res_770 is null)
            {
                __res_769 = null;
            }
            else
            {
                JSObject __notNullable_771 = (JSObject)__res_770;
                throw new Exception("Marshaller from \"__notNullable_771\" to \"__res_769\" not supported.");
            }
            return __res_769;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onabort
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_772;
            JSObject? __res_773 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onabort");
            if (__res_773 is null)
            {
                __res_772 = null;
            }
            else
            {
                JSObject __notNullable_774 = (JSObject)__res_773;
                throw new Exception("Marshaller from \"__notNullable_774\" to \"__res_772\" not supported.");
            }
            return __res_772;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onerror
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_775;
            JSObject? __res_776 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onerror");
            if (__res_776 is null)
            {
                __res_775 = null;
            }
            else
            {
                JSObject __notNullable_777 = (JSObject)__res_776;
                throw new Exception("Marshaller from \"__notNullable_777\" to \"__res_775\" not supported.");
            }
            return __res_775;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onload
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_778;
            JSObject? __res_779 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onload");
            if (__res_779 is null)
            {
                __res_778 = null;
            }
            else
            {
                JSObject __notNullable_780 = (JSObject)__res_779;
                throw new Exception("Marshaller from \"__notNullable_780\" to \"__res_778\" not supported.");
            }
            return __res_778;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Ontimeout
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_781;
            JSObject? __res_782 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "ontimeout");
            if (__res_782 is null)
            {
                __res_781 = null;
            }
            else
            {
                JSObject __notNullable_783 = (JSObject)__res_782;
                throw new Exception("Marshaller from \"__notNullable_783\" to \"__res_781\" not supported.");
            }
            return __res_781;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onloadend
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_784;
            JSObject? __res_785 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onloadend");
            if (__res_785 is null)
            {
                __res_784 = null;
            }
            else
            {
                JSObject __notNullable_786 = (JSObject)__res_785;
                throw new Exception("Marshaller from \"__notNullable_786\" to \"__res_784\" not supported.");
            }
            return __res_784;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable