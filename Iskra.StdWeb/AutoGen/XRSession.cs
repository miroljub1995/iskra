// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class XRSession(JSObject obj): EventTarget(obj)
{
    public Iskra.StdWeb.XRVisibilityState VisibilityState
    {
        get
        {
            Iskra.StdWeb.XRVisibilityState __res_3596;
            JSObject __res_3597 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "visibilityState");
            throw new Exception("Marshaller from \"__res_3597\" to \"__res_3596\" not supported.");
            return __res_3596;
        }
    }

    public float? FrameRate
    {
        get
        {
            float? __res_3598;
            double? __res_3599 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "frameRate");
            if (__res_3599 is null)
            {
                __res_3598 = null;
            }
            else
            {
                double __notNullable_3600 = (double)__res_3599;
                __res_3598 = Convert.ToSingle(__notNullable_3600);
            }
            return __res_3598;
        }
    }

    public Iskra.JSCore.Float32Array? SupportedFrameRates
    {
        get
        {
            Iskra.JSCore.Float32Array? __res_3601;
            JSObject? __res_3602 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "supportedFrameRates");
            if (__res_3602 is null)
            {
                __res_3601 = null;
            }
            else
            {
                JSObject __notNullable_3603 = (JSObject)__res_3602;
                throw new Exception("Marshaller from \"__notNullable_3603\" to \"__res_3601\" not supported.");
            }
            return __res_3601;
        }
    }

    public Iskra.StdWeb.XRRenderState RenderState
    {
        get
        {
            Iskra.StdWeb.XRRenderState __res_3604;
            JSObject __res_3605 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "renderState");
            throw new Exception("Marshaller from \"__res_3605\" to \"__res_3604\" not supported.");
            return __res_3604;
        }
    }

    public Iskra.StdWeb.XRInputSourceArray InputSources
    {
        get
        {
            Iskra.StdWeb.XRInputSourceArray __res_3606;
            JSObject __res_3607 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "inputSources");
            throw new Exception("Marshaller from \"__res_3607\" to \"__res_3606\" not supported.");
            return __res_3606;
        }
    }

    public Iskra.StdWeb.XRInputSourceArray TrackedSources
    {
        get
        {
            Iskra.StdWeb.XRInputSourceArray __res_3608;
            JSObject __res_3609 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "trackedSources");
            throw new Exception("Marshaller from \"__res_3609\" to \"__res_3608\" not supported.");
            return __res_3608;
        }
    }

    public object EnabledFeatures
    {
        get
        {
            object __res_3610;
            throw new Exception();
            return __res_3610;
        }
    }

    public bool IsSystemKeyboardSupported
    {
        get
        {
            bool __res_3611;
            bool __res_3612 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "isSystemKeyboardSupported");
            __res_3611 = __res_3612;
            return __res_3611;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onend
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3613;
            JSObject? __res_3614 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onend");
            if (__res_3614 is null)
            {
                __res_3613 = null;
            }
            else
            {
                JSObject __notNullable_3615 = (JSObject)__res_3614;
                throw new Exception("Marshaller from \"__notNullable_3615\" to \"__res_3613\" not supported.");
            }
            return __res_3613;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Oninputsourceschange
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3616;
            JSObject? __res_3617 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "oninputsourceschange");
            if (__res_3617 is null)
            {
                __res_3616 = null;
            }
            else
            {
                JSObject __notNullable_3618 = (JSObject)__res_3617;
                throw new Exception("Marshaller from \"__notNullable_3618\" to \"__res_3616\" not supported.");
            }
            return __res_3616;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onselect
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3619;
            JSObject? __res_3620 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onselect");
            if (__res_3620 is null)
            {
                __res_3619 = null;
            }
            else
            {
                JSObject __notNullable_3621 = (JSObject)__res_3620;
                throw new Exception("Marshaller from \"__notNullable_3621\" to \"__res_3619\" not supported.");
            }
            return __res_3619;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onselectstart
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3622;
            JSObject? __res_3623 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onselectstart");
            if (__res_3623 is null)
            {
                __res_3622 = null;
            }
            else
            {
                JSObject __notNullable_3624 = (JSObject)__res_3623;
                throw new Exception("Marshaller from \"__notNullable_3624\" to \"__res_3622\" not supported.");
            }
            return __res_3622;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onselectend
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3625;
            JSObject? __res_3626 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onselectend");
            if (__res_3626 is null)
            {
                __res_3625 = null;
            }
            else
            {
                JSObject __notNullable_3627 = (JSObject)__res_3626;
                throw new Exception("Marshaller from \"__notNullable_3627\" to \"__res_3625\" not supported.");
            }
            return __res_3625;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onsqueeze
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3628;
            JSObject? __res_3629 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onsqueeze");
            if (__res_3629 is null)
            {
                __res_3628 = null;
            }
            else
            {
                JSObject __notNullable_3630 = (JSObject)__res_3629;
                throw new Exception("Marshaller from \"__notNullable_3630\" to \"__res_3628\" not supported.");
            }
            return __res_3628;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onsqueezestart
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3631;
            JSObject? __res_3632 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onsqueezestart");
            if (__res_3632 is null)
            {
                __res_3631 = null;
            }
            else
            {
                JSObject __notNullable_3633 = (JSObject)__res_3632;
                throw new Exception("Marshaller from \"__notNullable_3633\" to \"__res_3631\" not supported.");
            }
            return __res_3631;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onsqueezeend
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3634;
            JSObject? __res_3635 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onsqueezeend");
            if (__res_3635 is null)
            {
                __res_3634 = null;
            }
            else
            {
                JSObject __notNullable_3636 = (JSObject)__res_3635;
                throw new Exception("Marshaller from \"__notNullable_3636\" to \"__res_3634\" not supported.");
            }
            return __res_3634;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onvisibilitychange
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3637;
            JSObject? __res_3638 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onvisibilitychange");
            if (__res_3638 is null)
            {
                __res_3637 = null;
            }
            else
            {
                JSObject __notNullable_3639 = (JSObject)__res_3638;
                throw new Exception("Marshaller from \"__notNullable_3639\" to \"__res_3637\" not supported.");
            }
            return __res_3637;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onframeratechange
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3640;
            JSObject? __res_3641 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onframeratechange");
            if (__res_3641 is null)
            {
                __res_3640 = null;
            }
            else
            {
                JSObject __notNullable_3642 = (JSObject)__res_3641;
                throw new Exception("Marshaller from \"__notNullable_3642\" to \"__res_3640\" not supported.");
            }
            return __res_3640;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable