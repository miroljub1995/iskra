// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public sealed partial class RTCStatsType
{
    private readonly string _value;

    private RTCStatsType(string value)
    {
        _value = value;
    }

    public static readonly RTCStatsType Codec = new("codec");
    public static readonly RTCStatsType Inbound_rtp = new("inbound-rtp");
    public static readonly RTCStatsType Outbound_rtp = new("outbound-rtp");
    public static readonly RTCStatsType Remote_inbound_rtp = new("remote-inbound-rtp");
    public static readonly RTCStatsType Remote_outbound_rtp = new("remote-outbound-rtp");
    public static readonly RTCStatsType Media_source = new("media-source");
    public static readonly RTCStatsType Media_playout = new("media-playout");
    public static readonly RTCStatsType Peer_connection = new("peer-connection");
    public static readonly RTCStatsType Data_channel = new("data-channel");
    public static readonly RTCStatsType Transport = new("transport");
    public static readonly RTCStatsType Candidate_pair = new("candidate-pair");
    public static readonly RTCStatsType Local_candidate = new("local-candidate");
    public static readonly RTCStatsType Remote_candidate = new("remote-candidate");
    public static readonly RTCStatsType Certificate = new("certificate");

    public override string ToString() => _value;

    public static RTCStatsType Create(string value) => value switch
    {
        "codec" => Codec,
        "inbound-rtp" => Inbound_rtp,
        "outbound-rtp" => Outbound_rtp,
        "remote-inbound-rtp" => Remote_inbound_rtp,
        "remote-outbound-rtp" => Remote_outbound_rtp,
        "media-source" => Media_source,
        "media-playout" => Media_playout,
        "peer-connection" => Peer_connection,
        "data-channel" => Data_channel,
        "transport" => Transport,
        "candidate-pair" => Candidate_pair,
        "local-candidate" => Local_candidate,
        "remote-candidate" => Remote_candidate,
        "certificate" => Certificate,
        _ => throw new ArgumentException($"Invalid value \"{value}\" for RTCStatsType", nameof(value)),
    };
}

#nullable disable