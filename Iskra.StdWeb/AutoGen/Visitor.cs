// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public delegate void VisitorManaged(global::Iskra.JSCore.Generics.Union<double, global::System.Numerics.BigInteger, string, bool, global::System.Runtime.InteropServices.JavaScript.JSObject, object, global::Iskra.StdWeb.GenericMarshaller.Union>? value, ulong index);

public partial class Visitor(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public static implicit operator Visitor(VisitorManaged input)
    {
        Action<global::System.Runtime.InteropServices.JavaScript.JSObject> callback = (__args_7997) =>
        {
            using (__args_7997)
            {
                // Argument 1
                global::Iskra.JSCore.Generics.Union<double, global::System.Numerics.BigInteger, string, bool, global::System.Runtime.InteropServices.JavaScript.JSObject, object, global::Iskra.StdWeb.GenericMarshaller.Union>? __arg_7999;
                global::System.Runtime.InteropServices.JavaScript.JSObject? __propObject_8000;
                __propObject_8000 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsUnionV2AsNullable(__args_7997, 0);
                if (__propObject_8000 is null)
                {
                    __arg_7999 = null;
                }
                else
                {
                    __arg_7999 = new global::Iskra.JSCore.Generics.Union<double, global::System.Numerics.BigInteger, string, bool, global::System.Runtime.InteropServices.JavaScript.JSObject, object, global::Iskra.StdWeb.GenericMarshaller.Union>(__propObject_8000);
                }

                // Argument 2
                ulong __arg_8001;
                double __res_8002 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(__args_7997, 1);
                __arg_8001 = Convert.ToUInt64(__res_8002);

                input(__arg_7999, __arg_8001);
            }
        };

        return new global::Iskra.StdWeb.Visitor(global::Iskra.JSCore.Extensions.JSFunctionExtensions.WrapAsVoidFunction(callback));
    }
    
    public static implicit operator VisitorManaged(Visitor input)
    {
        throw new NotImplementedException();
    }
}

#nullable disable