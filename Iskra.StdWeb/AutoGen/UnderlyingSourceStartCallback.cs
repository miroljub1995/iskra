// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public delegate global::Iskra.JSCore.Generics.Union<double, global::System.Numerics.BigInteger, string, bool, global::System.Runtime.InteropServices.JavaScript.JSObject, object, global::Iskra.StdWeb.GenericMarshaller.Union>? UnderlyingSourceStartCallbackManaged(global::Iskra.JSCore.Generics.Union<global::Iskra.StdWeb.ReadableStreamDefaultController, global::Iskra.StdWeb.ReadableByteStreamController, global::Iskra.StdWeb.GenericMarshaller.Union> controller);

public partial class UnderlyingSourceStartCallback(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public static implicit operator UnderlyingSourceStartCallback(UnderlyingSourceStartCallbackManaged input)
    {
        Action<global::System.Runtime.InteropServices.JavaScript.JSObject> callback = (__args_1838) =>
        {
            using (__args_1838)
            {
                // Argument 1
                global::Iskra.JSCore.Generics.Union<global::Iskra.StdWeb.ReadableStreamDefaultController, global::Iskra.StdWeb.ReadableByteStreamController, global::Iskra.StdWeb.GenericMarshaller.Union> __arg_1840;
                global::System.Runtime.InteropServices.JavaScript.JSObject __propObject_1841;
                __propObject_1841 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsUnionV2(__args_1838, 0);
                __arg_1840 = new global::Iskra.JSCore.Generics.Union<global::Iskra.StdWeb.ReadableStreamDefaultController, global::Iskra.StdWeb.ReadableByteStreamController, global::Iskra.StdWeb.GenericMarshaller.Union>(__propObject_1841);

                input(__arg_1840);
            }
        };

        return new global::Iskra.StdWeb.UnderlyingSourceStartCallback(global::Iskra.JSCore.Extensions.JSFunctionExtensions.WrapAsVoidFunction(callback));
    }
    
    public static implicit operator UnderlyingSourceStartCallbackManaged(UnderlyingSourceStartCallback input)
    {
        throw new NotImplementedException();
    }
}

#nullable disable