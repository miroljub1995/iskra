// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class ServiceWorkerContainer(JSObject obj): EventTarget(obj)
{
    public Iskra.StdWeb.ServiceWorker? Controller
    {
        get
        {
            Iskra.StdWeb.ServiceWorker? __res_3877;
            JSObject? __res_3878 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "controller");
            if (__res_3878 is null)
            {
                __res_3877 = null;
            }
            else
            {
                JSObject __notNullable_3879 = (JSObject)__res_3878;
                throw new Exception("Marshaller from \"__notNullable_3879\" to \"__res_3877\" not supported.");
            }
            return __res_3877;
        }
    }

    public object Ready
    {
        get
        {
            object __res_3880;
            throw new Exception();
            return __res_3880;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Oncontrollerchange
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3881;
            JSObject? __res_3882 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "oncontrollerchange");
            if (__res_3882 is null)
            {
                __res_3881 = null;
            }
            else
            {
                JSObject __notNullable_3883 = (JSObject)__res_3882;
                throw new Exception("Marshaller from \"__notNullable_3883\" to \"__res_3881\" not supported.");
            }
            return __res_3881;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onmessage
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3884;
            JSObject? __res_3885 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onmessage");
            if (__res_3885 is null)
            {
                __res_3884 = null;
            }
            else
            {
                JSObject __notNullable_3886 = (JSObject)__res_3885;
                throw new Exception("Marshaller from \"__notNullable_3886\" to \"__res_3884\" not supported.");
            }
            return __res_3884;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onmessageerror
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3887;
            JSObject? __res_3888 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onmessageerror");
            if (__res_3888 is null)
            {
                __res_3887 = null;
            }
            else
            {
                JSObject __notNullable_3889 = (JSObject)__res_3888;
                throw new Exception("Marshaller from \"__notNullable_3889\" to \"__res_3887\" not supported.");
            }
            return __res_3887;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable