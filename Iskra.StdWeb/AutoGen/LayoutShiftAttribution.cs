// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class LayoutShiftAttribution(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public global::Iskra.StdWeb.Node? Node
    {
        get
        {
            global::Iskra.StdWeb.Node? __res_3069;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_3070 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "node");
            if (__res_3070 is null)
            {
                __res_3069 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_3071 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_3070;
                __res_3069 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.Node>(__notNullable_3071);
            }
            return __res_3069;
        }
    }

    public global::Iskra.StdWeb.DOMRectReadOnly PreviousRect
    {
        get
        {
            global::Iskra.StdWeb.DOMRectReadOnly __res_3072;
            global::System.Runtime.InteropServices.JavaScript.JSObject __res_3073 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "previousRect");
            __res_3072 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.DOMRectReadOnly>(__res_3073);
            return __res_3072;
        }
    }

    public global::Iskra.StdWeb.DOMRectReadOnly CurrentRect
    {
        get
        {
            global::Iskra.StdWeb.DOMRectReadOnly __res_3074;
            global::System.Runtime.InteropServices.JavaScript.JSObject __res_3075 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "currentRect");
            __res_3074 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.DOMRectReadOnly>(__res_3075);
            return __res_3074;
        }
    }
}

#nullable disable