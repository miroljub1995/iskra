// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class RTCPeerConnection(JSObject obj): EventTarget(obj)
{
    public RTCSessionDescription? LocalDescription
    {
        get
        {
            throw new Exception();
        }
    }

    public RTCSessionDescription? CurrentLocalDescription
    {
        get
        {
            throw new Exception();
        }
    }

    public RTCSessionDescription? PendingLocalDescription
    {
        get
        {
            throw new Exception();
        }
    }

    public RTCSessionDescription? RemoteDescription
    {
        get
        {
            throw new Exception();
        }
    }

    public RTCSessionDescription? CurrentRemoteDescription
    {
        get
        {
            throw new Exception();
        }
    }

    public RTCSessionDescription? PendingRemoteDescription
    {
        get
        {
            throw new Exception();
        }
    }

    public RTCSignalingState SignalingState
    {
        get
        {
            throw new Exception();
        }
    }

    public RTCIceGatheringState IceGatheringState
    {
        get
        {
            throw new Exception();
        }
    }

    public RTCIceConnectionState IceConnectionState
    {
        get
        {
            throw new Exception();
        }
    }

    public RTCPeerConnectionState ConnectionState
    {
        get
        {
            throw new Exception();
        }
    }

    public bool? CanTrickleIceCandidates
    {
        get
        {
            throw new Exception();
        }
    }

    public EventHandler Onnegotiationneeded
    {
        get
        {
            throw new Exception();
        }
        set
        {
            throw new Exception();
        }
    }

    public EventHandler Onicecandidate
    {
        get
        {
            throw new Exception();
        }
        set
        {
            throw new Exception();
        }
    }

    public EventHandler Onicecandidateerror
    {
        get
        {
            throw new Exception();
        }
        set
        {
            throw new Exception();
        }
    }

    public EventHandler Onsignalingstatechange
    {
        get
        {
            throw new Exception();
        }
        set
        {
            throw new Exception();
        }
    }

    public EventHandler Oniceconnectionstatechange
    {
        get
        {
            throw new Exception();
        }
        set
        {
            throw new Exception();
        }
    }

    public EventHandler Onicegatheringstatechange
    {
        get
        {
            throw new Exception();
        }
        set
        {
            throw new Exception();
        }
    }

    public EventHandler Onconnectionstatechange
    {
        get
        {
            throw new Exception();
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable