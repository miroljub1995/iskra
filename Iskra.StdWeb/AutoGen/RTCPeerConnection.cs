// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class RTCPeerConnection(JSObject obj): EventTarget(obj)
{
    public Iskra.StdWeb.RTCSessionDescription? LocalDescription
    {
        get
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.RTCSessionDescription? CurrentLocalDescription
    {
        get
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.RTCSessionDescription? PendingLocalDescription
    {
        get
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.RTCSessionDescription? RemoteDescription
    {
        get
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.RTCSessionDescription? CurrentRemoteDescription
    {
        get
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.RTCSessionDescription? PendingRemoteDescription
    {
        get
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.RTCSignalingState SignalingState
    {
        get
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.RTCIceGatheringState IceGatheringState
    {
        get
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.RTCIceConnectionState IceConnectionState
    {
        get
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.RTCPeerConnectionState ConnectionState
    {
        get
        {
            throw new Exception();
        }
    }

    public bool? CanTrickleIceCandidates
    {
        get
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onnegotiationneeded
    {
        get
        {
            throw new Exception();
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onicecandidate
    {
        get
        {
            throw new Exception();
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onicecandidateerror
    {
        get
        {
            throw new Exception();
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onsignalingstatechange
    {
        get
        {
            throw new Exception();
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Oniceconnectionstatechange
    {
        get
        {
            throw new Exception();
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onicegatheringstatechange
    {
        get
        {
            throw new Exception();
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onconnectionstatechange
    {
        get
        {
            throw new Exception();
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable