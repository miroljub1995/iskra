// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class MediaRecorder(JSObject obj): EventTarget(obj)
{
    public Iskra.StdWeb.MediaStream Stream
    {
        get
        {
            Iskra.StdWeb.MediaStream __res_1586;
            throw new Exception();
            return __res_1586;
        }
    }

    public string MimeType
    {
        get
        {
            string __res_1587;
            throw new Exception();
            return __res_1587;
        }
    }

    public Iskra.StdWeb.RecordingState State
    {
        get
        {
            Iskra.StdWeb.RecordingState __res_1588;
            throw new Exception();
            return __res_1588;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onstart
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1589;
            throw new Exception();
            return __res_1589;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onstop
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1590;
            throw new Exception();
            return __res_1590;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Ondataavailable
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1591;
            throw new Exception();
            return __res_1591;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onpause
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1592;
            throw new Exception();
            return __res_1592;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onresume
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1593;
            throw new Exception();
            return __res_1593;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onerror
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1594;
            throw new Exception();
            return __res_1594;
        }
        set
        {
            throw new Exception();
        }
    }

    public uint VideoBitsPerSecond
    {
        get
        {
            uint __res_1595;
            throw new Exception();
            return __res_1595;
        }
    }

    public uint AudioBitsPerSecond
    {
        get
        {
            uint __res_1596;
            throw new Exception();
            return __res_1596;
        }
    }

    public Iskra.StdWeb.BitrateMode AudioBitrateMode
    {
        get
        {
            Iskra.StdWeb.BitrateMode __res_1597;
            throw new Exception();
            return __res_1597;
        }
    }
}

#nullable disable