// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class MediaRecorder(JSObject obj): EventTarget(obj)
{
    public Iskra.StdWeb.MediaStream Stream
    {
        get
        {
            Iskra.StdWeb.MediaStream __res_3365;
            JSObject __res_3366 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "stream");
            throw new Exception("Marshaller from \"__res_3366\" to \"__res_3365\" not supported.");
            return __res_3365;
        }
    }

    public string MimeType
    {
        get
        {
            string __res_3367;
            string __res_3368 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "mimeType");
            __res_3367 = __res_3368;
            return __res_3367;
        }
    }

    public Iskra.StdWeb.RecordingState State
    {
        get
        {
            Iskra.StdWeb.RecordingState __res_3369;
            JSObject __res_3370 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "state");
            throw new Exception("Marshaller from \"__res_3370\" to \"__res_3369\" not supported.");
            return __res_3369;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onstart
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3371;
            JSObject? __res_3372 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onstart");
            if (__res_3372 is null)
            {
                __res_3371 = null;
            }
            else
            {
                JSObject __notNullable_3373 = (JSObject)__res_3372;
                throw new Exception("Marshaller from \"__notNullable_3373\" to \"__res_3371\" not supported.");
            }
            return __res_3371;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onstop
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3374;
            JSObject? __res_3375 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onstop");
            if (__res_3375 is null)
            {
                __res_3374 = null;
            }
            else
            {
                JSObject __notNullable_3376 = (JSObject)__res_3375;
                throw new Exception("Marshaller from \"__notNullable_3376\" to \"__res_3374\" not supported.");
            }
            return __res_3374;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Ondataavailable
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3377;
            JSObject? __res_3378 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "ondataavailable");
            if (__res_3378 is null)
            {
                __res_3377 = null;
            }
            else
            {
                JSObject __notNullable_3379 = (JSObject)__res_3378;
                throw new Exception("Marshaller from \"__notNullable_3379\" to \"__res_3377\" not supported.");
            }
            return __res_3377;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onpause
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3380;
            JSObject? __res_3381 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onpause");
            if (__res_3381 is null)
            {
                __res_3380 = null;
            }
            else
            {
                JSObject __notNullable_3382 = (JSObject)__res_3381;
                throw new Exception("Marshaller from \"__notNullable_3382\" to \"__res_3380\" not supported.");
            }
            return __res_3380;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onresume
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3383;
            JSObject? __res_3384 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onresume");
            if (__res_3384 is null)
            {
                __res_3383 = null;
            }
            else
            {
                JSObject __notNullable_3385 = (JSObject)__res_3384;
                throw new Exception("Marshaller from \"__notNullable_3385\" to \"__res_3383\" not supported.");
            }
            return __res_3383;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onerror
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3386;
            JSObject? __res_3387 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onerror");
            if (__res_3387 is null)
            {
                __res_3386 = null;
            }
            else
            {
                JSObject __notNullable_3388 = (JSObject)__res_3387;
                throw new Exception("Marshaller from \"__notNullable_3388\" to \"__res_3386\" not supported.");
            }
            return __res_3386;
        }
        set
        {
            throw new Exception();
        }
    }

    public uint VideoBitsPerSecond
    {
        get
        {
            uint __res_3389;
            double __res_3390 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "videoBitsPerSecond");
            __res_3389 = Convert.ToUInt32(__res_3390);
            return __res_3389;
        }
    }

    public uint AudioBitsPerSecond
    {
        get
        {
            uint __res_3391;
            double __res_3392 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "audioBitsPerSecond");
            __res_3391 = Convert.ToUInt32(__res_3392);
            return __res_3391;
        }
    }

    public Iskra.StdWeb.BitrateMode AudioBitrateMode
    {
        get
        {
            Iskra.StdWeb.BitrateMode __res_3393;
            JSObject __res_3394 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "audioBitrateMode");
            throw new Exception("Marshaller from \"__res_3394\" to \"__res_3393\" not supported.");
            return __res_3393;
        }
    }
}

#nullable disable