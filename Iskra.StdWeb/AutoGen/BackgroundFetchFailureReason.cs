// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public sealed partial class BackgroundFetchFailureReason
{
    private readonly string _value;

    private BackgroundFetchFailureReason(string value)
    {
        _value = value;
    }

    public static readonly BackgroundFetchFailureReason Empty = new("");
    public static readonly BackgroundFetchFailureReason Aborted = new("aborted");
    public static readonly BackgroundFetchFailureReason Bad_status = new("bad-status");
    public static readonly BackgroundFetchFailureReason Fetch_error = new("fetch-error");
    public static readonly BackgroundFetchFailureReason Quota_exceeded = new("quota-exceeded");
    public static readonly BackgroundFetchFailureReason Download_total_exceeded = new("download-total-exceeded");

    public override string ToString() => _value;

    public static BackgroundFetchFailureReason Create(string value) => value switch
    {
        "" => Empty,
        "aborted" => Aborted,
        "bad-status" => Bad_status,
        "fetch-error" => Fetch_error,
        "quota-exceeded" => Quota_exceeded,
        "download-total-exceeded" => Download_total_exceeded,
        _ => throw new ArgumentException($"Invalid value \"{value}\" for BackgroundFetchFailureReason", nameof(value)),
    };
}

#nullable disable