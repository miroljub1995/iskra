// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class SpeechSynthesisUtterance(JSObject obj): EventTarget(obj)
{
    public string Text
    {
        get
        {
            string __res_1656;
            throw new Exception();
            return __res_1656;
        }
        set
        {
            throw new Exception();
        }
    }

    public string Lang
    {
        get
        {
            string __res_1657;
            throw new Exception();
            return __res_1657;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.SpeechSynthesisVoice? Voice
    {
        get
        {
            Iskra.StdWeb.SpeechSynthesisVoice? __res_1658;
            throw new Exception();
            return __res_1658;
        }
        set
        {
            throw new Exception();
        }
    }

    public float Volume
    {
        get
        {
            float __res_1659;
            throw new Exception();
            return __res_1659;
        }
        set
        {
            throw new Exception();
        }
    }

    public float Rate
    {
        get
        {
            float __res_1660;
            throw new Exception();
            return __res_1660;
        }
        set
        {
            throw new Exception();
        }
    }

    public float Pitch
    {
        get
        {
            float __res_1661;
            throw new Exception();
            return __res_1661;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onstart
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1662;
            throw new Exception();
            return __res_1662;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onend
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1663;
            throw new Exception();
            return __res_1663;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onerror
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1664;
            throw new Exception();
            return __res_1664;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onpause
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1665;
            throw new Exception();
            return __res_1665;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onresume
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1666;
            throw new Exception();
            return __res_1666;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onmark
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1667;
            throw new Exception();
            return __res_1667;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onboundary
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1668;
            throw new Exception();
            return __res_1668;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable