// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class MediaStreamTrack(JSObject obj): EventTarget(obj)
{
    public string Kind
    {
        get
        {
            string __res_3327;
            string __res_3328 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "kind");
            __res_3327 = __res_3328;
            return __res_3327;
        }
    }

    public string Id
    {
        get
        {
            string __res_3329;
            string __res_3330 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "id");
            __res_3329 = __res_3330;
            return __res_3329;
        }
    }

    public string Label
    {
        get
        {
            string __res_3331;
            string __res_3332 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "label");
            __res_3331 = __res_3332;
            return __res_3331;
        }
    }

    public bool Enabled
    {
        get
        {
            bool __res_3333;
            bool __res_3334 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "enabled");
            __res_3333 = __res_3334;
            return __res_3333;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool Muted
    {
        get
        {
            bool __res_3335;
            bool __res_3336 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "muted");
            __res_3335 = __res_3336;
            return __res_3335;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onmute
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3337;
            JSObject? __res_3338 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onmute");
            if (__res_3338 is null)
            {
                __res_3337 = null;
            }
            else
            {
                JSObject __notNullable_3339 = (JSObject)__res_3338;
                throw new Exception("Marshaller from \"__notNullable_3339\" to \"__res_3337\" not supported.");
            }
            return __res_3337;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onunmute
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3340;
            JSObject? __res_3341 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onunmute");
            if (__res_3341 is null)
            {
                __res_3340 = null;
            }
            else
            {
                JSObject __notNullable_3342 = (JSObject)__res_3341;
                throw new Exception("Marshaller from \"__notNullable_3342\" to \"__res_3340\" not supported.");
            }
            return __res_3340;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.MediaStreamTrackState ReadyState
    {
        get
        {
            Iskra.StdWeb.MediaStreamTrackState __res_3343;
            JSObject __res_3344 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "readyState");
            throw new Exception("Marshaller from \"__res_3344\" to \"__res_3343\" not supported.");
            return __res_3343;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onended
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_3345;
            JSObject? __res_3346 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onended");
            if (__res_3346 is null)
            {
                __res_3345 = null;
            }
            else
            {
                JSObject __notNullable_3347 = (JSObject)__res_3346;
                throw new Exception("Marshaller from \"__notNullable_3347\" to \"__res_3345\" not supported.");
            }
            return __res_3345;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable