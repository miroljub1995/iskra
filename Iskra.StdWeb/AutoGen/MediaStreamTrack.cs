// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class MediaStreamTrack(JSObject obj): EventTarget(obj)
{
    public string Kind
    {
        get
        {
            string __res_1568;
            throw new Exception();
            return __res_1568;
        }
    }

    public string Id
    {
        get
        {
            string __res_1569;
            throw new Exception();
            return __res_1569;
        }
    }

    public string Label
    {
        get
        {
            string __res_1570;
            throw new Exception();
            return __res_1570;
        }
    }

    public bool Enabled
    {
        get
        {
            bool __res_1571;
            __res_1571 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "enabled");
            return __res_1571;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool Muted
    {
        get
        {
            bool __res_1572;
            __res_1572 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "muted");
            return __res_1572;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onmute
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1573;
            throw new Exception();
            return __res_1573;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onunmute
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1574;
            throw new Exception();
            return __res_1574;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.MediaStreamTrackState ReadyState
    {
        get
        {
            Iskra.StdWeb.MediaStreamTrackState __res_1575;
            throw new Exception();
            return __res_1575;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onended
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1576;
            throw new Exception();
            return __res_1576;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable