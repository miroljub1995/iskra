// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class GPUTexture(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public uint Width
    {
        get
        {
            uint __res_765;
            double __res_766 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "width");
            __res_765 = Convert.ToUInt32(__res_766);
            return __res_765;
        }
    }

    public uint Height
    {
        get
        {
            uint __res_767;
            double __res_768 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "height");
            __res_767 = Convert.ToUInt32(__res_768);
            return __res_767;
        }
    }

    public uint DepthOrArrayLayers
    {
        get
        {
            uint __res_769;
            double __res_770 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "depthOrArrayLayers");
            __res_769 = Convert.ToUInt32(__res_770);
            return __res_769;
        }
    }

    public uint MipLevelCount
    {
        get
        {
            uint __res_771;
            double __res_772 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "mipLevelCount");
            __res_771 = Convert.ToUInt32(__res_772);
            return __res_771;
        }
    }

    public uint SampleCount
    {
        get
        {
            uint __res_773;
            double __res_774 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "sampleCount");
            __res_773 = Convert.ToUInt32(__res_774);
            return __res_773;
        }
    }

    public global::Iskra.StdWeb.GPUTextureDimension Dimension
    {
        get
        {
            global::Iskra.StdWeb.GPUTextureDimension __res_775;
            global::System.Runtime.InteropServices.JavaScript.JSObject __res_776 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "dimension");
            throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = GPUTextureDimension } not supported.");
            return __res_775;
        }
    }

    public global::Iskra.StdWeb.GPUTextureFormat Format
    {
        get
        {
            global::Iskra.StdWeb.GPUTextureFormat __res_777;
            global::System.Runtime.InteropServices.JavaScript.JSObject __res_778 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "format");
            throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = GPUTextureFormat } not supported.");
            return __res_777;
        }
    }

    public uint Usage
    {
        get
        {
            uint __res_779;
            double __res_780 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "usage");
            __res_779 = Convert.ToUInt32(__res_780);
            return __res_779;
        }
    }
}

#nullable disable