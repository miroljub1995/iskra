// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class Selection(JSObject obj): JSObjectProxy(obj)
{
    public Iskra.StdWeb.Node? AnchorNode
    {
        get
        {
            Iskra.StdWeb.Node? __res_1087;
            JSObject? __res_1088 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "anchorNode");
            if (__res_1088 is null)
            {
                __res_1087 = null;
            }
            else
            {
                JSObject __notNullable_1089 = (JSObject)__res_1088;
                throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = Node } not supported.");
            }
            return __res_1087;
        }
    }

    public uint AnchorOffset
    {
        get
        {
            uint __res_1090;
            double __res_1091 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "anchorOffset");
            __res_1090 = Convert.ToUInt32(__res_1091);
            return __res_1090;
        }
    }

    public Iskra.StdWeb.Node? FocusNode
    {
        get
        {
            Iskra.StdWeb.Node? __res_1092;
            JSObject? __res_1093 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "focusNode");
            if (__res_1093 is null)
            {
                __res_1092 = null;
            }
            else
            {
                JSObject __notNullable_1094 = (JSObject)__res_1093;
                throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = Node } not supported.");
            }
            return __res_1092;
        }
    }

    public uint FocusOffset
    {
        get
        {
            uint __res_1095;
            double __res_1096 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "focusOffset");
            __res_1095 = Convert.ToUInt32(__res_1096);
            return __res_1095;
        }
    }

    public bool IsCollapsed
    {
        get
        {
            bool __res_1097;
            bool __res_1098 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "isCollapsed");
            __res_1097 = __res_1098;
            return __res_1097;
        }
    }

    public uint RangeCount
    {
        get
        {
            uint __res_1099;
            double __res_1100 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "rangeCount");
            __res_1099 = Convert.ToUInt32(__res_1100);
            return __res_1099;
        }
    }

    public string Type
    {
        get
        {
            string __res_1101;
            string __res_1102 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "type");
            __res_1101 = __res_1102;
            return __res_1101;
        }
    }

    public string Direction
    {
        get
        {
            string __res_1103;
            string __res_1104 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "direction");
            __res_1103 = __res_1104;
            return __res_1103;
        }
    }
}

#nullable disable