// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class Selection(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public global::Iskra.StdWeb.Node? AnchorNode
    {
        get
        {
            global::Iskra.StdWeb.Node? __res_1995;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_1996 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "anchorNode");
            if (__res_1996 is null)
            {
                __res_1995 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_1997 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_1996;
                __res_1995 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.Node>(__notNullable_1997);
            }
            return __res_1995;
        }
    }

    public uint AnchorOffset
    {
        get
        {
            uint __res_1998;
            double __res_1999 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "anchorOffset");
            __res_1998 = Convert.ToUInt32(__res_1999);
            return __res_1998;
        }
    }

    public global::Iskra.StdWeb.Node? FocusNode
    {
        get
        {
            global::Iskra.StdWeb.Node? __res_2000;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_2001 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "focusNode");
            if (__res_2001 is null)
            {
                __res_2000 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_2002 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_2001;
                __res_2000 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.Node>(__notNullable_2002);
            }
            return __res_2000;
        }
    }

    public uint FocusOffset
    {
        get
        {
            uint __res_2003;
            double __res_2004 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "focusOffset");
            __res_2003 = Convert.ToUInt32(__res_2004);
            return __res_2003;
        }
    }

    public bool IsCollapsed
    {
        get
        {
            bool __res_2005;
            bool __res_2006 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "isCollapsed");
            __res_2005 = __res_2006;
            return __res_2005;
        }
    }

    public uint RangeCount
    {
        get
        {
            uint __res_2007;
            double __res_2008 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "rangeCount");
            __res_2007 = Convert.ToUInt32(__res_2008);
            return __res_2007;
        }
    }

    public string Type
    {
        get
        {
            string __res_2009;
            string __res_2010 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "type");
            __res_2009 = __res_2010;
            return __res_2009;
        }
    }

    public string Direction
    {
        get
        {
            string __res_2011;
            string __res_2012 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "direction");
            __res_2011 = __res_2012;
            return __res_2011;
        }
    }
}

#nullable disable