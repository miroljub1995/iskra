// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class Selection(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public global::Iskra.StdWeb.Node? AnchorNode
    {
        get
        {
            global::Iskra.StdWeb.Node? __res_2032;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_2033 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "anchorNode");
            if (__res_2033 is null)
            {
                __res_2032 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_2034 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_2033;
                __res_2032 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.Node>(__notNullable_2034);
            }
            return __res_2032;
        }
    }

    public uint AnchorOffset
    {
        get
        {
            uint __res_2035;
            double __res_2036 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "anchorOffset");
            __res_2035 = Convert.ToUInt32(__res_2036);
            return __res_2035;
        }
    }

    public global::Iskra.StdWeb.Node? FocusNode
    {
        get
        {
            global::Iskra.StdWeb.Node? __res_2037;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_2038 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "focusNode");
            if (__res_2038 is null)
            {
                __res_2037 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_2039 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_2038;
                __res_2037 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.Node>(__notNullable_2039);
            }
            return __res_2037;
        }
    }

    public uint FocusOffset
    {
        get
        {
            uint __res_2040;
            double __res_2041 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "focusOffset");
            __res_2040 = Convert.ToUInt32(__res_2041);
            return __res_2040;
        }
    }

    public bool IsCollapsed
    {
        get
        {
            bool __res_2042;
            bool __res_2043 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "isCollapsed");
            __res_2042 = __res_2043;
            return __res_2042;
        }
    }

    public uint RangeCount
    {
        get
        {
            uint __res_2044;
            double __res_2045 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "rangeCount");
            __res_2044 = Convert.ToUInt32(__res_2045);
            return __res_2044;
        }
    }

    public string Type
    {
        get
        {
            string __res_2046;
            string __res_2047 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "type");
            __res_2046 = __res_2047;
            return __res_2046;
        }
    }

    public string Direction
    {
        get
        {
            string __res_2048;
            string __res_2049 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "direction");
            __res_2048 = __res_2049;
            return __res_2048;
        }
    }
}

#nullable disable