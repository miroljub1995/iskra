// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class Selection(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public global::Iskra.StdWeb.Node? AnchorNode
    {
        get
        {
            global::Iskra.StdWeb.Node? __res_1122;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_1123 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "anchorNode");
            if (__res_1123 is null)
            {
                __res_1122 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_1124 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_1123;
                __res_1122 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.Node>(__notNullable_1124);
            }
            return __res_1122;
        }
    }

    public uint AnchorOffset
    {
        get
        {
            uint __res_1125;
            double __res_1126 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "anchorOffset");
            __res_1125 = Convert.ToUInt32(__res_1126);
            return __res_1125;
        }
    }

    public global::Iskra.StdWeb.Node? FocusNode
    {
        get
        {
            global::Iskra.StdWeb.Node? __res_1127;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_1128 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "focusNode");
            if (__res_1128 is null)
            {
                __res_1127 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_1129 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_1128;
                __res_1127 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.Node>(__notNullable_1129);
            }
            return __res_1127;
        }
    }

    public uint FocusOffset
    {
        get
        {
            uint __res_1130;
            double __res_1131 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "focusOffset");
            __res_1130 = Convert.ToUInt32(__res_1131);
            return __res_1130;
        }
    }

    public bool IsCollapsed
    {
        get
        {
            bool __res_1132;
            bool __res_1133 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "isCollapsed");
            __res_1132 = __res_1133;
            return __res_1132;
        }
    }

    public uint RangeCount
    {
        get
        {
            uint __res_1134;
            double __res_1135 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "rangeCount");
            __res_1134 = Convert.ToUInt32(__res_1135);
            return __res_1134;
        }
    }

    public string Type
    {
        get
        {
            string __res_1136;
            string __res_1137 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "type");
            __res_1136 = __res_1137;
            return __res_1136;
        }
    }

    public string Direction
    {
        get
        {
            string __res_1138;
            string __res_1139 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "direction");
            __res_1138 = __res_1139;
            return __res_1138;
        }
    }
}

#nullable disable