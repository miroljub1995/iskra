// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class USBDevice(JSObject obj): JSObjectProxy(obj)
{
    public byte UsbVersionMajor
    {
        get
        {
            byte __res_2010;
            throw new Exception();
            return __res_2010;
        }
    }

    public byte UsbVersionMinor
    {
        get
        {
            byte __res_2011;
            throw new Exception();
            return __res_2011;
        }
    }

    public byte UsbVersionSubminor
    {
        get
        {
            byte __res_2012;
            throw new Exception();
            return __res_2012;
        }
    }

    public byte DeviceClass
    {
        get
        {
            byte __res_2013;
            throw new Exception();
            return __res_2013;
        }
    }

    public byte DeviceSubclass
    {
        get
        {
            byte __res_2014;
            throw new Exception();
            return __res_2014;
        }
    }

    public byte DeviceProtocol
    {
        get
        {
            byte __res_2015;
            throw new Exception();
            return __res_2015;
        }
    }

    public ushort VendorId
    {
        get
        {
            ushort __res_2016;
            throw new Exception();
            return __res_2016;
        }
    }

    public ushort ProductId
    {
        get
        {
            ushort __res_2017;
            throw new Exception();
            return __res_2017;
        }
    }

    public byte DeviceVersionMajor
    {
        get
        {
            byte __res_2018;
            throw new Exception();
            return __res_2018;
        }
    }

    public byte DeviceVersionMinor
    {
        get
        {
            byte __res_2019;
            throw new Exception();
            return __res_2019;
        }
    }

    public byte DeviceVersionSubminor
    {
        get
        {
            byte __res_2020;
            throw new Exception();
            return __res_2020;
        }
    }

    public string? ManufacturerName
    {
        get
        {
            string? __res_2021;
            throw new Exception();
            return __res_2021;
        }
    }

    public string? ProductName
    {
        get
        {
            string? __res_2022;
            throw new Exception();
            return __res_2022;
        }
    }

    public string? SerialNumber
    {
        get
        {
            string? __res_2023;
            throw new Exception();
            return __res_2023;
        }
    }

    public Iskra.StdWeb.USBConfiguration? Configuration
    {
        get
        {
            Iskra.StdWeb.USBConfiguration? __res_2024;
            throw new Exception();
            return __res_2024;
        }
    }

    public object Configurations
    {
        get
        {
            object __res_2025;
            throw new Exception();
            return __res_2025;
        }
    }

    public bool Opened
    {
        get
        {
            bool __res_2026;
            __res_2026 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "opened");
            return __res_2026;
        }
    }
}

#nullable disable