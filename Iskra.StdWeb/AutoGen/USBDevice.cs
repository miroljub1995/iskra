// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class USBDevice(JSObject obj): JSObjectProxy(obj)
{
    public byte UsbVersionMajor
    {
        get
        {
            byte __res_4290;
            double __res_4291 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "usbVersionMajor");
            __res_4290 = Convert.ToByte(__res_4291);
            return __res_4290;
        }
    }

    public byte UsbVersionMinor
    {
        get
        {
            byte __res_4292;
            double __res_4293 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "usbVersionMinor");
            __res_4292 = Convert.ToByte(__res_4293);
            return __res_4292;
        }
    }

    public byte UsbVersionSubminor
    {
        get
        {
            byte __res_4294;
            double __res_4295 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "usbVersionSubminor");
            __res_4294 = Convert.ToByte(__res_4295);
            return __res_4294;
        }
    }

    public byte DeviceClass
    {
        get
        {
            byte __res_4296;
            double __res_4297 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "deviceClass");
            __res_4296 = Convert.ToByte(__res_4297);
            return __res_4296;
        }
    }

    public byte DeviceSubclass
    {
        get
        {
            byte __res_4298;
            double __res_4299 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "deviceSubclass");
            __res_4298 = Convert.ToByte(__res_4299);
            return __res_4298;
        }
    }

    public byte DeviceProtocol
    {
        get
        {
            byte __res_4300;
            double __res_4301 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "deviceProtocol");
            __res_4300 = Convert.ToByte(__res_4301);
            return __res_4300;
        }
    }

    public ushort VendorId
    {
        get
        {
            ushort __res_4302;
            double __res_4303 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "vendorId");
            throw new Exception("Marshaller from \"__res_4303\" to \"__res_4302\" not supported.");
            return __res_4302;
        }
    }

    public ushort ProductId
    {
        get
        {
            ushort __res_4304;
            double __res_4305 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "productId");
            throw new Exception("Marshaller from \"__res_4305\" to \"__res_4304\" not supported.");
            return __res_4304;
        }
    }

    public byte DeviceVersionMajor
    {
        get
        {
            byte __res_4306;
            double __res_4307 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "deviceVersionMajor");
            __res_4306 = Convert.ToByte(__res_4307);
            return __res_4306;
        }
    }

    public byte DeviceVersionMinor
    {
        get
        {
            byte __res_4308;
            double __res_4309 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "deviceVersionMinor");
            __res_4308 = Convert.ToByte(__res_4309);
            return __res_4308;
        }
    }

    public byte DeviceVersionSubminor
    {
        get
        {
            byte __res_4310;
            double __res_4311 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "deviceVersionSubminor");
            __res_4310 = Convert.ToByte(__res_4311);
            return __res_4310;
        }
    }

    public string? ManufacturerName
    {
        get
        {
            string? __res_4312;
            string? __res_4313 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "manufacturerName");
            if (__res_4313 is null)
            {
                __res_4312 = null;
            }
            else
            {
                string __notNullable_4314 = (string)__res_4313;
                __res_4312 = __notNullable_4314;
            }
            return __res_4312;
        }
    }

    public string? ProductName
    {
        get
        {
            string? __res_4315;
            string? __res_4316 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "productName");
            if (__res_4316 is null)
            {
                __res_4315 = null;
            }
            else
            {
                string __notNullable_4317 = (string)__res_4316;
                __res_4315 = __notNullable_4317;
            }
            return __res_4315;
        }
    }

    public string? SerialNumber
    {
        get
        {
            string? __res_4318;
            string? __res_4319 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "serialNumber");
            if (__res_4319 is null)
            {
                __res_4318 = null;
            }
            else
            {
                string __notNullable_4320 = (string)__res_4319;
                __res_4318 = __notNullable_4320;
            }
            return __res_4318;
        }
    }

    public Iskra.StdWeb.USBConfiguration? Configuration
    {
        get
        {
            Iskra.StdWeb.USBConfiguration? __res_4321;
            JSObject? __res_4322 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "configuration");
            if (__res_4322 is null)
            {
                __res_4321 = null;
            }
            else
            {
                JSObject __notNullable_4323 = (JSObject)__res_4322;
                throw new Exception("Marshaller from \"__notNullable_4323\" to \"__res_4321\" not supported.");
            }
            return __res_4321;
        }
    }

    public object Configurations
    {
        get
        {
            object __res_4324;
            throw new Exception();
            return __res_4324;
        }
    }

    public bool Opened
    {
        get
        {
            bool __res_4325;
            bool __res_4326 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "opened");
            __res_4325 = __res_4326;
            return __res_4325;
        }
    }
}

#nullable disable