// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class RTCIceCandidate(JSObject obj): JSObjectProxy(obj)
{
    public string Candidate
    {
        get
        {
            string __res_781;
            throw new Exception();
            return __res_781;
        }
    }

    public string? SdpMid
    {
        get
        {
            string? __res_782;
            throw new Exception();
            return __res_782;
        }
    }

    public ushort? SdpMLineIndex
    {
        get
        {
            ushort? __res_783;
            throw new Exception();
            return __res_783;
        }
    }

    public string? Foundation
    {
        get
        {
            string? __res_784;
            throw new Exception();
            return __res_784;
        }
    }

    public Iskra.StdWeb.RTCIceComponent? Component
    {
        get
        {
            Iskra.StdWeb.RTCIceComponent? __res_785;
            throw new Exception();
            return __res_785;
        }
    }

    public uint? Priority
    {
        get
        {
            uint? __res_786;
            throw new Exception();
            return __res_786;
        }
    }

    public string? Address
    {
        get
        {
            string? __res_787;
            throw new Exception();
            return __res_787;
        }
    }

    public Iskra.StdWeb.RTCIceProtocol? Protocol
    {
        get
        {
            Iskra.StdWeb.RTCIceProtocol? __res_788;
            throw new Exception();
            return __res_788;
        }
    }

    public ushort? Port
    {
        get
        {
            ushort? __res_789;
            throw new Exception();
            return __res_789;
        }
    }

    public Iskra.StdWeb.RTCIceCandidateType? Type
    {
        get
        {
            Iskra.StdWeb.RTCIceCandidateType? __res_790;
            throw new Exception();
            return __res_790;
        }
    }

    public Iskra.StdWeb.RTCIceTcpCandidateType? TcpType
    {
        get
        {
            Iskra.StdWeb.RTCIceTcpCandidateType? __res_791;
            throw new Exception();
            return __res_791;
        }
    }

    public string? RelatedAddress
    {
        get
        {
            string? __res_792;
            throw new Exception();
            return __res_792;
        }
    }

    public ushort? RelatedPort
    {
        get
        {
            ushort? __res_793;
            throw new Exception();
            return __res_793;
        }
    }

    public string? UsernameFragment
    {
        get
        {
            string? __res_794;
            throw new Exception();
            return __res_794;
        }
    }

    public Iskra.StdWeb.RTCIceServerTransportProtocol? RelayProtocol
    {
        get
        {
            Iskra.StdWeb.RTCIceServerTransportProtocol? __res_795;
            throw new Exception();
            return __res_795;
        }
    }

    public string? Url
    {
        get
        {
            string? __res_796;
            throw new Exception();
            return __res_796;
        }
    }
}

#nullable disable