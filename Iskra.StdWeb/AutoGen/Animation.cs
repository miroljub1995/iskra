// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class Animation(JSObject obj): EventTarget(obj)
{
    public string Id
    {
        get
        {
            string __res_1269;
            string __res_1270 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "id");
            __res_1269 = __res_1270;
            return __res_1269;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.AnimationEffect? Effect
    {
        get
        {
            Iskra.StdWeb.AnimationEffect? __res_1271;
            JSObject? __res_1272 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "effect");
            if (__res_1272 is null)
            {
                __res_1271 = null;
            }
            else
            {
                JSObject __notNullable_1273 = (JSObject)__res_1272;
                throw new Exception("Marshaller from \"__notNullable_1273\" to \"__res_1271\" not supported.");
            }
            return __res_1271;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.AnimationTimeline? Timeline
    {
        get
        {
            Iskra.StdWeb.AnimationTimeline? __res_1274;
            JSObject? __res_1275 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "timeline");
            if (__res_1275 is null)
            {
                __res_1274 = null;
            }
            else
            {
                JSObject __notNullable_1276 = (JSObject)__res_1275;
                throw new Exception("Marshaller from \"__notNullable_1276\" to \"__res_1274\" not supported.");
            }
            return __res_1274;
        }
        set
        {
            throw new Exception();
        }
    }

    public double PlaybackRate
    {
        get
        {
            double __res_1277;
            double __res_1278 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "playbackRate");
            __res_1277 = __res_1278;
            return __res_1277;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.AnimationPlayState PlayState
    {
        get
        {
            Iskra.StdWeb.AnimationPlayState __res_1279;
            JSObject __res_1280 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "playState");
            throw new Exception("Marshaller from \"__res_1280\" to \"__res_1279\" not supported.");
            return __res_1279;
        }
    }

    public Iskra.StdWeb.AnimationReplaceState ReplaceState
    {
        get
        {
            Iskra.StdWeb.AnimationReplaceState __res_1281;
            JSObject __res_1282 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "replaceState");
            throw new Exception("Marshaller from \"__res_1282\" to \"__res_1281\" not supported.");
            return __res_1281;
        }
    }

    public bool Pending
    {
        get
        {
            bool __res_1283;
            bool __res_1284 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "pending");
            __res_1283 = __res_1284;
            return __res_1283;
        }
    }

    public object Ready
    {
        get
        {
            object __res_1285;
            throw new Exception();
            return __res_1285;
        }
    }

    public object Finished
    {
        get
        {
            object __res_1286;
            throw new Exception();
            return __res_1286;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onfinish
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1287;
            JSObject? __res_1288 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onfinish");
            if (__res_1288 is null)
            {
                __res_1287 = null;
            }
            else
            {
                JSObject __notNullable_1289 = (JSObject)__res_1288;
                throw new Exception("Marshaller from \"__notNullable_1289\" to \"__res_1287\" not supported.");
            }
            return __res_1287;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Oncancel
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1290;
            JSObject? __res_1291 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "oncancel");
            if (__res_1291 is null)
            {
                __res_1290 = null;
            }
            else
            {
                JSObject __notNullable_1292 = (JSObject)__res_1291;
                throw new Exception("Marshaller from \"__notNullable_1292\" to \"__res_1290\" not supported.");
            }
            return __res_1290;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onremove
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1293;
            JSObject? __res_1294 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onremove");
            if (__res_1294 is null)
            {
                __res_1293 = null;
            }
            else
            {
                JSObject __notNullable_1295 = (JSObject)__res_1294;
                throw new Exception("Marshaller from \"__notNullable_1295\" to \"__res_1293\" not supported.");
            }
            return __res_1293;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable