// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class Animation(JSObject obj): EventTarget(obj)
{
    public string Id
    {
        get
        {
            string __res_631;
            throw new Exception();
            return __res_631;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.AnimationEffect? Effect
    {
        get
        {
            Iskra.StdWeb.AnimationEffect? __res_632;
            throw new Exception();
            return __res_632;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.AnimationTimeline? Timeline
    {
        get
        {
            Iskra.StdWeb.AnimationTimeline? __res_633;
            throw new Exception();
            return __res_633;
        }
        set
        {
            throw new Exception();
        }
    }

    public double PlaybackRate
    {
        get
        {
            double __res_634;
            throw new Exception();
            return __res_634;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.AnimationPlayState PlayState
    {
        get
        {
            Iskra.StdWeb.AnimationPlayState __res_635;
            throw new Exception();
            return __res_635;
        }
    }

    public Iskra.StdWeb.AnimationReplaceState ReplaceState
    {
        get
        {
            Iskra.StdWeb.AnimationReplaceState __res_636;
            throw new Exception();
            return __res_636;
        }
    }

    public bool Pending
    {
        get
        {
            bool __res_637;
            __res_637 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "pending");
            return __res_637;
        }
    }

    public object Ready
    {
        get
        {
            object __res_638;
            throw new Exception();
            return __res_638;
        }
    }

    public object Finished
    {
        get
        {
            object __res_639;
            throw new Exception();
            return __res_639;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onfinish
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_640;
            throw new Exception();
            return __res_640;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Oncancel
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_641;
            throw new Exception();
            return __res_641;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onremove
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_642;
            throw new Exception();
            return __res_642;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable