// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class RTCDtlsTransport(JSObject obj): EventTarget(obj)
{
    public Iskra.StdWeb.RTCIceTransport IceTransport
    {
        get
        {
            Iskra.StdWeb.RTCIceTransport __res_1699;
            JSObject __res_1700 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "iceTransport");
            throw new Exception("Marshaller from \"__res_1700\" to \"__res_1699\" not supported.");
            return __res_1699;
        }
    }

    public Iskra.StdWeb.RTCDtlsTransportState State
    {
        get
        {
            Iskra.StdWeb.RTCDtlsTransportState __res_1701;
            JSObject __res_1702 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "state");
            throw new Exception("Marshaller from \"__res_1702\" to \"__res_1701\" not supported.");
            return __res_1701;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onstatechange
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1703;
            JSObject? __res_1704 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onstatechange");
            if (__res_1704 is null)
            {
                __res_1703 = null;
            }
            else
            {
                JSObject __notNullable_1705 = (JSObject)__res_1704;
                throw new Exception("Marshaller from \"__notNullable_1705\" to \"__res_1703\" not supported.");
            }
            return __res_1703;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onerror
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1706;
            JSObject? __res_1707 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onerror");
            if (__res_1707 is null)
            {
                __res_1706 = null;
            }
            else
            {
                JSObject __notNullable_1708 = (JSObject)__res_1707;
                throw new Exception("Marshaller from \"__notNullable_1708\" to \"__res_1706\" not supported.");
            }
            return __res_1706;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable