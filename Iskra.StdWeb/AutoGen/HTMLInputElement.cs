// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class HTMLInputElement(JSObject obj): HTMLElement(obj)
{
    public string Accept
    {
        get
        {
            string __res_5009;
            string __res_5010 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "accept");
            __res_5009 = __res_5010;
            return __res_5009;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool Alpha
    {
        get
        {
            bool __res_5011;
            bool __res_5012 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "alpha");
            __res_5011 = __res_5012;
            return __res_5011;
        }
        set
        {
            throw new Exception();
        }
    }

    public string Alt
    {
        get
        {
            string __res_5013;
            string __res_5014 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "alt");
            __res_5013 = __res_5014;
            return __res_5013;
        }
        set
        {
            throw new Exception();
        }
    }

    public string Autocomplete
    {
        get
        {
            string __res_5015;
            string __res_5016 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "autocomplete");
            __res_5015 = __res_5016;
            return __res_5015;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool DefaultChecked
    {
        get
        {
            bool __res_5017;
            bool __res_5018 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "defaultChecked");
            __res_5017 = __res_5018;
            return __res_5017;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool Checked
    {
        get
        {
            bool __res_5019;
            bool __res_5020 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "checked");
            __res_5019 = __res_5020;
            return __res_5019;
        }
        set
        {
            throw new Exception();
        }
    }

    public string ColorSpace
    {
        get
        {
            string __res_5021;
            string __res_5022 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "colorSpace");
            __res_5021 = __res_5022;
            return __res_5021;
        }
        set
        {
            throw new Exception();
        }
    }

    public string DirName
    {
        get
        {
            string __res_5023;
            string __res_5024 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "dirName");
            __res_5023 = __res_5024;
            return __res_5023;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool Disabled
    {
        get
        {
            bool __res_5025;
            bool __res_5026 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "disabled");
            __res_5025 = __res_5026;
            return __res_5025;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.HTMLFormElement? Form
    {
        get
        {
            Iskra.StdWeb.HTMLFormElement? __res_5027;
            JSObject? __res_5028 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "form");
            if (__res_5028 is null)
            {
                __res_5027 = null;
            }
            else
            {
                JSObject __notNullable_5029 = (JSObject)__res_5028;
                throw new Exception("Marshaller from \"__notNullable_5029\" to \"__res_5027\" not supported.");
            }
            return __res_5027;
        }
    }

    public Iskra.StdWeb.FileList? Files
    {
        get
        {
            Iskra.StdWeb.FileList? __res_5030;
            JSObject? __res_5031 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "files");
            if (__res_5031 is null)
            {
                __res_5030 = null;
            }
            else
            {
                JSObject __notNullable_5032 = (JSObject)__res_5031;
                throw new Exception("Marshaller from \"__notNullable_5032\" to \"__res_5030\" not supported.");
            }
            return __res_5030;
        }
        set
        {
            throw new Exception();
        }
    }

    public string FormAction
    {
        get
        {
            string __res_5033;
            string __res_5034 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "formAction");
            __res_5033 = __res_5034;
            return __res_5033;
        }
        set
        {
            throw new Exception();
        }
    }

    public string FormEnctype
    {
        get
        {
            string __res_5035;
            string __res_5036 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "formEnctype");
            __res_5035 = __res_5036;
            return __res_5035;
        }
        set
        {
            throw new Exception();
        }
    }

    public string FormMethod
    {
        get
        {
            string __res_5037;
            string __res_5038 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "formMethod");
            __res_5037 = __res_5038;
            return __res_5037;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool FormNoValidate
    {
        get
        {
            bool __res_5039;
            bool __res_5040 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "formNoValidate");
            __res_5039 = __res_5040;
            return __res_5039;
        }
        set
        {
            throw new Exception();
        }
    }

    public string FormTarget
    {
        get
        {
            string __res_5041;
            string __res_5042 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "formTarget");
            __res_5041 = __res_5042;
            return __res_5041;
        }
        set
        {
            throw new Exception();
        }
    }

    public uint Height
    {
        get
        {
            uint __res_5043;
            double __res_5044 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "height");
            __res_5043 = Convert.ToUInt32(__res_5044);
            return __res_5043;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool Indeterminate
    {
        get
        {
            bool __res_5045;
            bool __res_5046 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "indeterminate");
            __res_5045 = __res_5046;
            return __res_5045;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.HTMLDataListElement? List
    {
        get
        {
            Iskra.StdWeb.HTMLDataListElement? __res_5047;
            JSObject? __res_5048 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "list");
            if (__res_5048 is null)
            {
                __res_5047 = null;
            }
            else
            {
                JSObject __notNullable_5049 = (JSObject)__res_5048;
                throw new Exception("Marshaller from \"__notNullable_5049\" to \"__res_5047\" not supported.");
            }
            return __res_5047;
        }
    }

    public string Max
    {
        get
        {
            string __res_5050;
            string __res_5051 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "max");
            __res_5050 = __res_5051;
            return __res_5050;
        }
        set
        {
            throw new Exception();
        }
    }

    public int MaxLength
    {
        get
        {
            int __res_5052;
            double __res_5053 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "maxLength");
            __res_5052 = Convert.ToInt32(__res_5053);
            return __res_5052;
        }
        set
        {
            throw new Exception();
        }
    }

    public string Min
    {
        get
        {
            string __res_5054;
            string __res_5055 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "min");
            __res_5054 = __res_5055;
            return __res_5054;
        }
        set
        {
            throw new Exception();
        }
    }

    public int MinLength
    {
        get
        {
            int __res_5056;
            double __res_5057 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "minLength");
            __res_5056 = Convert.ToInt32(__res_5057);
            return __res_5056;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool Multiple
    {
        get
        {
            bool __res_5058;
            bool __res_5059 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "multiple");
            __res_5058 = __res_5059;
            return __res_5058;
        }
        set
        {
            throw new Exception();
        }
    }

    public string Name
    {
        get
        {
            string __res_5060;
            string __res_5061 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "name");
            __res_5060 = __res_5061;
            return __res_5060;
        }
        set
        {
            throw new Exception();
        }
    }

    public string Pattern
    {
        get
        {
            string __res_5062;
            string __res_5063 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "pattern");
            __res_5062 = __res_5063;
            return __res_5062;
        }
        set
        {
            throw new Exception();
        }
    }

    public string Placeholder
    {
        get
        {
            string __res_5064;
            string __res_5065 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "placeholder");
            __res_5064 = __res_5065;
            return __res_5064;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool ReadOnly
    {
        get
        {
            bool __res_5066;
            bool __res_5067 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "readOnly");
            __res_5066 = __res_5067;
            return __res_5066;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool Required
    {
        get
        {
            bool __res_5068;
            bool __res_5069 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "required");
            __res_5068 = __res_5069;
            return __res_5068;
        }
        set
        {
            throw new Exception();
        }
    }

    public uint Size
    {
        get
        {
            uint __res_5070;
            double __res_5071 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "size");
            __res_5070 = Convert.ToUInt32(__res_5071);
            return __res_5070;
        }
        set
        {
            throw new Exception();
        }
    }

    public string Src
    {
        get
        {
            string __res_5072;
            string __res_5073 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "src");
            __res_5072 = __res_5073;
            return __res_5072;
        }
        set
        {
            throw new Exception();
        }
    }

    public string Step
    {
        get
        {
            string __res_5074;
            string __res_5075 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "step");
            __res_5074 = __res_5075;
            return __res_5074;
        }
        set
        {
            throw new Exception();
        }
    }

    public string Type
    {
        get
        {
            string __res_5076;
            string __res_5077 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "type");
            __res_5076 = __res_5077;
            return __res_5076;
        }
        set
        {
            throw new Exception();
        }
    }

    public string DefaultValue
    {
        get
        {
            string __res_5078;
            string __res_5079 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "defaultValue");
            __res_5078 = __res_5079;
            return __res_5078;
        }
        set
        {
            throw new Exception();
        }
    }

    public string Value
    {
        get
        {
            string __res_5080;
            string __res_5081 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "value");
            __res_5080 = __res_5081;
            return __res_5080;
        }
        set
        {
            throw new Exception();
        }
    }

    public JSObject? ValueAsDate
    {
        get
        {
            JSObject? __res_5082;
            JSObject? __res_5083 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "valueAsDate");
            if (__res_5083 is null)
            {
                __res_5082 = null;
            }
            else
            {
                JSObject __notNullable_5084 = (JSObject)__res_5083;
                __res_5082 = __notNullable_5084;
            }
            return __res_5082;
        }
        set
        {
            throw new Exception();
        }
    }

    public double ValueAsNumber
    {
        get
        {
            double __res_5085;
            double __res_5086 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "valueAsNumber");
            __res_5085 = __res_5086;
            return __res_5085;
        }
        set
        {
            throw new Exception();
        }
    }

    public uint Width
    {
        get
        {
            uint __res_5087;
            double __res_5088 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "width");
            __res_5087 = Convert.ToUInt32(__res_5088);
            return __res_5087;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool WillValidate
    {
        get
        {
            bool __res_5089;
            bool __res_5090 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "willValidate");
            __res_5089 = __res_5090;
            return __res_5089;
        }
    }

    public Iskra.StdWeb.ValidityState Validity
    {
        get
        {
            Iskra.StdWeb.ValidityState __res_5091;
            JSObject __res_5092 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "validity");
            throw new Exception("Marshaller from \"__res_5092\" to \"__res_5091\" not supported.");
            return __res_5091;
        }
    }

    public string ValidationMessage
    {
        get
        {
            string __res_5093;
            string __res_5094 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "validationMessage");
            __res_5093 = __res_5094;
            return __res_5093;
        }
    }

    public Iskra.StdWeb.NodeList? Labels
    {
        get
        {
            Iskra.StdWeb.NodeList? __res_5095;
            JSObject? __res_5096 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "labels");
            if (__res_5096 is null)
            {
                __res_5095 = null;
            }
            else
            {
                JSObject __notNullable_5097 = (JSObject)__res_5096;
                throw new Exception("Marshaller from \"__notNullable_5097\" to \"__res_5095\" not supported.");
            }
            return __res_5095;
        }
    }

    public uint? SelectionStart
    {
        get
        {
            uint? __res_5098;
            double? __res_5099 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "selectionStart");
            if (__res_5099 is null)
            {
                __res_5098 = null;
            }
            else
            {
                double __notNullable_5100 = (double)__res_5099;
                __res_5098 = Convert.ToUInt32(__notNullable_5100);
            }
            return __res_5098;
        }
        set
        {
            throw new Exception();
        }
    }

    public uint? SelectionEnd
    {
        get
        {
            uint? __res_5101;
            double? __res_5102 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "selectionEnd");
            if (__res_5102 is null)
            {
                __res_5101 = null;
            }
            else
            {
                double __notNullable_5103 = (double)__res_5102;
                __res_5101 = Convert.ToUInt32(__notNullable_5103);
            }
            return __res_5101;
        }
        set
        {
            throw new Exception();
        }
    }

    public string? SelectionDirection
    {
        get
        {
            string? __res_5104;
            string? __res_5105 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "selectionDirection");
            if (__res_5105 is null)
            {
                __res_5104 = null;
            }
            else
            {
                string __notNullable_5106 = (string)__res_5105;
                __res_5104 = __notNullable_5106;
            }
            return __res_5104;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable