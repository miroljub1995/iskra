// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class BackgroundFetchRegistration(JSObject obj): EventTarget(obj)
{
    public string Id
    {
        get
        {
            string __res_3432;
            string __res_3433 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2(JSObject, "id");
            __res_3432 = __res_3433;
            return __res_3432;
        }
    }

    public ulong UploadTotal
    {
        get
        {
            ulong __res_3434;
            double __res_3435 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "uploadTotal");
            __res_3434 = Convert.ToUInt64(__res_3435);
            return __res_3434;
        }
    }

    public ulong Uploaded
    {
        get
        {
            ulong __res_3436;
            double __res_3437 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "uploaded");
            __res_3436 = Convert.ToUInt64(__res_3437);
            return __res_3436;
        }
    }

    public ulong DownloadTotal
    {
        get
        {
            ulong __res_3438;
            double __res_3439 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "downloadTotal");
            __res_3438 = Convert.ToUInt64(__res_3439);
            return __res_3438;
        }
    }

    public ulong Downloaded
    {
        get
        {
            ulong __res_3440;
            double __res_3441 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "downloaded");
            __res_3440 = Convert.ToUInt64(__res_3441);
            return __res_3440;
        }
    }

    public global::Iskra.StdWeb.BackgroundFetchResult Result
    {
        get
        {
            global::Iskra.StdWeb.BackgroundFetchResult __res_3442;
            JSObject __res_3443 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "result");
            throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = BackgroundFetchResult } not supported.");
            return __res_3442;
        }
    }

    public global::Iskra.StdWeb.BackgroundFetchFailureReason FailureReason
    {
        get
        {
            global::Iskra.StdWeb.BackgroundFetchFailureReason __res_3444;
            JSObject __res_3445 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "failureReason");
            throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = BackgroundFetchFailureReason } not supported.");
            return __res_3444;
        }
    }

    public bool RecordsAvailable
    {
        get
        {
            bool __res_3446;
            bool __res_3447 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "recordsAvailable");
            __res_3446 = __res_3447;
            return __res_3446;
        }
    }

    public global::Iskra.StdWeb.EventHandlerNonNull? Onprogress
    {
        get
        {
            global::Iskra.StdWeb.EventHandlerNonNull? __res_3448;
            JSObject? __res_3449 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "onprogress");
            if (__res_3449 is null)
            {
                __res_3448 = null;
            }
            else
            {
                JSObject __notNullable_3450 = (JSObject)__res_3449;
                throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = EventHandlerNonNull } not supported.");
            }
            return __res_3448;
        }
        set
        {
            JSObject? __marshalledValue_3451;
            if (value is null)
            {
                __marshalledValue_3451 = null;
            }
            else
            {
                global::Iskra.StdWeb.EventHandlerNonNull __notNullable_3452 = (global::Iskra.StdWeb.EventHandlerNonNull)value;
                throw new Exception("Marshaller ToJS from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = EventHandlerNonNull } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } not supported.");
            }
            Iskra.JSCore.Extensions.JSObjectPropertyExtensions.SetPropertyAsJSObjectV2AsNullable(JSObject, "onprogress", __marshalledValue_3451);
        }
    }
}

#nullable disable