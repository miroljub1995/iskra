// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class BackgroundFetchRegistration(JSObject obj): EventTarget(obj)
{
    public string Id
    {
        get
        {
            string __res_1400;
            throw new Exception();
            return __res_1400;
        }
    }

    public ulong UploadTotal
    {
        get
        {
            ulong __res_1401;
            throw new Exception();
            return __res_1401;
        }
    }

    public ulong Uploaded
    {
        get
        {
            ulong __res_1402;
            throw new Exception();
            return __res_1402;
        }
    }

    public ulong DownloadTotal
    {
        get
        {
            ulong __res_1403;
            throw new Exception();
            return __res_1403;
        }
    }

    public ulong Downloaded
    {
        get
        {
            ulong __res_1404;
            throw new Exception();
            return __res_1404;
        }
    }

    public Iskra.StdWeb.BackgroundFetchResult Result
    {
        get
        {
            Iskra.StdWeb.BackgroundFetchResult __res_1405;
            throw new Exception();
            return __res_1405;
        }
    }

    public Iskra.StdWeb.BackgroundFetchFailureReason FailureReason
    {
        get
        {
            Iskra.StdWeb.BackgroundFetchFailureReason __res_1406;
            throw new Exception();
            return __res_1406;
        }
    }

    public bool RecordsAvailable
    {
        get
        {
            bool __res_1407;
            __res_1407 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "recordsAvailable");
            return __res_1407;
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onprogress
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1408;
            throw new Exception();
            return __res_1408;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable