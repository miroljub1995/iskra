// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class SpeechRecognition(JSObject obj): EventTarget(obj)
{
    public Iskra.StdWeb.SpeechGrammarList Grammars
    {
        get
        {
            Iskra.StdWeb.SpeechGrammarList __res_1620;
            throw new Exception();
            return __res_1620;
        }
        set
        {
            throw new Exception();
        }
    }

    public string Lang
    {
        get
        {
            string __res_1621;
            throw new Exception();
            return __res_1621;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool Continuous
    {
        get
        {
            bool __res_1622;
            __res_1622 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "continuous");
            return __res_1622;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool InterimResults
    {
        get
        {
            bool __res_1623;
            __res_1623 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "interimResults");
            return __res_1623;
        }
        set
        {
            throw new Exception();
        }
    }

    public uint MaxAlternatives
    {
        get
        {
            uint __res_1624;
            throw new Exception();
            return __res_1624;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool ProcessLocally
    {
        get
        {
            bool __res_1625;
            __res_1625 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "processLocally");
            return __res_1625;
        }
        set
        {
            throw new Exception();
        }
    }

    public object Phrases
    {
        get
        {
            object __res_1626;
            throw new Exception();
            return __res_1626;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onaudiostart
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1627;
            throw new Exception();
            return __res_1627;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onsoundstart
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1628;
            throw new Exception();
            return __res_1628;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onspeechstart
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1629;
            throw new Exception();
            return __res_1629;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onspeechend
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1630;
            throw new Exception();
            return __res_1630;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onsoundend
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1631;
            throw new Exception();
            return __res_1631;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onaudioend
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1632;
            throw new Exception();
            return __res_1632;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onresult
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1633;
            throw new Exception();
            return __res_1633;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onnomatch
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1634;
            throw new Exception();
            return __res_1634;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onerror
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1635;
            throw new Exception();
            return __res_1635;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onstart
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1636;
            throw new Exception();
            return __res_1636;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.EventHandlerNonNull? Onend
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_1637;
            throw new Exception();
            return __res_1637;
        }
        set
        {
            throw new Exception();
        }
    }
}

#nullable disable