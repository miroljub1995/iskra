// <auto-generated/>

using System.Runtime.InteropServices.JavaScript;
using Iskra.JSCore;

namespace Iskra.StdWeb;

#nullable enable

public partial class XMLHttpRequest(JSObject obj): XMLHttpRequestEventTarget(obj)
{
    public Iskra.StdWeb.EventHandlerNonNull? Onreadystatechange
    {
        get
        {
            Iskra.StdWeb.EventHandlerNonNull? __res_399;
            throw new Exception();
            return __res_399;
        }
        set
        {
            throw new Exception();
        }
    }

    public ushort ReadyState
    {
        get
        {
            ushort __res_400;
            throw new Exception();
            return __res_400;
        }
    }

    public uint Timeout
    {
        get
        {
            uint __res_401;
            throw new Exception();
            return __res_401;
        }
        set
        {
            throw new Exception();
        }
    }

    public bool WithCredentials
    {
        get
        {
            bool __res_402;
            __res_402 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "withCredentials");
            return __res_402;
        }
        set
        {
            throw new Exception();
        }
    }

    public Iskra.StdWeb.XMLHttpRequestUpload Upload
    {
        get
        {
            Iskra.StdWeb.XMLHttpRequestUpload __res_403;
            throw new Exception();
            return __res_403;
        }
    }

    public string ResponseURL
    {
        get
        {
            string __res_404;
            throw new Exception();
            return __res_404;
        }
    }

    public ushort Status
    {
        get
        {
            ushort __res_405;
            throw new Exception();
            return __res_405;
        }
    }

    public string StatusText
    {
        get
        {
            string __res_406;
            throw new Exception();
            return __res_406;
        }
    }

    public Iskra.StdWeb.XMLHttpRequestResponseType ResponseType
    {
        get
        {
            Iskra.StdWeb.XMLHttpRequestResponseType __res_407;
            throw new Exception();
            return __res_407;
        }
        set
        {
            throw new Exception();
        }
    }

    public object? Response
    {
        get
        {
            object? __res_408;
            throw new Exception();
            return __res_408;
        }
    }

    public string ResponseText
    {
        get
        {
            string __res_409;
            throw new Exception();
            return __res_409;
        }
    }

    public Iskra.StdWeb.Document? ResponseXML
    {
        get
        {
            Iskra.StdWeb.Document? __res_410;
            throw new Exception();
            return __res_410;
        }
    }
}

#nullable disable