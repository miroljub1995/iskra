// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class USBInterface(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public new byte InterfaceNumber
    {
        get
        {
            byte __res_5093;
            double __res_5094 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "interfaceNumber");
            __res_5093 = Convert.ToByte(__res_5094);
            return __res_5093;
        }
    }

    public new global::Iskra.StdWeb.USBAlternateInterface Alternate
    {
        get
        {
            global::Iskra.StdWeb.USBAlternateInterface __res_5095;
            global::System.Runtime.InteropServices.JavaScript.JSObject __res_5096 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "alternate");
            throw new Exception("Marshaller ToManaged from SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = object } to SingleTypeDescription { ExtAttrs = System.Collections.Generic.List`1[Iskra.WebIDLGenerator.Models.ExtendedAttribute], Nullable = False, IdlType = USBAlternateInterface } not supported.");
            return __res_5095;
        }
    }

    public new global::Iskra.JSCore.Generics.FrozenArray<global::Iskra.StdWeb.USBAlternateInterface, global::Iskra.StdWeb.GenericMarshaller.FrozenArray> Alternates
    {
        get
        {
            global::Iskra.JSCore.Generics.FrozenArray<global::Iskra.StdWeb.USBAlternateInterface, global::Iskra.StdWeb.GenericMarshaller.FrozenArray> __res_5097;
            global::System.Runtime.InteropServices.JavaScript.JSObject __propObject_5098;
            __propObject_5098 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "alternates");
            __res_5097 = new global::Iskra.JSCore.Generics.FrozenArray<global::Iskra.StdWeb.USBAlternateInterface, global::Iskra.StdWeb.GenericMarshaller.FrozenArray>(__propObject_5098);
            return __res_5097;
        }
    }

    public new bool Claimed
    {
        get
        {
            bool __res_5099;
            bool __res_5100 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "claimed");
            __res_5099 = __res_5100;
            return __res_5099;
        }
    }
}

#nullable disable