// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class VideoFrame(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public global::Iskra.StdWeb.VideoPixelFormat? Format
    {
        get
        {
            global::Iskra.StdWeb.VideoPixelFormat? __res_4068;
            string? __res_4069 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "format");
            if (__res_4069 is null)
            {
                __res_4068 = null;
            }
            else
            {
                string __notNullable_4070 = (string)__res_4069;
                __res_4068 = global::Iskra.StdWeb.VideoPixelFormat.Create(__notNullable_4070);
            }
            return __res_4068;
        }
    }

    public uint CodedWidth
    {
        get
        {
            uint __res_4071;
            double __res_4072 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "codedWidth");
            __res_4071 = Convert.ToUInt32(__res_4072);
            return __res_4071;
        }
    }

    public uint CodedHeight
    {
        get
        {
            uint __res_4073;
            double __res_4074 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "codedHeight");
            __res_4073 = Convert.ToUInt32(__res_4074);
            return __res_4073;
        }
    }

    public global::Iskra.StdWeb.DOMRectReadOnly? CodedRect
    {
        get
        {
            global::Iskra.StdWeb.DOMRectReadOnly? __res_4075;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_4076 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "codedRect");
            if (__res_4076 is null)
            {
                __res_4075 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_4077 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_4076;
                __res_4075 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.DOMRectReadOnly>(__notNullable_4077);
            }
            return __res_4075;
        }
    }

    public global::Iskra.StdWeb.DOMRectReadOnly? VisibleRect
    {
        get
        {
            global::Iskra.StdWeb.DOMRectReadOnly? __res_4078;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_4079 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "visibleRect");
            if (__res_4079 is null)
            {
                __res_4078 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_4080 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_4079;
                __res_4078 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.DOMRectReadOnly>(__notNullable_4080);
            }
            return __res_4078;
        }
    }

    public double Rotation
    {
        get
        {
            double __res_4081;
            double __res_4082 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "rotation");
            __res_4081 = __res_4082;
            return __res_4081;
        }
    }

    public bool Flip
    {
        get
        {
            bool __res_4083;
            bool __res_4084 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "flip");
            __res_4083 = __res_4084;
            return __res_4083;
        }
    }

    public uint DisplayWidth
    {
        get
        {
            uint __res_4085;
            double __res_4086 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "displayWidth");
            __res_4085 = Convert.ToUInt32(__res_4086);
            return __res_4085;
        }
    }

    public uint DisplayHeight
    {
        get
        {
            uint __res_4087;
            double __res_4088 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "displayHeight");
            __res_4087 = Convert.ToUInt32(__res_4088);
            return __res_4087;
        }
    }

    public ulong? Duration
    {
        get
        {
            ulong? __res_4089;
            double? __res_4090 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "duration");
            if (__res_4090 is null)
            {
                __res_4089 = null;
            }
            else
            {
                double __notNullable_4091 = (double)__res_4090;
                __res_4089 = Convert.ToUInt64(__notNullable_4091);
            }
            return __res_4089;
        }
    }

    public long Timestamp
    {
        get
        {
            long __res_4092;
            double __res_4093 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "timestamp");
            __res_4092 = Convert.ToInt64(__res_4093);
            return __res_4092;
        }
    }

    public global::Iskra.StdWeb.VideoColorSpace ColorSpace
    {
        get
        {
            global::Iskra.StdWeb.VideoColorSpace __res_4094;
            global::System.Runtime.InteropServices.JavaScript.JSObject __res_4095 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "colorSpace");
            __res_4094 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.VideoColorSpace>(__res_4095);
            return __res_4094;
        }
    }
}

#nullable disable