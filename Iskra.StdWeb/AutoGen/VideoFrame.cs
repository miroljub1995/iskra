// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class VideoFrame(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public global::Iskra.StdWeb.VideoPixelFormat? Format
    {
        get
        {
            global::Iskra.StdWeb.VideoPixelFormat? __res_2805;
            string? __res_2806 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "format");
            if (__res_2806 is null)
            {
                __res_2805 = null;
            }
            else
            {
                string __notNullable_2807 = (string)__res_2806;
                __res_2805 = global::Iskra.StdWeb.VideoPixelFormat.Create(__notNullable_2807);
            }
            return __res_2805;
        }
    }

    public uint CodedWidth
    {
        get
        {
            uint __res_2808;
            double __res_2809 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "codedWidth");
            __res_2808 = Convert.ToUInt32(__res_2809);
            return __res_2808;
        }
    }

    public uint CodedHeight
    {
        get
        {
            uint __res_2810;
            double __res_2811 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "codedHeight");
            __res_2810 = Convert.ToUInt32(__res_2811);
            return __res_2810;
        }
    }

    public global::Iskra.StdWeb.DOMRectReadOnly? CodedRect
    {
        get
        {
            global::Iskra.StdWeb.DOMRectReadOnly? __res_2812;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_2813 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "codedRect");
            if (__res_2813 is null)
            {
                __res_2812 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_2814 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_2813;
                __res_2812 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.DOMRectReadOnly>(__notNullable_2814);
            }
            return __res_2812;
        }
    }

    public global::Iskra.StdWeb.DOMRectReadOnly? VisibleRect
    {
        get
        {
            global::Iskra.StdWeb.DOMRectReadOnly? __res_2815;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_2816 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "visibleRect");
            if (__res_2816 is null)
            {
                __res_2815 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_2817 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_2816;
                __res_2815 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.DOMRectReadOnly>(__notNullable_2817);
            }
            return __res_2815;
        }
    }

    public double Rotation
    {
        get
        {
            double __res_2818;
            double __res_2819 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "rotation");
            __res_2818 = __res_2819;
            return __res_2818;
        }
    }

    public bool Flip
    {
        get
        {
            bool __res_2820;
            bool __res_2821 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "flip");
            __res_2820 = __res_2821;
            return __res_2820;
        }
    }

    public uint DisplayWidth
    {
        get
        {
            uint __res_2822;
            double __res_2823 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "displayWidth");
            __res_2822 = Convert.ToUInt32(__res_2823);
            return __res_2822;
        }
    }

    public uint DisplayHeight
    {
        get
        {
            uint __res_2824;
            double __res_2825 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "displayHeight");
            __res_2824 = Convert.ToUInt32(__res_2825);
            return __res_2824;
        }
    }

    public ulong? Duration
    {
        get
        {
            ulong? __res_2826;
            double? __res_2827 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "duration");
            if (__res_2827 is null)
            {
                __res_2826 = null;
            }
            else
            {
                double __notNullable_2828 = (double)__res_2827;
                __res_2826 = Convert.ToUInt64(__notNullable_2828);
            }
            return __res_2826;
        }
    }

    public long Timestamp
    {
        get
        {
            long __res_2829;
            double __res_2830 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "timestamp");
            __res_2829 = Convert.ToInt64(__res_2830);
            return __res_2829;
        }
    }

    public global::Iskra.StdWeb.VideoColorSpace ColorSpace
    {
        get
        {
            global::Iskra.StdWeb.VideoColorSpace __res_2831;
            global::System.Runtime.InteropServices.JavaScript.JSObject __res_2832 = Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "colorSpace");
            __res_2831 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.VideoColorSpace>(__res_2832);
            return __res_2831;
        }
    }
}

#nullable disable