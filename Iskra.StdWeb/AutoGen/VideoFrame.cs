// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public partial class VideoFrame(global::System.Runtime.InteropServices.JavaScript.JSObject obj): global::Iskra.JSCore.JSObjectProxy(obj)
{
    public global::Iskra.StdWeb.VideoPixelFormat? Format
    {
        get
        {
            global::Iskra.StdWeb.VideoPixelFormat? __res_4017;
            string? __res_4018 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsStringV2AsNullable(JSObject, "format");
            if (__res_4018 is null)
            {
                __res_4017 = null;
            }
            else
            {
                string __notNullable_4019 = (string)__res_4018;
                __res_4017 = global::Iskra.StdWeb.VideoPixelFormat.Create(__notNullable_4019);
            }
            return __res_4017;
        }
    }

    public uint CodedWidth
    {
        get
        {
            uint __res_4020;
            double __res_4021 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "codedWidth");
            __res_4020 = Convert.ToUInt32(__res_4021);
            return __res_4020;
        }
    }

    public uint CodedHeight
    {
        get
        {
            uint __res_4022;
            double __res_4023 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "codedHeight");
            __res_4022 = Convert.ToUInt32(__res_4023);
            return __res_4022;
        }
    }

    public global::Iskra.StdWeb.DOMRectReadOnly? CodedRect
    {
        get
        {
            global::Iskra.StdWeb.DOMRectReadOnly? __res_4024;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_4025 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "codedRect");
            if (__res_4025 is null)
            {
                __res_4024 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_4026 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_4025;
                __res_4024 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.DOMRectReadOnly>(__notNullable_4026);
            }
            return __res_4024;
        }
    }

    public global::Iskra.StdWeb.DOMRectReadOnly? VisibleRect
    {
        get
        {
            global::Iskra.StdWeb.DOMRectReadOnly? __res_4027;
            global::System.Runtime.InteropServices.JavaScript.JSObject? __res_4028 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2AsNullable(JSObject, "visibleRect");
            if (__res_4028 is null)
            {
                __res_4027 = null;
            }
            else
            {
                global::System.Runtime.InteropServices.JavaScript.JSObject __notNullable_4029 = (global::System.Runtime.InteropServices.JavaScript.JSObject)__res_4028;
                __res_4027 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.DOMRectReadOnly>(__notNullable_4029);
            }
            return __res_4027;
        }
    }

    public double Rotation
    {
        get
        {
            double __res_4030;
            double __res_4031 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "rotation");
            __res_4030 = __res_4031;
            return __res_4030;
        }
    }

    public bool Flip
    {
        get
        {
            bool __res_4032;
            bool __res_4033 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsBooleanV2(JSObject, "flip");
            __res_4032 = __res_4033;
            return __res_4032;
        }
    }

    public uint DisplayWidth
    {
        get
        {
            uint __res_4034;
            double __res_4035 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "displayWidth");
            __res_4034 = Convert.ToUInt32(__res_4035);
            return __res_4034;
        }
    }

    public uint DisplayHeight
    {
        get
        {
            uint __res_4036;
            double __res_4037 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "displayHeight");
            __res_4036 = Convert.ToUInt32(__res_4037);
            return __res_4036;
        }
    }

    public ulong? Duration
    {
        get
        {
            ulong? __res_4038;
            double? __res_4039 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2AsNullable(JSObject, "duration");
            if (__res_4039 is null)
            {
                __res_4038 = null;
            }
            else
            {
                double __notNullable_4040 = (double)__res_4039;
                __res_4038 = Convert.ToUInt64(__notNullable_4040);
            }
            return __res_4038;
        }
    }

    public long Timestamp
    {
        get
        {
            long __res_4041;
            double __res_4042 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsDoubleV2(JSObject, "timestamp");
            __res_4041 = Convert.ToInt64(__res_4042);
            return __res_4041;
        }
    }

    public global::Iskra.StdWeb.VideoColorSpace ColorSpace
    {
        get
        {
            global::Iskra.StdWeb.VideoColorSpace __res_4043;
            global::System.Runtime.InteropServices.JavaScript.JSObject __res_4044 = global::Iskra.JSCore.Extensions.JSObjectPropertyExtensions.GetPropertyAsJSObjectV2(JSObject, "colorSpace");
            __res_4043 = global::Iskra.JSCore.JSObjectProxyFactory.GetProxy<global::Iskra.StdWeb.VideoColorSpace>(__res_4044);
            return __res_4043;
        }
    }
}

#nullable disable