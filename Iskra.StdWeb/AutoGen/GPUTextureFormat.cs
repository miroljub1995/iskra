// <auto-generated/>

namespace Iskra.StdWeb;

#nullable enable

public sealed partial class GPUTextureFormat
{
    private readonly string _value;

    private GPUTextureFormat(string value)
    {
        _value = value;
    }

    public static readonly GPUTextureFormat R8unorm = new("r8unorm");
    public static readonly GPUTextureFormat R8snorm = new("r8snorm");
    public static readonly GPUTextureFormat R8uint = new("r8uint");
    public static readonly GPUTextureFormat R8sint = new("r8sint");
    public static readonly GPUTextureFormat R16unorm = new("r16unorm");
    public static readonly GPUTextureFormat R16snorm = new("r16snorm");
    public static readonly GPUTextureFormat R16uint = new("r16uint");
    public static readonly GPUTextureFormat R16sint = new("r16sint");
    public static readonly GPUTextureFormat R16float = new("r16float");
    public static readonly GPUTextureFormat Rg8unorm = new("rg8unorm");
    public static readonly GPUTextureFormat Rg8snorm = new("rg8snorm");
    public static readonly GPUTextureFormat Rg8uint = new("rg8uint");
    public static readonly GPUTextureFormat Rg8sint = new("rg8sint");
    public static readonly GPUTextureFormat R32uint = new("r32uint");
    public static readonly GPUTextureFormat R32sint = new("r32sint");
    public static readonly GPUTextureFormat R32float = new("r32float");
    public static readonly GPUTextureFormat Rg16unorm = new("rg16unorm");
    public static readonly GPUTextureFormat Rg16snorm = new("rg16snorm");
    public static readonly GPUTextureFormat Rg16uint = new("rg16uint");
    public static readonly GPUTextureFormat Rg16sint = new("rg16sint");
    public static readonly GPUTextureFormat Rg16float = new("rg16float");
    public static readonly GPUTextureFormat Rgba8unorm = new("rgba8unorm");
    public static readonly GPUTextureFormat Rgba8unorm_srgb = new("rgba8unorm-srgb");
    public static readonly GPUTextureFormat Rgba8snorm = new("rgba8snorm");
    public static readonly GPUTextureFormat Rgba8uint = new("rgba8uint");
    public static readonly GPUTextureFormat Rgba8sint = new("rgba8sint");
    public static readonly GPUTextureFormat Bgra8unorm = new("bgra8unorm");
    public static readonly GPUTextureFormat Bgra8unorm_srgb = new("bgra8unorm-srgb");
    public static readonly GPUTextureFormat Rgb9e5ufloat = new("rgb9e5ufloat");
    public static readonly GPUTextureFormat Rgb10a2uint = new("rgb10a2uint");
    public static readonly GPUTextureFormat Rgb10a2unorm = new("rgb10a2unorm");
    public static readonly GPUTextureFormat Rg11b10ufloat = new("rg11b10ufloat");
    public static readonly GPUTextureFormat Rg32uint = new("rg32uint");
    public static readonly GPUTextureFormat Rg32sint = new("rg32sint");
    public static readonly GPUTextureFormat Rg32float = new("rg32float");
    public static readonly GPUTextureFormat Rgba16unorm = new("rgba16unorm");
    public static readonly GPUTextureFormat Rgba16snorm = new("rgba16snorm");
    public static readonly GPUTextureFormat Rgba16uint = new("rgba16uint");
    public static readonly GPUTextureFormat Rgba16sint = new("rgba16sint");
    public static readonly GPUTextureFormat Rgba16float = new("rgba16float");
    public static readonly GPUTextureFormat Rgba32uint = new("rgba32uint");
    public static readonly GPUTextureFormat Rgba32sint = new("rgba32sint");
    public static readonly GPUTextureFormat Rgba32float = new("rgba32float");
    public static readonly GPUTextureFormat Stencil8 = new("stencil8");
    public static readonly GPUTextureFormat Depth16unorm = new("depth16unorm");
    public static readonly GPUTextureFormat Depth24plus = new("depth24plus");
    public static readonly GPUTextureFormat Depth24plus_stencil8 = new("depth24plus-stencil8");
    public static readonly GPUTextureFormat Depth32float = new("depth32float");
    public static readonly GPUTextureFormat Depth32float_stencil8 = new("depth32float-stencil8");
    public static readonly GPUTextureFormat Bc1_rgba_unorm = new("bc1-rgba-unorm");
    public static readonly GPUTextureFormat Bc1_rgba_unorm_srgb = new("bc1-rgba-unorm-srgb");
    public static readonly GPUTextureFormat Bc2_rgba_unorm = new("bc2-rgba-unorm");
    public static readonly GPUTextureFormat Bc2_rgba_unorm_srgb = new("bc2-rgba-unorm-srgb");
    public static readonly GPUTextureFormat Bc3_rgba_unorm = new("bc3-rgba-unorm");
    public static readonly GPUTextureFormat Bc3_rgba_unorm_srgb = new("bc3-rgba-unorm-srgb");
    public static readonly GPUTextureFormat Bc4_r_unorm = new("bc4-r-unorm");
    public static readonly GPUTextureFormat Bc4_r_snorm = new("bc4-r-snorm");
    public static readonly GPUTextureFormat Bc5_rg_unorm = new("bc5-rg-unorm");
    public static readonly GPUTextureFormat Bc5_rg_snorm = new("bc5-rg-snorm");
    public static readonly GPUTextureFormat Bc6h_rgb_ufloat = new("bc6h-rgb-ufloat");
    public static readonly GPUTextureFormat Bc6h_rgb_float = new("bc6h-rgb-float");
    public static readonly GPUTextureFormat Bc7_rgba_unorm = new("bc7-rgba-unorm");
    public static readonly GPUTextureFormat Bc7_rgba_unorm_srgb = new("bc7-rgba-unorm-srgb");
    public static readonly GPUTextureFormat Etc2_rgb8unorm = new("etc2-rgb8unorm");
    public static readonly GPUTextureFormat Etc2_rgb8unorm_srgb = new("etc2-rgb8unorm-srgb");
    public static readonly GPUTextureFormat Etc2_rgb8a1unorm = new("etc2-rgb8a1unorm");
    public static readonly GPUTextureFormat Etc2_rgb8a1unorm_srgb = new("etc2-rgb8a1unorm-srgb");
    public static readonly GPUTextureFormat Etc2_rgba8unorm = new("etc2-rgba8unorm");
    public static readonly GPUTextureFormat Etc2_rgba8unorm_srgb = new("etc2-rgba8unorm-srgb");
    public static readonly GPUTextureFormat Eac_r11unorm = new("eac-r11unorm");
    public static readonly GPUTextureFormat Eac_r11snorm = new("eac-r11snorm");
    public static readonly GPUTextureFormat Eac_rg11unorm = new("eac-rg11unorm");
    public static readonly GPUTextureFormat Eac_rg11snorm = new("eac-rg11snorm");
    public static readonly GPUTextureFormat Astc_4x4_unorm = new("astc-4x4-unorm");
    public static readonly GPUTextureFormat Astc_4x4_unorm_srgb = new("astc-4x4-unorm-srgb");
    public static readonly GPUTextureFormat Astc_5x4_unorm = new("astc-5x4-unorm");
    public static readonly GPUTextureFormat Astc_5x4_unorm_srgb = new("astc-5x4-unorm-srgb");
    public static readonly GPUTextureFormat Astc_5x5_unorm = new("astc-5x5-unorm");
    public static readonly GPUTextureFormat Astc_5x5_unorm_srgb = new("astc-5x5-unorm-srgb");
    public static readonly GPUTextureFormat Astc_6x5_unorm = new("astc-6x5-unorm");
    public static readonly GPUTextureFormat Astc_6x5_unorm_srgb = new("astc-6x5-unorm-srgb");
    public static readonly GPUTextureFormat Astc_6x6_unorm = new("astc-6x6-unorm");
    public static readonly GPUTextureFormat Astc_6x6_unorm_srgb = new("astc-6x6-unorm-srgb");
    public static readonly GPUTextureFormat Astc_8x5_unorm = new("astc-8x5-unorm");
    public static readonly GPUTextureFormat Astc_8x5_unorm_srgb = new("astc-8x5-unorm-srgb");
    public static readonly GPUTextureFormat Astc_8x6_unorm = new("astc-8x6-unorm");
    public static readonly GPUTextureFormat Astc_8x6_unorm_srgb = new("astc-8x6-unorm-srgb");
    public static readonly GPUTextureFormat Astc_8x8_unorm = new("astc-8x8-unorm");
    public static readonly GPUTextureFormat Astc_8x8_unorm_srgb = new("astc-8x8-unorm-srgb");
    public static readonly GPUTextureFormat Astc_10x5_unorm = new("astc-10x5-unorm");
    public static readonly GPUTextureFormat Astc_10x5_unorm_srgb = new("astc-10x5-unorm-srgb");
    public static readonly GPUTextureFormat Astc_10x6_unorm = new("astc-10x6-unorm");
    public static readonly GPUTextureFormat Astc_10x6_unorm_srgb = new("astc-10x6-unorm-srgb");
    public static readonly GPUTextureFormat Astc_10x8_unorm = new("astc-10x8-unorm");
    public static readonly GPUTextureFormat Astc_10x8_unorm_srgb = new("astc-10x8-unorm-srgb");
    public static readonly GPUTextureFormat Astc_10x10_unorm = new("astc-10x10-unorm");
    public static readonly GPUTextureFormat Astc_10x10_unorm_srgb = new("astc-10x10-unorm-srgb");
    public static readonly GPUTextureFormat Astc_12x10_unorm = new("astc-12x10-unorm");
    public static readonly GPUTextureFormat Astc_12x10_unorm_srgb = new("astc-12x10-unorm-srgb");
    public static readonly GPUTextureFormat Astc_12x12_unorm = new("astc-12x12-unorm");
    public static readonly GPUTextureFormat Astc_12x12_unorm_srgb = new("astc-12x12-unorm-srgb");

    public override string ToString() => _value;

    public static GPUTextureFormat Create(string value) => value switch
    {
        "r8unorm" => R8unorm,
        "r8snorm" => R8snorm,
        "r8uint" => R8uint,
        "r8sint" => R8sint,
        "r16unorm" => R16unorm,
        "r16snorm" => R16snorm,
        "r16uint" => R16uint,
        "r16sint" => R16sint,
        "r16float" => R16float,
        "rg8unorm" => Rg8unorm,
        "rg8snorm" => Rg8snorm,
        "rg8uint" => Rg8uint,
        "rg8sint" => Rg8sint,
        "r32uint" => R32uint,
        "r32sint" => R32sint,
        "r32float" => R32float,
        "rg16unorm" => Rg16unorm,
        "rg16snorm" => Rg16snorm,
        "rg16uint" => Rg16uint,
        "rg16sint" => Rg16sint,
        "rg16float" => Rg16float,
        "rgba8unorm" => Rgba8unorm,
        "rgba8unorm-srgb" => Rgba8unorm_srgb,
        "rgba8snorm" => Rgba8snorm,
        "rgba8uint" => Rgba8uint,
        "rgba8sint" => Rgba8sint,
        "bgra8unorm" => Bgra8unorm,
        "bgra8unorm-srgb" => Bgra8unorm_srgb,
        "rgb9e5ufloat" => Rgb9e5ufloat,
        "rgb10a2uint" => Rgb10a2uint,
        "rgb10a2unorm" => Rgb10a2unorm,
        "rg11b10ufloat" => Rg11b10ufloat,
        "rg32uint" => Rg32uint,
        "rg32sint" => Rg32sint,
        "rg32float" => Rg32float,
        "rgba16unorm" => Rgba16unorm,
        "rgba16snorm" => Rgba16snorm,
        "rgba16uint" => Rgba16uint,
        "rgba16sint" => Rgba16sint,
        "rgba16float" => Rgba16float,
        "rgba32uint" => Rgba32uint,
        "rgba32sint" => Rgba32sint,
        "rgba32float" => Rgba32float,
        "stencil8" => Stencil8,
        "depth16unorm" => Depth16unorm,
        "depth24plus" => Depth24plus,
        "depth24plus-stencil8" => Depth24plus_stencil8,
        "depth32float" => Depth32float,
        "depth32float-stencil8" => Depth32float_stencil8,
        "bc1-rgba-unorm" => Bc1_rgba_unorm,
        "bc1-rgba-unorm-srgb" => Bc1_rgba_unorm_srgb,
        "bc2-rgba-unorm" => Bc2_rgba_unorm,
        "bc2-rgba-unorm-srgb" => Bc2_rgba_unorm_srgb,
        "bc3-rgba-unorm" => Bc3_rgba_unorm,
        "bc3-rgba-unorm-srgb" => Bc3_rgba_unorm_srgb,
        "bc4-r-unorm" => Bc4_r_unorm,
        "bc4-r-snorm" => Bc4_r_snorm,
        "bc5-rg-unorm" => Bc5_rg_unorm,
        "bc5-rg-snorm" => Bc5_rg_snorm,
        "bc6h-rgb-ufloat" => Bc6h_rgb_ufloat,
        "bc6h-rgb-float" => Bc6h_rgb_float,
        "bc7-rgba-unorm" => Bc7_rgba_unorm,
        "bc7-rgba-unorm-srgb" => Bc7_rgba_unorm_srgb,
        "etc2-rgb8unorm" => Etc2_rgb8unorm,
        "etc2-rgb8unorm-srgb" => Etc2_rgb8unorm_srgb,
        "etc2-rgb8a1unorm" => Etc2_rgb8a1unorm,
        "etc2-rgb8a1unorm-srgb" => Etc2_rgb8a1unorm_srgb,
        "etc2-rgba8unorm" => Etc2_rgba8unorm,
        "etc2-rgba8unorm-srgb" => Etc2_rgba8unorm_srgb,
        "eac-r11unorm" => Eac_r11unorm,
        "eac-r11snorm" => Eac_r11snorm,
        "eac-rg11unorm" => Eac_rg11unorm,
        "eac-rg11snorm" => Eac_rg11snorm,
        "astc-4x4-unorm" => Astc_4x4_unorm,
        "astc-4x4-unorm-srgb" => Astc_4x4_unorm_srgb,
        "astc-5x4-unorm" => Astc_5x4_unorm,
        "astc-5x4-unorm-srgb" => Astc_5x4_unorm_srgb,
        "astc-5x5-unorm" => Astc_5x5_unorm,
        "astc-5x5-unorm-srgb" => Astc_5x5_unorm_srgb,
        "astc-6x5-unorm" => Astc_6x5_unorm,
        "astc-6x5-unorm-srgb" => Astc_6x5_unorm_srgb,
        "astc-6x6-unorm" => Astc_6x6_unorm,
        "astc-6x6-unorm-srgb" => Astc_6x6_unorm_srgb,
        "astc-8x5-unorm" => Astc_8x5_unorm,
        "astc-8x5-unorm-srgb" => Astc_8x5_unorm_srgb,
        "astc-8x6-unorm" => Astc_8x6_unorm,
        "astc-8x6-unorm-srgb" => Astc_8x6_unorm_srgb,
        "astc-8x8-unorm" => Astc_8x8_unorm,
        "astc-8x8-unorm-srgb" => Astc_8x8_unorm_srgb,
        "astc-10x5-unorm" => Astc_10x5_unorm,
        "astc-10x5-unorm-srgb" => Astc_10x5_unorm_srgb,
        "astc-10x6-unorm" => Astc_10x6_unorm,
        "astc-10x6-unorm-srgb" => Astc_10x6_unorm_srgb,
        "astc-10x8-unorm" => Astc_10x8_unorm,
        "astc-10x8-unorm-srgb" => Astc_10x8_unorm_srgb,
        "astc-10x10-unorm" => Astc_10x10_unorm,
        "astc-10x10-unorm-srgb" => Astc_10x10_unorm_srgb,
        "astc-12x10-unorm" => Astc_12x10_unorm,
        "astc-12x10-unorm-srgb" => Astc_12x10_unorm_srgb,
        "astc-12x12-unorm" => Astc_12x12_unorm,
        "astc-12x12-unorm-srgb" => Astc_12x12_unorm_srgb,
        _ => throw new ArgumentException($"Invalid value \"{value}\" for GPUTextureFormat", nameof(value)),
    };
}

#nullable disable