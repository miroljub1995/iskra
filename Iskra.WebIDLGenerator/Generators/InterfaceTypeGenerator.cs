using Iskra.WebIDLGenerator.Extensions;
using Iskra.WebIDLGenerator.Models;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Options;

namespace Iskra.WebIDLGenerator.Generators;

public class InterfaceTypeGenerator(
    IServiceProvider provider,
    GenSettings genSettings
)
{
    public string Generate(InterfaceType input)
    {
        var memberTypeGenerator = provider.GetRequiredService<MemberTypeGenerator>();

        var baseTypeName = input.Inheritance ?? "global::Iskra.JSCore.JSObjectProxy";

        List<string> bodyParts = [];

        foreach (var idlInterfaceMemberType in input.Members)
        {
            var part = memberTypeGenerator.Generate(idlInterfaceMemberType, input.Name);
            if (!string.IsNullOrEmpty(part))
            {
                bodyParts.Add(part);
            }
        }

        var body = string.Join("\n\n", bodyParts);

        var content = $$"""
                        // <auto-generated/>

                        namespace {{genSettings.Namespace}};

                        #nullable enable

                        public partial class {{input.Name}}(global::System.Runtime.InteropServices.JavaScript.JSObject obj): {{baseTypeName}}(obj)
                        {
                        {{body.IndentLines(4)}}
                        }

                        #nullable disable
                        """;

        return content;
    }
}