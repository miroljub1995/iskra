namespace Iskra.StdWebGenerator;

public static class DelegateGenerator
{
    public static string Execute(Type type)
    {
        var invokeMethod = type.GetMethod("Invoke");
        if (invokeMethod is null)
        {
            throw new Exception($"The type {type.FullName} is not a delegate");
        }

        var returnType = MyType.From(invokeMethod.ReturnParameter);
        var returnTypeName = TypeNameGenerator.Execute(returnType);
        var parameters = MethodParametersGenerator.Execute(invokeMethod);

        return $$"""
                 // <auto-generated/>

                 using System.Runtime.InteropServices.JavaScript;
                 using Iskra.StdWeb.Utils;

                 namespace Iskra.StdWeb;

                 #nullable enable

                 public delegate {{returnTypeName}} {{type.Name}}({{parameters}});

                 """;
    }
}